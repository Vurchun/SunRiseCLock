
CMSIS_SunRiseClock.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002f00  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c8  08002fc0  08002fc0  00003fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003088  08003088  00005124  2**0
                  CONTENTS
  4 .ARM          00000000  08003088  08003088  00005124  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003088  08003088  00005124  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003088  08003088  00004088  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800308c  0800308c  0000408c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000124  20000000  08003090  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000058  20000124  080031b4  00005124  2**2
                  ALLOC
 10 ._user_heap_stack 00000404  2000017c  080031b4  0000517c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00005124  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001e13  00000000  00000000  0000514c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005b3  00000000  00000000  00006f5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 000009a1  00000000  00000000  00007512  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000150  00000000  00000000  00007eb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001f3  00000000  00000000  00008008  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00009004  00000000  00000000  000081fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002007  00000000  00000000  000111ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00030309  00000000  00000000  00013206  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0004350f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000058c  00000000  00000000  00043554  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000086  00000000  00000000  00043ae0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000124 	.word	0x20000124
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08002fa8 	.word	0x08002fa8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000128 	.word	0x20000128
 8000104:	08002fa8 	.word	0x08002fa8

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	@ 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			@ (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			@ (mov r8, r8)

08000220 <__aeabi_cdrcmple>:
 8000220:	4684      	mov	ip, r0
 8000222:	0010      	movs	r0, r2
 8000224:	4662      	mov	r2, ip
 8000226:	468c      	mov	ip, r1
 8000228:	0019      	movs	r1, r3
 800022a:	4663      	mov	r3, ip
 800022c:	e000      	b.n	8000230 <__aeabi_cdcmpeq>
 800022e:	46c0      	nop			@ (mov r8, r8)

08000230 <__aeabi_cdcmpeq>:
 8000230:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000232:	f000 fc6d 	bl	8000b10 <__ledf2>
 8000236:	2800      	cmp	r0, #0
 8000238:	d401      	bmi.n	800023e <__aeabi_cdcmpeq+0xe>
 800023a:	2100      	movs	r1, #0
 800023c:	42c8      	cmn	r0, r1
 800023e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000240 <__aeabi_dcmpeq>:
 8000240:	b510      	push	{r4, lr}
 8000242:	f000 fbad 	bl	80009a0 <__eqdf2>
 8000246:	4240      	negs	r0, r0
 8000248:	3001      	adds	r0, #1
 800024a:	bd10      	pop	{r4, pc}

0800024c <__aeabi_dcmplt>:
 800024c:	b510      	push	{r4, lr}
 800024e:	f000 fc5f 	bl	8000b10 <__ledf2>
 8000252:	2800      	cmp	r0, #0
 8000254:	db01      	blt.n	800025a <__aeabi_dcmplt+0xe>
 8000256:	2000      	movs	r0, #0
 8000258:	bd10      	pop	{r4, pc}
 800025a:	2001      	movs	r0, #1
 800025c:	bd10      	pop	{r4, pc}
 800025e:	46c0      	nop			@ (mov r8, r8)

08000260 <__aeabi_dcmple>:
 8000260:	b510      	push	{r4, lr}
 8000262:	f000 fc55 	bl	8000b10 <__ledf2>
 8000266:	2800      	cmp	r0, #0
 8000268:	dd01      	ble.n	800026e <__aeabi_dcmple+0xe>
 800026a:	2000      	movs	r0, #0
 800026c:	bd10      	pop	{r4, pc}
 800026e:	2001      	movs	r0, #1
 8000270:	bd10      	pop	{r4, pc}
 8000272:	46c0      	nop			@ (mov r8, r8)

08000274 <__aeabi_dcmpgt>:
 8000274:	b510      	push	{r4, lr}
 8000276:	f000 fbd7 	bl	8000a28 <__gedf2>
 800027a:	2800      	cmp	r0, #0
 800027c:	dc01      	bgt.n	8000282 <__aeabi_dcmpgt+0xe>
 800027e:	2000      	movs	r0, #0
 8000280:	bd10      	pop	{r4, pc}
 8000282:	2001      	movs	r0, #1
 8000284:	bd10      	pop	{r4, pc}
 8000286:	46c0      	nop			@ (mov r8, r8)

08000288 <__aeabi_dcmpge>:
 8000288:	b510      	push	{r4, lr}
 800028a:	f000 fbcd 	bl	8000a28 <__gedf2>
 800028e:	2800      	cmp	r0, #0
 8000290:	da01      	bge.n	8000296 <__aeabi_dcmpge+0xe>
 8000292:	2000      	movs	r0, #0
 8000294:	bd10      	pop	{r4, pc}
 8000296:	2001      	movs	r0, #1
 8000298:	bd10      	pop	{r4, pc}
 800029a:	46c0      	nop			@ (mov r8, r8)

0800029c <__aeabi_d2uiz>:
 800029c:	b570      	push	{r4, r5, r6, lr}
 800029e:	2200      	movs	r2, #0
 80002a0:	4b0c      	ldr	r3, [pc, #48]	@ (80002d4 <__aeabi_d2uiz+0x38>)
 80002a2:	0004      	movs	r4, r0
 80002a4:	000d      	movs	r5, r1
 80002a6:	f7ff ffef 	bl	8000288 <__aeabi_dcmpge>
 80002aa:	2800      	cmp	r0, #0
 80002ac:	d104      	bne.n	80002b8 <__aeabi_d2uiz+0x1c>
 80002ae:	0020      	movs	r0, r4
 80002b0:	0029      	movs	r1, r5
 80002b2:	f001 fb03 	bl	80018bc <__aeabi_d2iz>
 80002b6:	bd70      	pop	{r4, r5, r6, pc}
 80002b8:	4b06      	ldr	r3, [pc, #24]	@ (80002d4 <__aeabi_d2uiz+0x38>)
 80002ba:	2200      	movs	r2, #0
 80002bc:	0020      	movs	r0, r4
 80002be:	0029      	movs	r1, r5
 80002c0:	f000 ff60 	bl	8001184 <__aeabi_dsub>
 80002c4:	f001 fafa 	bl	80018bc <__aeabi_d2iz>
 80002c8:	2380      	movs	r3, #128	@ 0x80
 80002ca:	061b      	lsls	r3, r3, #24
 80002cc:	469c      	mov	ip, r3
 80002ce:	4460      	add	r0, ip
 80002d0:	e7f1      	b.n	80002b6 <__aeabi_d2uiz+0x1a>
 80002d2:	46c0      	nop			@ (mov r8, r8)
 80002d4:	41e00000 	.word	0x41e00000

080002d8 <__aeabi_dadd>:
 80002d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002da:	4657      	mov	r7, sl
 80002dc:	464e      	mov	r6, r9
 80002de:	4645      	mov	r5, r8
 80002e0:	46de      	mov	lr, fp
 80002e2:	b5e0      	push	{r5, r6, r7, lr}
 80002e4:	b083      	sub	sp, #12
 80002e6:	9000      	str	r0, [sp, #0]
 80002e8:	9101      	str	r1, [sp, #4]
 80002ea:	030c      	lsls	r4, r1, #12
 80002ec:	004f      	lsls	r7, r1, #1
 80002ee:	0fce      	lsrs	r6, r1, #31
 80002f0:	0a61      	lsrs	r1, r4, #9
 80002f2:	9c00      	ldr	r4, [sp, #0]
 80002f4:	031d      	lsls	r5, r3, #12
 80002f6:	0f64      	lsrs	r4, r4, #29
 80002f8:	430c      	orrs	r4, r1
 80002fa:	9900      	ldr	r1, [sp, #0]
 80002fc:	9200      	str	r2, [sp, #0]
 80002fe:	9301      	str	r3, [sp, #4]
 8000300:	00c8      	lsls	r0, r1, #3
 8000302:	0059      	lsls	r1, r3, #1
 8000304:	0d4b      	lsrs	r3, r1, #21
 8000306:	4699      	mov	r9, r3
 8000308:	9a00      	ldr	r2, [sp, #0]
 800030a:	9b01      	ldr	r3, [sp, #4]
 800030c:	0a6d      	lsrs	r5, r5, #9
 800030e:	0fd9      	lsrs	r1, r3, #31
 8000310:	0f53      	lsrs	r3, r2, #29
 8000312:	432b      	orrs	r3, r5
 8000314:	469a      	mov	sl, r3
 8000316:	9b00      	ldr	r3, [sp, #0]
 8000318:	0d7f      	lsrs	r7, r7, #21
 800031a:	00da      	lsls	r2, r3, #3
 800031c:	4694      	mov	ip, r2
 800031e:	464a      	mov	r2, r9
 8000320:	46b0      	mov	r8, r6
 8000322:	1aba      	subs	r2, r7, r2
 8000324:	428e      	cmp	r6, r1
 8000326:	d100      	bne.n	800032a <__aeabi_dadd+0x52>
 8000328:	e0b0      	b.n	800048c <__aeabi_dadd+0x1b4>
 800032a:	2a00      	cmp	r2, #0
 800032c:	dc00      	bgt.n	8000330 <__aeabi_dadd+0x58>
 800032e:	e078      	b.n	8000422 <__aeabi_dadd+0x14a>
 8000330:	4649      	mov	r1, r9
 8000332:	2900      	cmp	r1, #0
 8000334:	d100      	bne.n	8000338 <__aeabi_dadd+0x60>
 8000336:	e0e9      	b.n	800050c <__aeabi_dadd+0x234>
 8000338:	49c9      	ldr	r1, [pc, #804]	@ (8000660 <__aeabi_dadd+0x388>)
 800033a:	428f      	cmp	r7, r1
 800033c:	d100      	bne.n	8000340 <__aeabi_dadd+0x68>
 800033e:	e195      	b.n	800066c <__aeabi_dadd+0x394>
 8000340:	2501      	movs	r5, #1
 8000342:	2a38      	cmp	r2, #56	@ 0x38
 8000344:	dc16      	bgt.n	8000374 <__aeabi_dadd+0x9c>
 8000346:	2180      	movs	r1, #128	@ 0x80
 8000348:	4653      	mov	r3, sl
 800034a:	0409      	lsls	r1, r1, #16
 800034c:	430b      	orrs	r3, r1
 800034e:	469a      	mov	sl, r3
 8000350:	2a1f      	cmp	r2, #31
 8000352:	dd00      	ble.n	8000356 <__aeabi_dadd+0x7e>
 8000354:	e1e7      	b.n	8000726 <__aeabi_dadd+0x44e>
 8000356:	2120      	movs	r1, #32
 8000358:	4655      	mov	r5, sl
 800035a:	1a8b      	subs	r3, r1, r2
 800035c:	4661      	mov	r1, ip
 800035e:	409d      	lsls	r5, r3
 8000360:	40d1      	lsrs	r1, r2
 8000362:	430d      	orrs	r5, r1
 8000364:	4661      	mov	r1, ip
 8000366:	4099      	lsls	r1, r3
 8000368:	1e4b      	subs	r3, r1, #1
 800036a:	4199      	sbcs	r1, r3
 800036c:	4653      	mov	r3, sl
 800036e:	40d3      	lsrs	r3, r2
 8000370:	430d      	orrs	r5, r1
 8000372:	1ae4      	subs	r4, r4, r3
 8000374:	1b45      	subs	r5, r0, r5
 8000376:	42a8      	cmp	r0, r5
 8000378:	4180      	sbcs	r0, r0
 800037a:	4240      	negs	r0, r0
 800037c:	1a24      	subs	r4, r4, r0
 800037e:	0223      	lsls	r3, r4, #8
 8000380:	d400      	bmi.n	8000384 <__aeabi_dadd+0xac>
 8000382:	e10f      	b.n	80005a4 <__aeabi_dadd+0x2cc>
 8000384:	0264      	lsls	r4, r4, #9
 8000386:	0a64      	lsrs	r4, r4, #9
 8000388:	2c00      	cmp	r4, #0
 800038a:	d100      	bne.n	800038e <__aeabi_dadd+0xb6>
 800038c:	e139      	b.n	8000602 <__aeabi_dadd+0x32a>
 800038e:	0020      	movs	r0, r4
 8000390:	f001 fb22 	bl	80019d8 <__clzsi2>
 8000394:	0003      	movs	r3, r0
 8000396:	3b08      	subs	r3, #8
 8000398:	2120      	movs	r1, #32
 800039a:	0028      	movs	r0, r5
 800039c:	1aca      	subs	r2, r1, r3
 800039e:	40d0      	lsrs	r0, r2
 80003a0:	409c      	lsls	r4, r3
 80003a2:	0002      	movs	r2, r0
 80003a4:	409d      	lsls	r5, r3
 80003a6:	4322      	orrs	r2, r4
 80003a8:	429f      	cmp	r7, r3
 80003aa:	dd00      	ble.n	80003ae <__aeabi_dadd+0xd6>
 80003ac:	e173      	b.n	8000696 <__aeabi_dadd+0x3be>
 80003ae:	1bd8      	subs	r0, r3, r7
 80003b0:	3001      	adds	r0, #1
 80003b2:	1a09      	subs	r1, r1, r0
 80003b4:	002c      	movs	r4, r5
 80003b6:	408d      	lsls	r5, r1
 80003b8:	40c4      	lsrs	r4, r0
 80003ba:	1e6b      	subs	r3, r5, #1
 80003bc:	419d      	sbcs	r5, r3
 80003be:	0013      	movs	r3, r2
 80003c0:	40c2      	lsrs	r2, r0
 80003c2:	408b      	lsls	r3, r1
 80003c4:	4325      	orrs	r5, r4
 80003c6:	2700      	movs	r7, #0
 80003c8:	0014      	movs	r4, r2
 80003ca:	431d      	orrs	r5, r3
 80003cc:	076b      	lsls	r3, r5, #29
 80003ce:	d009      	beq.n	80003e4 <__aeabi_dadd+0x10c>
 80003d0:	230f      	movs	r3, #15
 80003d2:	402b      	ands	r3, r5
 80003d4:	2b04      	cmp	r3, #4
 80003d6:	d005      	beq.n	80003e4 <__aeabi_dadd+0x10c>
 80003d8:	1d2b      	adds	r3, r5, #4
 80003da:	42ab      	cmp	r3, r5
 80003dc:	41ad      	sbcs	r5, r5
 80003de:	426d      	negs	r5, r5
 80003e0:	1964      	adds	r4, r4, r5
 80003e2:	001d      	movs	r5, r3
 80003e4:	0223      	lsls	r3, r4, #8
 80003e6:	d400      	bmi.n	80003ea <__aeabi_dadd+0x112>
 80003e8:	e12d      	b.n	8000646 <__aeabi_dadd+0x36e>
 80003ea:	4a9d      	ldr	r2, [pc, #628]	@ (8000660 <__aeabi_dadd+0x388>)
 80003ec:	3701      	adds	r7, #1
 80003ee:	4297      	cmp	r7, r2
 80003f0:	d100      	bne.n	80003f4 <__aeabi_dadd+0x11c>
 80003f2:	e0d3      	b.n	800059c <__aeabi_dadd+0x2c4>
 80003f4:	4646      	mov	r6, r8
 80003f6:	499b      	ldr	r1, [pc, #620]	@ (8000664 <__aeabi_dadd+0x38c>)
 80003f8:	08ed      	lsrs	r5, r5, #3
 80003fa:	4021      	ands	r1, r4
 80003fc:	074a      	lsls	r2, r1, #29
 80003fe:	432a      	orrs	r2, r5
 8000400:	057c      	lsls	r4, r7, #21
 8000402:	024d      	lsls	r5, r1, #9
 8000404:	0b2d      	lsrs	r5, r5, #12
 8000406:	0d64      	lsrs	r4, r4, #21
 8000408:	0524      	lsls	r4, r4, #20
 800040a:	432c      	orrs	r4, r5
 800040c:	07f6      	lsls	r6, r6, #31
 800040e:	4334      	orrs	r4, r6
 8000410:	0010      	movs	r0, r2
 8000412:	0021      	movs	r1, r4
 8000414:	b003      	add	sp, #12
 8000416:	bcf0      	pop	{r4, r5, r6, r7}
 8000418:	46bb      	mov	fp, r7
 800041a:	46b2      	mov	sl, r6
 800041c:	46a9      	mov	r9, r5
 800041e:	46a0      	mov	r8, r4
 8000420:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000422:	2a00      	cmp	r2, #0
 8000424:	d100      	bne.n	8000428 <__aeabi_dadd+0x150>
 8000426:	e084      	b.n	8000532 <__aeabi_dadd+0x25a>
 8000428:	464a      	mov	r2, r9
 800042a:	1bd2      	subs	r2, r2, r7
 800042c:	2f00      	cmp	r7, #0
 800042e:	d000      	beq.n	8000432 <__aeabi_dadd+0x15a>
 8000430:	e16d      	b.n	800070e <__aeabi_dadd+0x436>
 8000432:	0025      	movs	r5, r4
 8000434:	4305      	orrs	r5, r0
 8000436:	d100      	bne.n	800043a <__aeabi_dadd+0x162>
 8000438:	e127      	b.n	800068a <__aeabi_dadd+0x3b2>
 800043a:	1e56      	subs	r6, r2, #1
 800043c:	2a01      	cmp	r2, #1
 800043e:	d100      	bne.n	8000442 <__aeabi_dadd+0x16a>
 8000440:	e23b      	b.n	80008ba <__aeabi_dadd+0x5e2>
 8000442:	4d87      	ldr	r5, [pc, #540]	@ (8000660 <__aeabi_dadd+0x388>)
 8000444:	42aa      	cmp	r2, r5
 8000446:	d100      	bne.n	800044a <__aeabi_dadd+0x172>
 8000448:	e26a      	b.n	8000920 <__aeabi_dadd+0x648>
 800044a:	2501      	movs	r5, #1
 800044c:	2e38      	cmp	r6, #56	@ 0x38
 800044e:	dc12      	bgt.n	8000476 <__aeabi_dadd+0x19e>
 8000450:	0032      	movs	r2, r6
 8000452:	2a1f      	cmp	r2, #31
 8000454:	dd00      	ble.n	8000458 <__aeabi_dadd+0x180>
 8000456:	e1f8      	b.n	800084a <__aeabi_dadd+0x572>
 8000458:	2620      	movs	r6, #32
 800045a:	0025      	movs	r5, r4
 800045c:	1ab6      	subs	r6, r6, r2
 800045e:	0007      	movs	r7, r0
 8000460:	4653      	mov	r3, sl
 8000462:	40b0      	lsls	r0, r6
 8000464:	40d4      	lsrs	r4, r2
 8000466:	40b5      	lsls	r5, r6
 8000468:	40d7      	lsrs	r7, r2
 800046a:	1e46      	subs	r6, r0, #1
 800046c:	41b0      	sbcs	r0, r6
 800046e:	1b1b      	subs	r3, r3, r4
 8000470:	469a      	mov	sl, r3
 8000472:	433d      	orrs	r5, r7
 8000474:	4305      	orrs	r5, r0
 8000476:	4662      	mov	r2, ip
 8000478:	1b55      	subs	r5, r2, r5
 800047a:	45ac      	cmp	ip, r5
 800047c:	4192      	sbcs	r2, r2
 800047e:	4653      	mov	r3, sl
 8000480:	4252      	negs	r2, r2
 8000482:	000e      	movs	r6, r1
 8000484:	464f      	mov	r7, r9
 8000486:	4688      	mov	r8, r1
 8000488:	1a9c      	subs	r4, r3, r2
 800048a:	e778      	b.n	800037e <__aeabi_dadd+0xa6>
 800048c:	2a00      	cmp	r2, #0
 800048e:	dc00      	bgt.n	8000492 <__aeabi_dadd+0x1ba>
 8000490:	e08e      	b.n	80005b0 <__aeabi_dadd+0x2d8>
 8000492:	4649      	mov	r1, r9
 8000494:	2900      	cmp	r1, #0
 8000496:	d175      	bne.n	8000584 <__aeabi_dadd+0x2ac>
 8000498:	4661      	mov	r1, ip
 800049a:	4653      	mov	r3, sl
 800049c:	4319      	orrs	r1, r3
 800049e:	d100      	bne.n	80004a2 <__aeabi_dadd+0x1ca>
 80004a0:	e0f6      	b.n	8000690 <__aeabi_dadd+0x3b8>
 80004a2:	1e51      	subs	r1, r2, #1
 80004a4:	2a01      	cmp	r2, #1
 80004a6:	d100      	bne.n	80004aa <__aeabi_dadd+0x1d2>
 80004a8:	e191      	b.n	80007ce <__aeabi_dadd+0x4f6>
 80004aa:	4d6d      	ldr	r5, [pc, #436]	@ (8000660 <__aeabi_dadd+0x388>)
 80004ac:	42aa      	cmp	r2, r5
 80004ae:	d100      	bne.n	80004b2 <__aeabi_dadd+0x1da>
 80004b0:	e0dc      	b.n	800066c <__aeabi_dadd+0x394>
 80004b2:	2501      	movs	r5, #1
 80004b4:	2938      	cmp	r1, #56	@ 0x38
 80004b6:	dc14      	bgt.n	80004e2 <__aeabi_dadd+0x20a>
 80004b8:	000a      	movs	r2, r1
 80004ba:	2a1f      	cmp	r2, #31
 80004bc:	dd00      	ble.n	80004c0 <__aeabi_dadd+0x1e8>
 80004be:	e1a2      	b.n	8000806 <__aeabi_dadd+0x52e>
 80004c0:	2120      	movs	r1, #32
 80004c2:	4653      	mov	r3, sl
 80004c4:	1a89      	subs	r1, r1, r2
 80004c6:	408b      	lsls	r3, r1
 80004c8:	001d      	movs	r5, r3
 80004ca:	4663      	mov	r3, ip
 80004cc:	40d3      	lsrs	r3, r2
 80004ce:	431d      	orrs	r5, r3
 80004d0:	4663      	mov	r3, ip
 80004d2:	408b      	lsls	r3, r1
 80004d4:	0019      	movs	r1, r3
 80004d6:	1e4b      	subs	r3, r1, #1
 80004d8:	4199      	sbcs	r1, r3
 80004da:	4653      	mov	r3, sl
 80004dc:	40d3      	lsrs	r3, r2
 80004de:	430d      	orrs	r5, r1
 80004e0:	18e4      	adds	r4, r4, r3
 80004e2:	182d      	adds	r5, r5, r0
 80004e4:	4285      	cmp	r5, r0
 80004e6:	4180      	sbcs	r0, r0
 80004e8:	4240      	negs	r0, r0
 80004ea:	1824      	adds	r4, r4, r0
 80004ec:	0223      	lsls	r3, r4, #8
 80004ee:	d559      	bpl.n	80005a4 <__aeabi_dadd+0x2cc>
 80004f0:	4b5b      	ldr	r3, [pc, #364]	@ (8000660 <__aeabi_dadd+0x388>)
 80004f2:	3701      	adds	r7, #1
 80004f4:	429f      	cmp	r7, r3
 80004f6:	d051      	beq.n	800059c <__aeabi_dadd+0x2c4>
 80004f8:	2101      	movs	r1, #1
 80004fa:	4b5a      	ldr	r3, [pc, #360]	@ (8000664 <__aeabi_dadd+0x38c>)
 80004fc:	086a      	lsrs	r2, r5, #1
 80004fe:	401c      	ands	r4, r3
 8000500:	4029      	ands	r1, r5
 8000502:	430a      	orrs	r2, r1
 8000504:	07e5      	lsls	r5, r4, #31
 8000506:	4315      	orrs	r5, r2
 8000508:	0864      	lsrs	r4, r4, #1
 800050a:	e75f      	b.n	80003cc <__aeabi_dadd+0xf4>
 800050c:	4661      	mov	r1, ip
 800050e:	4653      	mov	r3, sl
 8000510:	4319      	orrs	r1, r3
 8000512:	d100      	bne.n	8000516 <__aeabi_dadd+0x23e>
 8000514:	e0bc      	b.n	8000690 <__aeabi_dadd+0x3b8>
 8000516:	1e51      	subs	r1, r2, #1
 8000518:	2a01      	cmp	r2, #1
 800051a:	d100      	bne.n	800051e <__aeabi_dadd+0x246>
 800051c:	e164      	b.n	80007e8 <__aeabi_dadd+0x510>
 800051e:	4d50      	ldr	r5, [pc, #320]	@ (8000660 <__aeabi_dadd+0x388>)
 8000520:	42aa      	cmp	r2, r5
 8000522:	d100      	bne.n	8000526 <__aeabi_dadd+0x24e>
 8000524:	e16a      	b.n	80007fc <__aeabi_dadd+0x524>
 8000526:	2501      	movs	r5, #1
 8000528:	2938      	cmp	r1, #56	@ 0x38
 800052a:	dd00      	ble.n	800052e <__aeabi_dadd+0x256>
 800052c:	e722      	b.n	8000374 <__aeabi_dadd+0x9c>
 800052e:	000a      	movs	r2, r1
 8000530:	e70e      	b.n	8000350 <__aeabi_dadd+0x78>
 8000532:	4a4d      	ldr	r2, [pc, #308]	@ (8000668 <__aeabi_dadd+0x390>)
 8000534:	1c7d      	adds	r5, r7, #1
 8000536:	4215      	tst	r5, r2
 8000538:	d000      	beq.n	800053c <__aeabi_dadd+0x264>
 800053a:	e0d0      	b.n	80006de <__aeabi_dadd+0x406>
 800053c:	0025      	movs	r5, r4
 800053e:	4662      	mov	r2, ip
 8000540:	4653      	mov	r3, sl
 8000542:	4305      	orrs	r5, r0
 8000544:	431a      	orrs	r2, r3
 8000546:	2f00      	cmp	r7, #0
 8000548:	d000      	beq.n	800054c <__aeabi_dadd+0x274>
 800054a:	e137      	b.n	80007bc <__aeabi_dadd+0x4e4>
 800054c:	2d00      	cmp	r5, #0
 800054e:	d100      	bne.n	8000552 <__aeabi_dadd+0x27a>
 8000550:	e1a8      	b.n	80008a4 <__aeabi_dadd+0x5cc>
 8000552:	2a00      	cmp	r2, #0
 8000554:	d100      	bne.n	8000558 <__aeabi_dadd+0x280>
 8000556:	e16a      	b.n	800082e <__aeabi_dadd+0x556>
 8000558:	4663      	mov	r3, ip
 800055a:	1ac5      	subs	r5, r0, r3
 800055c:	4653      	mov	r3, sl
 800055e:	1ae2      	subs	r2, r4, r3
 8000560:	42a8      	cmp	r0, r5
 8000562:	419b      	sbcs	r3, r3
 8000564:	425b      	negs	r3, r3
 8000566:	1ad3      	subs	r3, r2, r3
 8000568:	021a      	lsls	r2, r3, #8
 800056a:	d400      	bmi.n	800056e <__aeabi_dadd+0x296>
 800056c:	e203      	b.n	8000976 <__aeabi_dadd+0x69e>
 800056e:	4663      	mov	r3, ip
 8000570:	1a1d      	subs	r5, r3, r0
 8000572:	45ac      	cmp	ip, r5
 8000574:	4192      	sbcs	r2, r2
 8000576:	4653      	mov	r3, sl
 8000578:	4252      	negs	r2, r2
 800057a:	1b1c      	subs	r4, r3, r4
 800057c:	000e      	movs	r6, r1
 800057e:	4688      	mov	r8, r1
 8000580:	1aa4      	subs	r4, r4, r2
 8000582:	e723      	b.n	80003cc <__aeabi_dadd+0xf4>
 8000584:	4936      	ldr	r1, [pc, #216]	@ (8000660 <__aeabi_dadd+0x388>)
 8000586:	428f      	cmp	r7, r1
 8000588:	d070      	beq.n	800066c <__aeabi_dadd+0x394>
 800058a:	2501      	movs	r5, #1
 800058c:	2a38      	cmp	r2, #56	@ 0x38
 800058e:	dca8      	bgt.n	80004e2 <__aeabi_dadd+0x20a>
 8000590:	2180      	movs	r1, #128	@ 0x80
 8000592:	4653      	mov	r3, sl
 8000594:	0409      	lsls	r1, r1, #16
 8000596:	430b      	orrs	r3, r1
 8000598:	469a      	mov	sl, r3
 800059a:	e78e      	b.n	80004ba <__aeabi_dadd+0x1e2>
 800059c:	003c      	movs	r4, r7
 800059e:	2500      	movs	r5, #0
 80005a0:	2200      	movs	r2, #0
 80005a2:	e731      	b.n	8000408 <__aeabi_dadd+0x130>
 80005a4:	2307      	movs	r3, #7
 80005a6:	402b      	ands	r3, r5
 80005a8:	2b00      	cmp	r3, #0
 80005aa:	d000      	beq.n	80005ae <__aeabi_dadd+0x2d6>
 80005ac:	e710      	b.n	80003d0 <__aeabi_dadd+0xf8>
 80005ae:	e093      	b.n	80006d8 <__aeabi_dadd+0x400>
 80005b0:	2a00      	cmp	r2, #0
 80005b2:	d074      	beq.n	800069e <__aeabi_dadd+0x3c6>
 80005b4:	464a      	mov	r2, r9
 80005b6:	1bd2      	subs	r2, r2, r7
 80005b8:	2f00      	cmp	r7, #0
 80005ba:	d100      	bne.n	80005be <__aeabi_dadd+0x2e6>
 80005bc:	e0c7      	b.n	800074e <__aeabi_dadd+0x476>
 80005be:	4928      	ldr	r1, [pc, #160]	@ (8000660 <__aeabi_dadd+0x388>)
 80005c0:	4589      	cmp	r9, r1
 80005c2:	d100      	bne.n	80005c6 <__aeabi_dadd+0x2ee>
 80005c4:	e185      	b.n	80008d2 <__aeabi_dadd+0x5fa>
 80005c6:	2501      	movs	r5, #1
 80005c8:	2a38      	cmp	r2, #56	@ 0x38
 80005ca:	dc12      	bgt.n	80005f2 <__aeabi_dadd+0x31a>
 80005cc:	2180      	movs	r1, #128	@ 0x80
 80005ce:	0409      	lsls	r1, r1, #16
 80005d0:	430c      	orrs	r4, r1
 80005d2:	2a1f      	cmp	r2, #31
 80005d4:	dd00      	ble.n	80005d8 <__aeabi_dadd+0x300>
 80005d6:	e1ab      	b.n	8000930 <__aeabi_dadd+0x658>
 80005d8:	2120      	movs	r1, #32
 80005da:	0025      	movs	r5, r4
 80005dc:	1a89      	subs	r1, r1, r2
 80005de:	0007      	movs	r7, r0
 80005e0:	4088      	lsls	r0, r1
 80005e2:	408d      	lsls	r5, r1
 80005e4:	40d7      	lsrs	r7, r2
 80005e6:	1e41      	subs	r1, r0, #1
 80005e8:	4188      	sbcs	r0, r1
 80005ea:	40d4      	lsrs	r4, r2
 80005ec:	433d      	orrs	r5, r7
 80005ee:	4305      	orrs	r5, r0
 80005f0:	44a2      	add	sl, r4
 80005f2:	4465      	add	r5, ip
 80005f4:	4565      	cmp	r5, ip
 80005f6:	4192      	sbcs	r2, r2
 80005f8:	4252      	negs	r2, r2
 80005fa:	4452      	add	r2, sl
 80005fc:	0014      	movs	r4, r2
 80005fe:	464f      	mov	r7, r9
 8000600:	e774      	b.n	80004ec <__aeabi_dadd+0x214>
 8000602:	0028      	movs	r0, r5
 8000604:	f001 f9e8 	bl	80019d8 <__clzsi2>
 8000608:	0003      	movs	r3, r0
 800060a:	3318      	adds	r3, #24
 800060c:	2b1f      	cmp	r3, #31
 800060e:	dc00      	bgt.n	8000612 <__aeabi_dadd+0x33a>
 8000610:	e6c2      	b.n	8000398 <__aeabi_dadd+0xc0>
 8000612:	002a      	movs	r2, r5
 8000614:	3808      	subs	r0, #8
 8000616:	4082      	lsls	r2, r0
 8000618:	429f      	cmp	r7, r3
 800061a:	dd00      	ble.n	800061e <__aeabi_dadd+0x346>
 800061c:	e0a9      	b.n	8000772 <__aeabi_dadd+0x49a>
 800061e:	1bdb      	subs	r3, r3, r7
 8000620:	1c58      	adds	r0, r3, #1
 8000622:	281f      	cmp	r0, #31
 8000624:	dc00      	bgt.n	8000628 <__aeabi_dadd+0x350>
 8000626:	e1ac      	b.n	8000982 <__aeabi_dadd+0x6aa>
 8000628:	0015      	movs	r5, r2
 800062a:	3b1f      	subs	r3, #31
 800062c:	40dd      	lsrs	r5, r3
 800062e:	2820      	cmp	r0, #32
 8000630:	d005      	beq.n	800063e <__aeabi_dadd+0x366>
 8000632:	2340      	movs	r3, #64	@ 0x40
 8000634:	1a1b      	subs	r3, r3, r0
 8000636:	409a      	lsls	r2, r3
 8000638:	1e53      	subs	r3, r2, #1
 800063a:	419a      	sbcs	r2, r3
 800063c:	4315      	orrs	r5, r2
 800063e:	2307      	movs	r3, #7
 8000640:	2700      	movs	r7, #0
 8000642:	402b      	ands	r3, r5
 8000644:	e7b0      	b.n	80005a8 <__aeabi_dadd+0x2d0>
 8000646:	08ed      	lsrs	r5, r5, #3
 8000648:	4b05      	ldr	r3, [pc, #20]	@ (8000660 <__aeabi_dadd+0x388>)
 800064a:	0762      	lsls	r2, r4, #29
 800064c:	432a      	orrs	r2, r5
 800064e:	08e4      	lsrs	r4, r4, #3
 8000650:	429f      	cmp	r7, r3
 8000652:	d00f      	beq.n	8000674 <__aeabi_dadd+0x39c>
 8000654:	0324      	lsls	r4, r4, #12
 8000656:	0b25      	lsrs	r5, r4, #12
 8000658:	057c      	lsls	r4, r7, #21
 800065a:	0d64      	lsrs	r4, r4, #21
 800065c:	e6d4      	b.n	8000408 <__aeabi_dadd+0x130>
 800065e:	46c0      	nop			@ (mov r8, r8)
 8000660:	000007ff 	.word	0x000007ff
 8000664:	ff7fffff 	.word	0xff7fffff
 8000668:	000007fe 	.word	0x000007fe
 800066c:	08c0      	lsrs	r0, r0, #3
 800066e:	0762      	lsls	r2, r4, #29
 8000670:	4302      	orrs	r2, r0
 8000672:	08e4      	lsrs	r4, r4, #3
 8000674:	0013      	movs	r3, r2
 8000676:	4323      	orrs	r3, r4
 8000678:	d100      	bne.n	800067c <__aeabi_dadd+0x3a4>
 800067a:	e186      	b.n	800098a <__aeabi_dadd+0x6b2>
 800067c:	2580      	movs	r5, #128	@ 0x80
 800067e:	032d      	lsls	r5, r5, #12
 8000680:	4325      	orrs	r5, r4
 8000682:	032d      	lsls	r5, r5, #12
 8000684:	4cc3      	ldr	r4, [pc, #780]	@ (8000994 <__aeabi_dadd+0x6bc>)
 8000686:	0b2d      	lsrs	r5, r5, #12
 8000688:	e6be      	b.n	8000408 <__aeabi_dadd+0x130>
 800068a:	4660      	mov	r0, ip
 800068c:	4654      	mov	r4, sl
 800068e:	000e      	movs	r6, r1
 8000690:	0017      	movs	r7, r2
 8000692:	08c5      	lsrs	r5, r0, #3
 8000694:	e7d8      	b.n	8000648 <__aeabi_dadd+0x370>
 8000696:	4cc0      	ldr	r4, [pc, #768]	@ (8000998 <__aeabi_dadd+0x6c0>)
 8000698:	1aff      	subs	r7, r7, r3
 800069a:	4014      	ands	r4, r2
 800069c:	e696      	b.n	80003cc <__aeabi_dadd+0xf4>
 800069e:	4abf      	ldr	r2, [pc, #764]	@ (800099c <__aeabi_dadd+0x6c4>)
 80006a0:	1c79      	adds	r1, r7, #1
 80006a2:	4211      	tst	r1, r2
 80006a4:	d16b      	bne.n	800077e <__aeabi_dadd+0x4a6>
 80006a6:	0022      	movs	r2, r4
 80006a8:	4302      	orrs	r2, r0
 80006aa:	2f00      	cmp	r7, #0
 80006ac:	d000      	beq.n	80006b0 <__aeabi_dadd+0x3d8>
 80006ae:	e0db      	b.n	8000868 <__aeabi_dadd+0x590>
 80006b0:	2a00      	cmp	r2, #0
 80006b2:	d100      	bne.n	80006b6 <__aeabi_dadd+0x3de>
 80006b4:	e12d      	b.n	8000912 <__aeabi_dadd+0x63a>
 80006b6:	4662      	mov	r2, ip
 80006b8:	4653      	mov	r3, sl
 80006ba:	431a      	orrs	r2, r3
 80006bc:	d100      	bne.n	80006c0 <__aeabi_dadd+0x3e8>
 80006be:	e0b6      	b.n	800082e <__aeabi_dadd+0x556>
 80006c0:	4663      	mov	r3, ip
 80006c2:	18c5      	adds	r5, r0, r3
 80006c4:	4285      	cmp	r5, r0
 80006c6:	4180      	sbcs	r0, r0
 80006c8:	4454      	add	r4, sl
 80006ca:	4240      	negs	r0, r0
 80006cc:	1824      	adds	r4, r4, r0
 80006ce:	0223      	lsls	r3, r4, #8
 80006d0:	d502      	bpl.n	80006d8 <__aeabi_dadd+0x400>
 80006d2:	000f      	movs	r7, r1
 80006d4:	4bb0      	ldr	r3, [pc, #704]	@ (8000998 <__aeabi_dadd+0x6c0>)
 80006d6:	401c      	ands	r4, r3
 80006d8:	003a      	movs	r2, r7
 80006da:	0028      	movs	r0, r5
 80006dc:	e7d8      	b.n	8000690 <__aeabi_dadd+0x3b8>
 80006de:	4662      	mov	r2, ip
 80006e0:	1a85      	subs	r5, r0, r2
 80006e2:	42a8      	cmp	r0, r5
 80006e4:	4192      	sbcs	r2, r2
 80006e6:	4653      	mov	r3, sl
 80006e8:	4252      	negs	r2, r2
 80006ea:	4691      	mov	r9, r2
 80006ec:	1ae3      	subs	r3, r4, r3
 80006ee:	001a      	movs	r2, r3
 80006f0:	464b      	mov	r3, r9
 80006f2:	1ad2      	subs	r2, r2, r3
 80006f4:	0013      	movs	r3, r2
 80006f6:	4691      	mov	r9, r2
 80006f8:	021a      	lsls	r2, r3, #8
 80006fa:	d454      	bmi.n	80007a6 <__aeabi_dadd+0x4ce>
 80006fc:	464a      	mov	r2, r9
 80006fe:	464c      	mov	r4, r9
 8000700:	432a      	orrs	r2, r5
 8000702:	d000      	beq.n	8000706 <__aeabi_dadd+0x42e>
 8000704:	e640      	b.n	8000388 <__aeabi_dadd+0xb0>
 8000706:	2600      	movs	r6, #0
 8000708:	2400      	movs	r4, #0
 800070a:	2500      	movs	r5, #0
 800070c:	e67c      	b.n	8000408 <__aeabi_dadd+0x130>
 800070e:	4da1      	ldr	r5, [pc, #644]	@ (8000994 <__aeabi_dadd+0x6bc>)
 8000710:	45a9      	cmp	r9, r5
 8000712:	d100      	bne.n	8000716 <__aeabi_dadd+0x43e>
 8000714:	e090      	b.n	8000838 <__aeabi_dadd+0x560>
 8000716:	2501      	movs	r5, #1
 8000718:	2a38      	cmp	r2, #56	@ 0x38
 800071a:	dd00      	ble.n	800071e <__aeabi_dadd+0x446>
 800071c:	e6ab      	b.n	8000476 <__aeabi_dadd+0x19e>
 800071e:	2580      	movs	r5, #128	@ 0x80
 8000720:	042d      	lsls	r5, r5, #16
 8000722:	432c      	orrs	r4, r5
 8000724:	e695      	b.n	8000452 <__aeabi_dadd+0x17a>
 8000726:	0011      	movs	r1, r2
 8000728:	4655      	mov	r5, sl
 800072a:	3920      	subs	r1, #32
 800072c:	40cd      	lsrs	r5, r1
 800072e:	46a9      	mov	r9, r5
 8000730:	2a20      	cmp	r2, #32
 8000732:	d006      	beq.n	8000742 <__aeabi_dadd+0x46a>
 8000734:	2140      	movs	r1, #64	@ 0x40
 8000736:	4653      	mov	r3, sl
 8000738:	1a8a      	subs	r2, r1, r2
 800073a:	4093      	lsls	r3, r2
 800073c:	4662      	mov	r2, ip
 800073e:	431a      	orrs	r2, r3
 8000740:	4694      	mov	ip, r2
 8000742:	4665      	mov	r5, ip
 8000744:	1e6b      	subs	r3, r5, #1
 8000746:	419d      	sbcs	r5, r3
 8000748:	464b      	mov	r3, r9
 800074a:	431d      	orrs	r5, r3
 800074c:	e612      	b.n	8000374 <__aeabi_dadd+0x9c>
 800074e:	0021      	movs	r1, r4
 8000750:	4301      	orrs	r1, r0
 8000752:	d100      	bne.n	8000756 <__aeabi_dadd+0x47e>
 8000754:	e0c4      	b.n	80008e0 <__aeabi_dadd+0x608>
 8000756:	1e51      	subs	r1, r2, #1
 8000758:	2a01      	cmp	r2, #1
 800075a:	d100      	bne.n	800075e <__aeabi_dadd+0x486>
 800075c:	e0fb      	b.n	8000956 <__aeabi_dadd+0x67e>
 800075e:	4d8d      	ldr	r5, [pc, #564]	@ (8000994 <__aeabi_dadd+0x6bc>)
 8000760:	42aa      	cmp	r2, r5
 8000762:	d100      	bne.n	8000766 <__aeabi_dadd+0x48e>
 8000764:	e0b5      	b.n	80008d2 <__aeabi_dadd+0x5fa>
 8000766:	2501      	movs	r5, #1
 8000768:	2938      	cmp	r1, #56	@ 0x38
 800076a:	dd00      	ble.n	800076e <__aeabi_dadd+0x496>
 800076c:	e741      	b.n	80005f2 <__aeabi_dadd+0x31a>
 800076e:	000a      	movs	r2, r1
 8000770:	e72f      	b.n	80005d2 <__aeabi_dadd+0x2fa>
 8000772:	4c89      	ldr	r4, [pc, #548]	@ (8000998 <__aeabi_dadd+0x6c0>)
 8000774:	1aff      	subs	r7, r7, r3
 8000776:	4014      	ands	r4, r2
 8000778:	0762      	lsls	r2, r4, #29
 800077a:	08e4      	lsrs	r4, r4, #3
 800077c:	e76a      	b.n	8000654 <__aeabi_dadd+0x37c>
 800077e:	4a85      	ldr	r2, [pc, #532]	@ (8000994 <__aeabi_dadd+0x6bc>)
 8000780:	4291      	cmp	r1, r2
 8000782:	d100      	bne.n	8000786 <__aeabi_dadd+0x4ae>
 8000784:	e0e3      	b.n	800094e <__aeabi_dadd+0x676>
 8000786:	4663      	mov	r3, ip
 8000788:	18c2      	adds	r2, r0, r3
 800078a:	4282      	cmp	r2, r0
 800078c:	4180      	sbcs	r0, r0
 800078e:	0023      	movs	r3, r4
 8000790:	4240      	negs	r0, r0
 8000792:	4453      	add	r3, sl
 8000794:	181b      	adds	r3, r3, r0
 8000796:	07dd      	lsls	r5, r3, #31
 8000798:	085c      	lsrs	r4, r3, #1
 800079a:	2307      	movs	r3, #7
 800079c:	0852      	lsrs	r2, r2, #1
 800079e:	4315      	orrs	r5, r2
 80007a0:	000f      	movs	r7, r1
 80007a2:	402b      	ands	r3, r5
 80007a4:	e700      	b.n	80005a8 <__aeabi_dadd+0x2d0>
 80007a6:	4663      	mov	r3, ip
 80007a8:	1a1d      	subs	r5, r3, r0
 80007aa:	45ac      	cmp	ip, r5
 80007ac:	4192      	sbcs	r2, r2
 80007ae:	4653      	mov	r3, sl
 80007b0:	4252      	negs	r2, r2
 80007b2:	1b1c      	subs	r4, r3, r4
 80007b4:	000e      	movs	r6, r1
 80007b6:	4688      	mov	r8, r1
 80007b8:	1aa4      	subs	r4, r4, r2
 80007ba:	e5e5      	b.n	8000388 <__aeabi_dadd+0xb0>
 80007bc:	2d00      	cmp	r5, #0
 80007be:	d000      	beq.n	80007c2 <__aeabi_dadd+0x4ea>
 80007c0:	e091      	b.n	80008e6 <__aeabi_dadd+0x60e>
 80007c2:	2a00      	cmp	r2, #0
 80007c4:	d138      	bne.n	8000838 <__aeabi_dadd+0x560>
 80007c6:	2480      	movs	r4, #128	@ 0x80
 80007c8:	2600      	movs	r6, #0
 80007ca:	0324      	lsls	r4, r4, #12
 80007cc:	e756      	b.n	800067c <__aeabi_dadd+0x3a4>
 80007ce:	4663      	mov	r3, ip
 80007d0:	18c5      	adds	r5, r0, r3
 80007d2:	4285      	cmp	r5, r0
 80007d4:	4180      	sbcs	r0, r0
 80007d6:	4454      	add	r4, sl
 80007d8:	4240      	negs	r0, r0
 80007da:	1824      	adds	r4, r4, r0
 80007dc:	2701      	movs	r7, #1
 80007de:	0223      	lsls	r3, r4, #8
 80007e0:	d400      	bmi.n	80007e4 <__aeabi_dadd+0x50c>
 80007e2:	e6df      	b.n	80005a4 <__aeabi_dadd+0x2cc>
 80007e4:	2702      	movs	r7, #2
 80007e6:	e687      	b.n	80004f8 <__aeabi_dadd+0x220>
 80007e8:	4663      	mov	r3, ip
 80007ea:	1ac5      	subs	r5, r0, r3
 80007ec:	42a8      	cmp	r0, r5
 80007ee:	4180      	sbcs	r0, r0
 80007f0:	4653      	mov	r3, sl
 80007f2:	4240      	negs	r0, r0
 80007f4:	1ae4      	subs	r4, r4, r3
 80007f6:	2701      	movs	r7, #1
 80007f8:	1a24      	subs	r4, r4, r0
 80007fa:	e5c0      	b.n	800037e <__aeabi_dadd+0xa6>
 80007fc:	0762      	lsls	r2, r4, #29
 80007fe:	08c0      	lsrs	r0, r0, #3
 8000800:	4302      	orrs	r2, r0
 8000802:	08e4      	lsrs	r4, r4, #3
 8000804:	e736      	b.n	8000674 <__aeabi_dadd+0x39c>
 8000806:	0011      	movs	r1, r2
 8000808:	4653      	mov	r3, sl
 800080a:	3920      	subs	r1, #32
 800080c:	40cb      	lsrs	r3, r1
 800080e:	4699      	mov	r9, r3
 8000810:	2a20      	cmp	r2, #32
 8000812:	d006      	beq.n	8000822 <__aeabi_dadd+0x54a>
 8000814:	2140      	movs	r1, #64	@ 0x40
 8000816:	4653      	mov	r3, sl
 8000818:	1a8a      	subs	r2, r1, r2
 800081a:	4093      	lsls	r3, r2
 800081c:	4662      	mov	r2, ip
 800081e:	431a      	orrs	r2, r3
 8000820:	4694      	mov	ip, r2
 8000822:	4665      	mov	r5, ip
 8000824:	1e6b      	subs	r3, r5, #1
 8000826:	419d      	sbcs	r5, r3
 8000828:	464b      	mov	r3, r9
 800082a:	431d      	orrs	r5, r3
 800082c:	e659      	b.n	80004e2 <__aeabi_dadd+0x20a>
 800082e:	0762      	lsls	r2, r4, #29
 8000830:	08c0      	lsrs	r0, r0, #3
 8000832:	4302      	orrs	r2, r0
 8000834:	08e4      	lsrs	r4, r4, #3
 8000836:	e70d      	b.n	8000654 <__aeabi_dadd+0x37c>
 8000838:	4653      	mov	r3, sl
 800083a:	075a      	lsls	r2, r3, #29
 800083c:	4663      	mov	r3, ip
 800083e:	08d8      	lsrs	r0, r3, #3
 8000840:	4653      	mov	r3, sl
 8000842:	000e      	movs	r6, r1
 8000844:	4302      	orrs	r2, r0
 8000846:	08dc      	lsrs	r4, r3, #3
 8000848:	e714      	b.n	8000674 <__aeabi_dadd+0x39c>
 800084a:	0015      	movs	r5, r2
 800084c:	0026      	movs	r6, r4
 800084e:	3d20      	subs	r5, #32
 8000850:	40ee      	lsrs	r6, r5
 8000852:	2a20      	cmp	r2, #32
 8000854:	d003      	beq.n	800085e <__aeabi_dadd+0x586>
 8000856:	2540      	movs	r5, #64	@ 0x40
 8000858:	1aaa      	subs	r2, r5, r2
 800085a:	4094      	lsls	r4, r2
 800085c:	4320      	orrs	r0, r4
 800085e:	1e42      	subs	r2, r0, #1
 8000860:	4190      	sbcs	r0, r2
 8000862:	0005      	movs	r5, r0
 8000864:	4335      	orrs	r5, r6
 8000866:	e606      	b.n	8000476 <__aeabi_dadd+0x19e>
 8000868:	2a00      	cmp	r2, #0
 800086a:	d07c      	beq.n	8000966 <__aeabi_dadd+0x68e>
 800086c:	4662      	mov	r2, ip
 800086e:	4653      	mov	r3, sl
 8000870:	08c0      	lsrs	r0, r0, #3
 8000872:	431a      	orrs	r2, r3
 8000874:	d100      	bne.n	8000878 <__aeabi_dadd+0x5a0>
 8000876:	e6fa      	b.n	800066e <__aeabi_dadd+0x396>
 8000878:	0762      	lsls	r2, r4, #29
 800087a:	4310      	orrs	r0, r2
 800087c:	2280      	movs	r2, #128	@ 0x80
 800087e:	08e4      	lsrs	r4, r4, #3
 8000880:	0312      	lsls	r2, r2, #12
 8000882:	4214      	tst	r4, r2
 8000884:	d008      	beq.n	8000898 <__aeabi_dadd+0x5c0>
 8000886:	08d9      	lsrs	r1, r3, #3
 8000888:	4211      	tst	r1, r2
 800088a:	d105      	bne.n	8000898 <__aeabi_dadd+0x5c0>
 800088c:	4663      	mov	r3, ip
 800088e:	08d8      	lsrs	r0, r3, #3
 8000890:	4653      	mov	r3, sl
 8000892:	000c      	movs	r4, r1
 8000894:	075b      	lsls	r3, r3, #29
 8000896:	4318      	orrs	r0, r3
 8000898:	0f42      	lsrs	r2, r0, #29
 800089a:	00c0      	lsls	r0, r0, #3
 800089c:	08c0      	lsrs	r0, r0, #3
 800089e:	0752      	lsls	r2, r2, #29
 80008a0:	4302      	orrs	r2, r0
 80008a2:	e6e7      	b.n	8000674 <__aeabi_dadd+0x39c>
 80008a4:	2a00      	cmp	r2, #0
 80008a6:	d100      	bne.n	80008aa <__aeabi_dadd+0x5d2>
 80008a8:	e72d      	b.n	8000706 <__aeabi_dadd+0x42e>
 80008aa:	4663      	mov	r3, ip
 80008ac:	08d8      	lsrs	r0, r3, #3
 80008ae:	4653      	mov	r3, sl
 80008b0:	075a      	lsls	r2, r3, #29
 80008b2:	000e      	movs	r6, r1
 80008b4:	4302      	orrs	r2, r0
 80008b6:	08dc      	lsrs	r4, r3, #3
 80008b8:	e6cc      	b.n	8000654 <__aeabi_dadd+0x37c>
 80008ba:	4663      	mov	r3, ip
 80008bc:	1a1d      	subs	r5, r3, r0
 80008be:	45ac      	cmp	ip, r5
 80008c0:	4192      	sbcs	r2, r2
 80008c2:	4653      	mov	r3, sl
 80008c4:	4252      	negs	r2, r2
 80008c6:	1b1c      	subs	r4, r3, r4
 80008c8:	000e      	movs	r6, r1
 80008ca:	4688      	mov	r8, r1
 80008cc:	1aa4      	subs	r4, r4, r2
 80008ce:	3701      	adds	r7, #1
 80008d0:	e555      	b.n	800037e <__aeabi_dadd+0xa6>
 80008d2:	4663      	mov	r3, ip
 80008d4:	08d9      	lsrs	r1, r3, #3
 80008d6:	4653      	mov	r3, sl
 80008d8:	075a      	lsls	r2, r3, #29
 80008da:	430a      	orrs	r2, r1
 80008dc:	08dc      	lsrs	r4, r3, #3
 80008de:	e6c9      	b.n	8000674 <__aeabi_dadd+0x39c>
 80008e0:	4660      	mov	r0, ip
 80008e2:	4654      	mov	r4, sl
 80008e4:	e6d4      	b.n	8000690 <__aeabi_dadd+0x3b8>
 80008e6:	08c0      	lsrs	r0, r0, #3
 80008e8:	2a00      	cmp	r2, #0
 80008ea:	d100      	bne.n	80008ee <__aeabi_dadd+0x616>
 80008ec:	e6bf      	b.n	800066e <__aeabi_dadd+0x396>
 80008ee:	0762      	lsls	r2, r4, #29
 80008f0:	4310      	orrs	r0, r2
 80008f2:	2280      	movs	r2, #128	@ 0x80
 80008f4:	08e4      	lsrs	r4, r4, #3
 80008f6:	0312      	lsls	r2, r2, #12
 80008f8:	4214      	tst	r4, r2
 80008fa:	d0cd      	beq.n	8000898 <__aeabi_dadd+0x5c0>
 80008fc:	08dd      	lsrs	r5, r3, #3
 80008fe:	4215      	tst	r5, r2
 8000900:	d1ca      	bne.n	8000898 <__aeabi_dadd+0x5c0>
 8000902:	4663      	mov	r3, ip
 8000904:	08d8      	lsrs	r0, r3, #3
 8000906:	4653      	mov	r3, sl
 8000908:	075b      	lsls	r3, r3, #29
 800090a:	000e      	movs	r6, r1
 800090c:	002c      	movs	r4, r5
 800090e:	4318      	orrs	r0, r3
 8000910:	e7c2      	b.n	8000898 <__aeabi_dadd+0x5c0>
 8000912:	4663      	mov	r3, ip
 8000914:	08d9      	lsrs	r1, r3, #3
 8000916:	4653      	mov	r3, sl
 8000918:	075a      	lsls	r2, r3, #29
 800091a:	430a      	orrs	r2, r1
 800091c:	08dc      	lsrs	r4, r3, #3
 800091e:	e699      	b.n	8000654 <__aeabi_dadd+0x37c>
 8000920:	4663      	mov	r3, ip
 8000922:	08d8      	lsrs	r0, r3, #3
 8000924:	4653      	mov	r3, sl
 8000926:	075a      	lsls	r2, r3, #29
 8000928:	000e      	movs	r6, r1
 800092a:	4302      	orrs	r2, r0
 800092c:	08dc      	lsrs	r4, r3, #3
 800092e:	e6a1      	b.n	8000674 <__aeabi_dadd+0x39c>
 8000930:	0011      	movs	r1, r2
 8000932:	0027      	movs	r7, r4
 8000934:	3920      	subs	r1, #32
 8000936:	40cf      	lsrs	r7, r1
 8000938:	2a20      	cmp	r2, #32
 800093a:	d003      	beq.n	8000944 <__aeabi_dadd+0x66c>
 800093c:	2140      	movs	r1, #64	@ 0x40
 800093e:	1a8a      	subs	r2, r1, r2
 8000940:	4094      	lsls	r4, r2
 8000942:	4320      	orrs	r0, r4
 8000944:	1e42      	subs	r2, r0, #1
 8000946:	4190      	sbcs	r0, r2
 8000948:	0005      	movs	r5, r0
 800094a:	433d      	orrs	r5, r7
 800094c:	e651      	b.n	80005f2 <__aeabi_dadd+0x31a>
 800094e:	000c      	movs	r4, r1
 8000950:	2500      	movs	r5, #0
 8000952:	2200      	movs	r2, #0
 8000954:	e558      	b.n	8000408 <__aeabi_dadd+0x130>
 8000956:	4460      	add	r0, ip
 8000958:	4560      	cmp	r0, ip
 800095a:	4192      	sbcs	r2, r2
 800095c:	4454      	add	r4, sl
 800095e:	4252      	negs	r2, r2
 8000960:	0005      	movs	r5, r0
 8000962:	18a4      	adds	r4, r4, r2
 8000964:	e73a      	b.n	80007dc <__aeabi_dadd+0x504>
 8000966:	4653      	mov	r3, sl
 8000968:	075a      	lsls	r2, r3, #29
 800096a:	4663      	mov	r3, ip
 800096c:	08d9      	lsrs	r1, r3, #3
 800096e:	4653      	mov	r3, sl
 8000970:	430a      	orrs	r2, r1
 8000972:	08dc      	lsrs	r4, r3, #3
 8000974:	e67e      	b.n	8000674 <__aeabi_dadd+0x39c>
 8000976:	001a      	movs	r2, r3
 8000978:	001c      	movs	r4, r3
 800097a:	432a      	orrs	r2, r5
 800097c:	d000      	beq.n	8000980 <__aeabi_dadd+0x6a8>
 800097e:	e6ab      	b.n	80006d8 <__aeabi_dadd+0x400>
 8000980:	e6c1      	b.n	8000706 <__aeabi_dadd+0x42e>
 8000982:	2120      	movs	r1, #32
 8000984:	2500      	movs	r5, #0
 8000986:	1a09      	subs	r1, r1, r0
 8000988:	e519      	b.n	80003be <__aeabi_dadd+0xe6>
 800098a:	2200      	movs	r2, #0
 800098c:	2500      	movs	r5, #0
 800098e:	4c01      	ldr	r4, [pc, #4]	@ (8000994 <__aeabi_dadd+0x6bc>)
 8000990:	e53a      	b.n	8000408 <__aeabi_dadd+0x130>
 8000992:	46c0      	nop			@ (mov r8, r8)
 8000994:	000007ff 	.word	0x000007ff
 8000998:	ff7fffff 	.word	0xff7fffff
 800099c:	000007fe 	.word	0x000007fe

080009a0 <__eqdf2>:
 80009a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009a2:	4657      	mov	r7, sl
 80009a4:	46de      	mov	lr, fp
 80009a6:	464e      	mov	r6, r9
 80009a8:	4645      	mov	r5, r8
 80009aa:	b5e0      	push	{r5, r6, r7, lr}
 80009ac:	000d      	movs	r5, r1
 80009ae:	0004      	movs	r4, r0
 80009b0:	0fe8      	lsrs	r0, r5, #31
 80009b2:	4683      	mov	fp, r0
 80009b4:	0309      	lsls	r1, r1, #12
 80009b6:	0fd8      	lsrs	r0, r3, #31
 80009b8:	0b09      	lsrs	r1, r1, #12
 80009ba:	4682      	mov	sl, r0
 80009bc:	4819      	ldr	r0, [pc, #100]	@ (8000a24 <__eqdf2+0x84>)
 80009be:	468c      	mov	ip, r1
 80009c0:	031f      	lsls	r7, r3, #12
 80009c2:	0069      	lsls	r1, r5, #1
 80009c4:	005e      	lsls	r6, r3, #1
 80009c6:	0d49      	lsrs	r1, r1, #21
 80009c8:	0b3f      	lsrs	r7, r7, #12
 80009ca:	0d76      	lsrs	r6, r6, #21
 80009cc:	4281      	cmp	r1, r0
 80009ce:	d018      	beq.n	8000a02 <__eqdf2+0x62>
 80009d0:	4286      	cmp	r6, r0
 80009d2:	d00f      	beq.n	80009f4 <__eqdf2+0x54>
 80009d4:	2001      	movs	r0, #1
 80009d6:	42b1      	cmp	r1, r6
 80009d8:	d10d      	bne.n	80009f6 <__eqdf2+0x56>
 80009da:	45bc      	cmp	ip, r7
 80009dc:	d10b      	bne.n	80009f6 <__eqdf2+0x56>
 80009de:	4294      	cmp	r4, r2
 80009e0:	d109      	bne.n	80009f6 <__eqdf2+0x56>
 80009e2:	45d3      	cmp	fp, sl
 80009e4:	d01c      	beq.n	8000a20 <__eqdf2+0x80>
 80009e6:	2900      	cmp	r1, #0
 80009e8:	d105      	bne.n	80009f6 <__eqdf2+0x56>
 80009ea:	4660      	mov	r0, ip
 80009ec:	4320      	orrs	r0, r4
 80009ee:	1e43      	subs	r3, r0, #1
 80009f0:	4198      	sbcs	r0, r3
 80009f2:	e000      	b.n	80009f6 <__eqdf2+0x56>
 80009f4:	2001      	movs	r0, #1
 80009f6:	bcf0      	pop	{r4, r5, r6, r7}
 80009f8:	46bb      	mov	fp, r7
 80009fa:	46b2      	mov	sl, r6
 80009fc:	46a9      	mov	r9, r5
 80009fe:	46a0      	mov	r8, r4
 8000a00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a02:	2001      	movs	r0, #1
 8000a04:	428e      	cmp	r6, r1
 8000a06:	d1f6      	bne.n	80009f6 <__eqdf2+0x56>
 8000a08:	4661      	mov	r1, ip
 8000a0a:	4339      	orrs	r1, r7
 8000a0c:	000f      	movs	r7, r1
 8000a0e:	4317      	orrs	r7, r2
 8000a10:	4327      	orrs	r7, r4
 8000a12:	d1f0      	bne.n	80009f6 <__eqdf2+0x56>
 8000a14:	465b      	mov	r3, fp
 8000a16:	4652      	mov	r2, sl
 8000a18:	1a98      	subs	r0, r3, r2
 8000a1a:	1e43      	subs	r3, r0, #1
 8000a1c:	4198      	sbcs	r0, r3
 8000a1e:	e7ea      	b.n	80009f6 <__eqdf2+0x56>
 8000a20:	2000      	movs	r0, #0
 8000a22:	e7e8      	b.n	80009f6 <__eqdf2+0x56>
 8000a24:	000007ff 	.word	0x000007ff

08000a28 <__gedf2>:
 8000a28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a2a:	4657      	mov	r7, sl
 8000a2c:	464e      	mov	r6, r9
 8000a2e:	4645      	mov	r5, r8
 8000a30:	46de      	mov	lr, fp
 8000a32:	b5e0      	push	{r5, r6, r7, lr}
 8000a34:	000d      	movs	r5, r1
 8000a36:	030f      	lsls	r7, r1, #12
 8000a38:	0b39      	lsrs	r1, r7, #12
 8000a3a:	b083      	sub	sp, #12
 8000a3c:	0004      	movs	r4, r0
 8000a3e:	4680      	mov	r8, r0
 8000a40:	9101      	str	r1, [sp, #4]
 8000a42:	0058      	lsls	r0, r3, #1
 8000a44:	0fe9      	lsrs	r1, r5, #31
 8000a46:	4f31      	ldr	r7, [pc, #196]	@ (8000b0c <__gedf2+0xe4>)
 8000a48:	0d40      	lsrs	r0, r0, #21
 8000a4a:	468c      	mov	ip, r1
 8000a4c:	006e      	lsls	r6, r5, #1
 8000a4e:	0319      	lsls	r1, r3, #12
 8000a50:	4682      	mov	sl, r0
 8000a52:	4691      	mov	r9, r2
 8000a54:	0d76      	lsrs	r6, r6, #21
 8000a56:	0b09      	lsrs	r1, r1, #12
 8000a58:	0fd8      	lsrs	r0, r3, #31
 8000a5a:	42be      	cmp	r6, r7
 8000a5c:	d01f      	beq.n	8000a9e <__gedf2+0x76>
 8000a5e:	45ba      	cmp	sl, r7
 8000a60:	d00f      	beq.n	8000a82 <__gedf2+0x5a>
 8000a62:	2e00      	cmp	r6, #0
 8000a64:	d12f      	bne.n	8000ac6 <__gedf2+0x9e>
 8000a66:	4655      	mov	r5, sl
 8000a68:	9e01      	ldr	r6, [sp, #4]
 8000a6a:	4334      	orrs	r4, r6
 8000a6c:	2d00      	cmp	r5, #0
 8000a6e:	d127      	bne.n	8000ac0 <__gedf2+0x98>
 8000a70:	430a      	orrs	r2, r1
 8000a72:	d03a      	beq.n	8000aea <__gedf2+0xc2>
 8000a74:	2c00      	cmp	r4, #0
 8000a76:	d145      	bne.n	8000b04 <__gedf2+0xdc>
 8000a78:	2800      	cmp	r0, #0
 8000a7a:	d11a      	bne.n	8000ab2 <__gedf2+0x8a>
 8000a7c:	2001      	movs	r0, #1
 8000a7e:	4240      	negs	r0, r0
 8000a80:	e017      	b.n	8000ab2 <__gedf2+0x8a>
 8000a82:	4311      	orrs	r1, r2
 8000a84:	d13b      	bne.n	8000afe <__gedf2+0xd6>
 8000a86:	2e00      	cmp	r6, #0
 8000a88:	d102      	bne.n	8000a90 <__gedf2+0x68>
 8000a8a:	9f01      	ldr	r7, [sp, #4]
 8000a8c:	4327      	orrs	r7, r4
 8000a8e:	d0f3      	beq.n	8000a78 <__gedf2+0x50>
 8000a90:	4584      	cmp	ip, r0
 8000a92:	d109      	bne.n	8000aa8 <__gedf2+0x80>
 8000a94:	4663      	mov	r3, ip
 8000a96:	2b00      	cmp	r3, #0
 8000a98:	d0f0      	beq.n	8000a7c <__gedf2+0x54>
 8000a9a:	4660      	mov	r0, ip
 8000a9c:	e009      	b.n	8000ab2 <__gedf2+0x8a>
 8000a9e:	9f01      	ldr	r7, [sp, #4]
 8000aa0:	4327      	orrs	r7, r4
 8000aa2:	d12c      	bne.n	8000afe <__gedf2+0xd6>
 8000aa4:	45b2      	cmp	sl, r6
 8000aa6:	d024      	beq.n	8000af2 <__gedf2+0xca>
 8000aa8:	4663      	mov	r3, ip
 8000aaa:	2002      	movs	r0, #2
 8000aac:	3b01      	subs	r3, #1
 8000aae:	4018      	ands	r0, r3
 8000ab0:	3801      	subs	r0, #1
 8000ab2:	b003      	add	sp, #12
 8000ab4:	bcf0      	pop	{r4, r5, r6, r7}
 8000ab6:	46bb      	mov	fp, r7
 8000ab8:	46b2      	mov	sl, r6
 8000aba:	46a9      	mov	r9, r5
 8000abc:	46a0      	mov	r8, r4
 8000abe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ac0:	2c00      	cmp	r4, #0
 8000ac2:	d0d9      	beq.n	8000a78 <__gedf2+0x50>
 8000ac4:	e7e4      	b.n	8000a90 <__gedf2+0x68>
 8000ac6:	4654      	mov	r4, sl
 8000ac8:	2c00      	cmp	r4, #0
 8000aca:	d0ed      	beq.n	8000aa8 <__gedf2+0x80>
 8000acc:	4584      	cmp	ip, r0
 8000ace:	d1eb      	bne.n	8000aa8 <__gedf2+0x80>
 8000ad0:	4556      	cmp	r6, sl
 8000ad2:	dce9      	bgt.n	8000aa8 <__gedf2+0x80>
 8000ad4:	dbde      	blt.n	8000a94 <__gedf2+0x6c>
 8000ad6:	9b01      	ldr	r3, [sp, #4]
 8000ad8:	428b      	cmp	r3, r1
 8000ada:	d8e5      	bhi.n	8000aa8 <__gedf2+0x80>
 8000adc:	d1da      	bne.n	8000a94 <__gedf2+0x6c>
 8000ade:	45c8      	cmp	r8, r9
 8000ae0:	d8e2      	bhi.n	8000aa8 <__gedf2+0x80>
 8000ae2:	2000      	movs	r0, #0
 8000ae4:	45c8      	cmp	r8, r9
 8000ae6:	d2e4      	bcs.n	8000ab2 <__gedf2+0x8a>
 8000ae8:	e7d4      	b.n	8000a94 <__gedf2+0x6c>
 8000aea:	2000      	movs	r0, #0
 8000aec:	2c00      	cmp	r4, #0
 8000aee:	d0e0      	beq.n	8000ab2 <__gedf2+0x8a>
 8000af0:	e7da      	b.n	8000aa8 <__gedf2+0x80>
 8000af2:	4311      	orrs	r1, r2
 8000af4:	d103      	bne.n	8000afe <__gedf2+0xd6>
 8000af6:	4584      	cmp	ip, r0
 8000af8:	d1d6      	bne.n	8000aa8 <__gedf2+0x80>
 8000afa:	2000      	movs	r0, #0
 8000afc:	e7d9      	b.n	8000ab2 <__gedf2+0x8a>
 8000afe:	2002      	movs	r0, #2
 8000b00:	4240      	negs	r0, r0
 8000b02:	e7d6      	b.n	8000ab2 <__gedf2+0x8a>
 8000b04:	4584      	cmp	ip, r0
 8000b06:	d0e6      	beq.n	8000ad6 <__gedf2+0xae>
 8000b08:	e7ce      	b.n	8000aa8 <__gedf2+0x80>
 8000b0a:	46c0      	nop			@ (mov r8, r8)
 8000b0c:	000007ff 	.word	0x000007ff

08000b10 <__ledf2>:
 8000b10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b12:	4657      	mov	r7, sl
 8000b14:	464e      	mov	r6, r9
 8000b16:	4645      	mov	r5, r8
 8000b18:	46de      	mov	lr, fp
 8000b1a:	b5e0      	push	{r5, r6, r7, lr}
 8000b1c:	000d      	movs	r5, r1
 8000b1e:	030f      	lsls	r7, r1, #12
 8000b20:	0004      	movs	r4, r0
 8000b22:	4680      	mov	r8, r0
 8000b24:	0fe8      	lsrs	r0, r5, #31
 8000b26:	0b39      	lsrs	r1, r7, #12
 8000b28:	4684      	mov	ip, r0
 8000b2a:	b083      	sub	sp, #12
 8000b2c:	0058      	lsls	r0, r3, #1
 8000b2e:	4f30      	ldr	r7, [pc, #192]	@ (8000bf0 <__ledf2+0xe0>)
 8000b30:	0d40      	lsrs	r0, r0, #21
 8000b32:	9101      	str	r1, [sp, #4]
 8000b34:	031e      	lsls	r6, r3, #12
 8000b36:	0069      	lsls	r1, r5, #1
 8000b38:	4682      	mov	sl, r0
 8000b3a:	4691      	mov	r9, r2
 8000b3c:	0d49      	lsrs	r1, r1, #21
 8000b3e:	0b36      	lsrs	r6, r6, #12
 8000b40:	0fd8      	lsrs	r0, r3, #31
 8000b42:	42b9      	cmp	r1, r7
 8000b44:	d020      	beq.n	8000b88 <__ledf2+0x78>
 8000b46:	45ba      	cmp	sl, r7
 8000b48:	d00f      	beq.n	8000b6a <__ledf2+0x5a>
 8000b4a:	2900      	cmp	r1, #0
 8000b4c:	d12b      	bne.n	8000ba6 <__ledf2+0x96>
 8000b4e:	9901      	ldr	r1, [sp, #4]
 8000b50:	430c      	orrs	r4, r1
 8000b52:	4651      	mov	r1, sl
 8000b54:	2900      	cmp	r1, #0
 8000b56:	d137      	bne.n	8000bc8 <__ledf2+0xb8>
 8000b58:	4332      	orrs	r2, r6
 8000b5a:	d038      	beq.n	8000bce <__ledf2+0xbe>
 8000b5c:	2c00      	cmp	r4, #0
 8000b5e:	d144      	bne.n	8000bea <__ledf2+0xda>
 8000b60:	2800      	cmp	r0, #0
 8000b62:	d119      	bne.n	8000b98 <__ledf2+0x88>
 8000b64:	2001      	movs	r0, #1
 8000b66:	4240      	negs	r0, r0
 8000b68:	e016      	b.n	8000b98 <__ledf2+0x88>
 8000b6a:	4316      	orrs	r6, r2
 8000b6c:	d113      	bne.n	8000b96 <__ledf2+0x86>
 8000b6e:	2900      	cmp	r1, #0
 8000b70:	d102      	bne.n	8000b78 <__ledf2+0x68>
 8000b72:	9f01      	ldr	r7, [sp, #4]
 8000b74:	4327      	orrs	r7, r4
 8000b76:	d0f3      	beq.n	8000b60 <__ledf2+0x50>
 8000b78:	4584      	cmp	ip, r0
 8000b7a:	d020      	beq.n	8000bbe <__ledf2+0xae>
 8000b7c:	4663      	mov	r3, ip
 8000b7e:	2002      	movs	r0, #2
 8000b80:	3b01      	subs	r3, #1
 8000b82:	4018      	ands	r0, r3
 8000b84:	3801      	subs	r0, #1
 8000b86:	e007      	b.n	8000b98 <__ledf2+0x88>
 8000b88:	9f01      	ldr	r7, [sp, #4]
 8000b8a:	4327      	orrs	r7, r4
 8000b8c:	d103      	bne.n	8000b96 <__ledf2+0x86>
 8000b8e:	458a      	cmp	sl, r1
 8000b90:	d1f4      	bne.n	8000b7c <__ledf2+0x6c>
 8000b92:	4316      	orrs	r6, r2
 8000b94:	d01f      	beq.n	8000bd6 <__ledf2+0xc6>
 8000b96:	2002      	movs	r0, #2
 8000b98:	b003      	add	sp, #12
 8000b9a:	bcf0      	pop	{r4, r5, r6, r7}
 8000b9c:	46bb      	mov	fp, r7
 8000b9e:	46b2      	mov	sl, r6
 8000ba0:	46a9      	mov	r9, r5
 8000ba2:	46a0      	mov	r8, r4
 8000ba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ba6:	4654      	mov	r4, sl
 8000ba8:	2c00      	cmp	r4, #0
 8000baa:	d0e7      	beq.n	8000b7c <__ledf2+0x6c>
 8000bac:	4584      	cmp	ip, r0
 8000bae:	d1e5      	bne.n	8000b7c <__ledf2+0x6c>
 8000bb0:	4551      	cmp	r1, sl
 8000bb2:	dce3      	bgt.n	8000b7c <__ledf2+0x6c>
 8000bb4:	db03      	blt.n	8000bbe <__ledf2+0xae>
 8000bb6:	9b01      	ldr	r3, [sp, #4]
 8000bb8:	42b3      	cmp	r3, r6
 8000bba:	d8df      	bhi.n	8000b7c <__ledf2+0x6c>
 8000bbc:	d00f      	beq.n	8000bde <__ledf2+0xce>
 8000bbe:	4663      	mov	r3, ip
 8000bc0:	2b00      	cmp	r3, #0
 8000bc2:	d0cf      	beq.n	8000b64 <__ledf2+0x54>
 8000bc4:	4660      	mov	r0, ip
 8000bc6:	e7e7      	b.n	8000b98 <__ledf2+0x88>
 8000bc8:	2c00      	cmp	r4, #0
 8000bca:	d0c9      	beq.n	8000b60 <__ledf2+0x50>
 8000bcc:	e7d4      	b.n	8000b78 <__ledf2+0x68>
 8000bce:	2000      	movs	r0, #0
 8000bd0:	2c00      	cmp	r4, #0
 8000bd2:	d0e1      	beq.n	8000b98 <__ledf2+0x88>
 8000bd4:	e7d2      	b.n	8000b7c <__ledf2+0x6c>
 8000bd6:	4584      	cmp	ip, r0
 8000bd8:	d1d0      	bne.n	8000b7c <__ledf2+0x6c>
 8000bda:	2000      	movs	r0, #0
 8000bdc:	e7dc      	b.n	8000b98 <__ledf2+0x88>
 8000bde:	45c8      	cmp	r8, r9
 8000be0:	d8cc      	bhi.n	8000b7c <__ledf2+0x6c>
 8000be2:	2000      	movs	r0, #0
 8000be4:	45c8      	cmp	r8, r9
 8000be6:	d2d7      	bcs.n	8000b98 <__ledf2+0x88>
 8000be8:	e7e9      	b.n	8000bbe <__ledf2+0xae>
 8000bea:	4584      	cmp	ip, r0
 8000bec:	d0e3      	beq.n	8000bb6 <__ledf2+0xa6>
 8000bee:	e7c5      	b.n	8000b7c <__ledf2+0x6c>
 8000bf0:	000007ff 	.word	0x000007ff

08000bf4 <__aeabi_dmul>:
 8000bf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bf6:	4657      	mov	r7, sl
 8000bf8:	46de      	mov	lr, fp
 8000bfa:	464e      	mov	r6, r9
 8000bfc:	4645      	mov	r5, r8
 8000bfe:	b5e0      	push	{r5, r6, r7, lr}
 8000c00:	001f      	movs	r7, r3
 8000c02:	030b      	lsls	r3, r1, #12
 8000c04:	0b1b      	lsrs	r3, r3, #12
 8000c06:	0016      	movs	r6, r2
 8000c08:	469a      	mov	sl, r3
 8000c0a:	0fca      	lsrs	r2, r1, #31
 8000c0c:	004b      	lsls	r3, r1, #1
 8000c0e:	0004      	movs	r4, r0
 8000c10:	4693      	mov	fp, r2
 8000c12:	b087      	sub	sp, #28
 8000c14:	0d5b      	lsrs	r3, r3, #21
 8000c16:	d100      	bne.n	8000c1a <__aeabi_dmul+0x26>
 8000c18:	e0d5      	b.n	8000dc6 <__aeabi_dmul+0x1d2>
 8000c1a:	4abb      	ldr	r2, [pc, #748]	@ (8000f08 <__aeabi_dmul+0x314>)
 8000c1c:	4293      	cmp	r3, r2
 8000c1e:	d100      	bne.n	8000c22 <__aeabi_dmul+0x2e>
 8000c20:	e0f8      	b.n	8000e14 <__aeabi_dmul+0x220>
 8000c22:	4651      	mov	r1, sl
 8000c24:	0f42      	lsrs	r2, r0, #29
 8000c26:	00c9      	lsls	r1, r1, #3
 8000c28:	430a      	orrs	r2, r1
 8000c2a:	2180      	movs	r1, #128	@ 0x80
 8000c2c:	0409      	lsls	r1, r1, #16
 8000c2e:	4311      	orrs	r1, r2
 8000c30:	00c2      	lsls	r2, r0, #3
 8000c32:	4691      	mov	r9, r2
 8000c34:	4ab5      	ldr	r2, [pc, #724]	@ (8000f0c <__aeabi_dmul+0x318>)
 8000c36:	468a      	mov	sl, r1
 8000c38:	189d      	adds	r5, r3, r2
 8000c3a:	2300      	movs	r3, #0
 8000c3c:	4698      	mov	r8, r3
 8000c3e:	9302      	str	r3, [sp, #8]
 8000c40:	033c      	lsls	r4, r7, #12
 8000c42:	007b      	lsls	r3, r7, #1
 8000c44:	0ffa      	lsrs	r2, r7, #31
 8000c46:	0030      	movs	r0, r6
 8000c48:	0b24      	lsrs	r4, r4, #12
 8000c4a:	0d5b      	lsrs	r3, r3, #21
 8000c4c:	9200      	str	r2, [sp, #0]
 8000c4e:	d100      	bne.n	8000c52 <__aeabi_dmul+0x5e>
 8000c50:	e096      	b.n	8000d80 <__aeabi_dmul+0x18c>
 8000c52:	4aad      	ldr	r2, [pc, #692]	@ (8000f08 <__aeabi_dmul+0x314>)
 8000c54:	4293      	cmp	r3, r2
 8000c56:	d031      	beq.n	8000cbc <__aeabi_dmul+0xc8>
 8000c58:	0f72      	lsrs	r2, r6, #29
 8000c5a:	00e4      	lsls	r4, r4, #3
 8000c5c:	4322      	orrs	r2, r4
 8000c5e:	2480      	movs	r4, #128	@ 0x80
 8000c60:	0424      	lsls	r4, r4, #16
 8000c62:	4314      	orrs	r4, r2
 8000c64:	4aa9      	ldr	r2, [pc, #676]	@ (8000f0c <__aeabi_dmul+0x318>)
 8000c66:	00f0      	lsls	r0, r6, #3
 8000c68:	4694      	mov	ip, r2
 8000c6a:	4463      	add	r3, ip
 8000c6c:	195b      	adds	r3, r3, r5
 8000c6e:	1c5a      	adds	r2, r3, #1
 8000c70:	9201      	str	r2, [sp, #4]
 8000c72:	4642      	mov	r2, r8
 8000c74:	2600      	movs	r6, #0
 8000c76:	2a0a      	cmp	r2, #10
 8000c78:	dc42      	bgt.n	8000d00 <__aeabi_dmul+0x10c>
 8000c7a:	465a      	mov	r2, fp
 8000c7c:	9900      	ldr	r1, [sp, #0]
 8000c7e:	404a      	eors	r2, r1
 8000c80:	4693      	mov	fp, r2
 8000c82:	4642      	mov	r2, r8
 8000c84:	2a02      	cmp	r2, #2
 8000c86:	dc32      	bgt.n	8000cee <__aeabi_dmul+0xfa>
 8000c88:	3a01      	subs	r2, #1
 8000c8a:	2a01      	cmp	r2, #1
 8000c8c:	d900      	bls.n	8000c90 <__aeabi_dmul+0x9c>
 8000c8e:	e149      	b.n	8000f24 <__aeabi_dmul+0x330>
 8000c90:	2e02      	cmp	r6, #2
 8000c92:	d100      	bne.n	8000c96 <__aeabi_dmul+0xa2>
 8000c94:	e0ca      	b.n	8000e2c <__aeabi_dmul+0x238>
 8000c96:	2e01      	cmp	r6, #1
 8000c98:	d13d      	bne.n	8000d16 <__aeabi_dmul+0x122>
 8000c9a:	2300      	movs	r3, #0
 8000c9c:	2400      	movs	r4, #0
 8000c9e:	2200      	movs	r2, #0
 8000ca0:	0010      	movs	r0, r2
 8000ca2:	465a      	mov	r2, fp
 8000ca4:	051b      	lsls	r3, r3, #20
 8000ca6:	4323      	orrs	r3, r4
 8000ca8:	07d2      	lsls	r2, r2, #31
 8000caa:	4313      	orrs	r3, r2
 8000cac:	0019      	movs	r1, r3
 8000cae:	b007      	add	sp, #28
 8000cb0:	bcf0      	pop	{r4, r5, r6, r7}
 8000cb2:	46bb      	mov	fp, r7
 8000cb4:	46b2      	mov	sl, r6
 8000cb6:	46a9      	mov	r9, r5
 8000cb8:	46a0      	mov	r8, r4
 8000cba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cbc:	4b92      	ldr	r3, [pc, #584]	@ (8000f08 <__aeabi_dmul+0x314>)
 8000cbe:	4326      	orrs	r6, r4
 8000cc0:	18eb      	adds	r3, r5, r3
 8000cc2:	2e00      	cmp	r6, #0
 8000cc4:	d100      	bne.n	8000cc8 <__aeabi_dmul+0xd4>
 8000cc6:	e0bb      	b.n	8000e40 <__aeabi_dmul+0x24c>
 8000cc8:	2203      	movs	r2, #3
 8000cca:	4641      	mov	r1, r8
 8000ccc:	4311      	orrs	r1, r2
 8000cce:	465a      	mov	r2, fp
 8000cd0:	4688      	mov	r8, r1
 8000cd2:	9900      	ldr	r1, [sp, #0]
 8000cd4:	404a      	eors	r2, r1
 8000cd6:	2180      	movs	r1, #128	@ 0x80
 8000cd8:	0109      	lsls	r1, r1, #4
 8000cda:	468c      	mov	ip, r1
 8000cdc:	0029      	movs	r1, r5
 8000cde:	4461      	add	r1, ip
 8000ce0:	9101      	str	r1, [sp, #4]
 8000ce2:	4641      	mov	r1, r8
 8000ce4:	290a      	cmp	r1, #10
 8000ce6:	dd00      	ble.n	8000cea <__aeabi_dmul+0xf6>
 8000ce8:	e233      	b.n	8001152 <__aeabi_dmul+0x55e>
 8000cea:	4693      	mov	fp, r2
 8000cec:	2603      	movs	r6, #3
 8000cee:	4642      	mov	r2, r8
 8000cf0:	2701      	movs	r7, #1
 8000cf2:	4097      	lsls	r7, r2
 8000cf4:	21a6      	movs	r1, #166	@ 0xa6
 8000cf6:	003a      	movs	r2, r7
 8000cf8:	00c9      	lsls	r1, r1, #3
 8000cfa:	400a      	ands	r2, r1
 8000cfc:	420f      	tst	r7, r1
 8000cfe:	d031      	beq.n	8000d64 <__aeabi_dmul+0x170>
 8000d00:	9e02      	ldr	r6, [sp, #8]
 8000d02:	2e02      	cmp	r6, #2
 8000d04:	d100      	bne.n	8000d08 <__aeabi_dmul+0x114>
 8000d06:	e235      	b.n	8001174 <__aeabi_dmul+0x580>
 8000d08:	2e03      	cmp	r6, #3
 8000d0a:	d100      	bne.n	8000d0e <__aeabi_dmul+0x11a>
 8000d0c:	e1d2      	b.n	80010b4 <__aeabi_dmul+0x4c0>
 8000d0e:	4654      	mov	r4, sl
 8000d10:	4648      	mov	r0, r9
 8000d12:	2e01      	cmp	r6, #1
 8000d14:	d0c1      	beq.n	8000c9a <__aeabi_dmul+0xa6>
 8000d16:	9a01      	ldr	r2, [sp, #4]
 8000d18:	4b7d      	ldr	r3, [pc, #500]	@ (8000f10 <__aeabi_dmul+0x31c>)
 8000d1a:	4694      	mov	ip, r2
 8000d1c:	4463      	add	r3, ip
 8000d1e:	2b00      	cmp	r3, #0
 8000d20:	dc00      	bgt.n	8000d24 <__aeabi_dmul+0x130>
 8000d22:	e0c0      	b.n	8000ea6 <__aeabi_dmul+0x2b2>
 8000d24:	0742      	lsls	r2, r0, #29
 8000d26:	d009      	beq.n	8000d3c <__aeabi_dmul+0x148>
 8000d28:	220f      	movs	r2, #15
 8000d2a:	4002      	ands	r2, r0
 8000d2c:	2a04      	cmp	r2, #4
 8000d2e:	d005      	beq.n	8000d3c <__aeabi_dmul+0x148>
 8000d30:	1d02      	adds	r2, r0, #4
 8000d32:	4282      	cmp	r2, r0
 8000d34:	4180      	sbcs	r0, r0
 8000d36:	4240      	negs	r0, r0
 8000d38:	1824      	adds	r4, r4, r0
 8000d3a:	0010      	movs	r0, r2
 8000d3c:	01e2      	lsls	r2, r4, #7
 8000d3e:	d506      	bpl.n	8000d4e <__aeabi_dmul+0x15a>
 8000d40:	4b74      	ldr	r3, [pc, #464]	@ (8000f14 <__aeabi_dmul+0x320>)
 8000d42:	9a01      	ldr	r2, [sp, #4]
 8000d44:	401c      	ands	r4, r3
 8000d46:	2380      	movs	r3, #128	@ 0x80
 8000d48:	4694      	mov	ip, r2
 8000d4a:	00db      	lsls	r3, r3, #3
 8000d4c:	4463      	add	r3, ip
 8000d4e:	4a72      	ldr	r2, [pc, #456]	@ (8000f18 <__aeabi_dmul+0x324>)
 8000d50:	4293      	cmp	r3, r2
 8000d52:	dc6b      	bgt.n	8000e2c <__aeabi_dmul+0x238>
 8000d54:	0762      	lsls	r2, r4, #29
 8000d56:	08c0      	lsrs	r0, r0, #3
 8000d58:	0264      	lsls	r4, r4, #9
 8000d5a:	055b      	lsls	r3, r3, #21
 8000d5c:	4302      	orrs	r2, r0
 8000d5e:	0b24      	lsrs	r4, r4, #12
 8000d60:	0d5b      	lsrs	r3, r3, #21
 8000d62:	e79d      	b.n	8000ca0 <__aeabi_dmul+0xac>
 8000d64:	2190      	movs	r1, #144	@ 0x90
 8000d66:	0089      	lsls	r1, r1, #2
 8000d68:	420f      	tst	r7, r1
 8000d6a:	d163      	bne.n	8000e34 <__aeabi_dmul+0x240>
 8000d6c:	2288      	movs	r2, #136	@ 0x88
 8000d6e:	423a      	tst	r2, r7
 8000d70:	d100      	bne.n	8000d74 <__aeabi_dmul+0x180>
 8000d72:	e0d7      	b.n	8000f24 <__aeabi_dmul+0x330>
 8000d74:	9b00      	ldr	r3, [sp, #0]
 8000d76:	46a2      	mov	sl, r4
 8000d78:	469b      	mov	fp, r3
 8000d7a:	4681      	mov	r9, r0
 8000d7c:	9602      	str	r6, [sp, #8]
 8000d7e:	e7bf      	b.n	8000d00 <__aeabi_dmul+0x10c>
 8000d80:	0023      	movs	r3, r4
 8000d82:	4333      	orrs	r3, r6
 8000d84:	d100      	bne.n	8000d88 <__aeabi_dmul+0x194>
 8000d86:	e07f      	b.n	8000e88 <__aeabi_dmul+0x294>
 8000d88:	2c00      	cmp	r4, #0
 8000d8a:	d100      	bne.n	8000d8e <__aeabi_dmul+0x19a>
 8000d8c:	e1ad      	b.n	80010ea <__aeabi_dmul+0x4f6>
 8000d8e:	0020      	movs	r0, r4
 8000d90:	f000 fe22 	bl	80019d8 <__clzsi2>
 8000d94:	0002      	movs	r2, r0
 8000d96:	0003      	movs	r3, r0
 8000d98:	3a0b      	subs	r2, #11
 8000d9a:	201d      	movs	r0, #29
 8000d9c:	0019      	movs	r1, r3
 8000d9e:	1a82      	subs	r2, r0, r2
 8000da0:	0030      	movs	r0, r6
 8000da2:	3908      	subs	r1, #8
 8000da4:	40d0      	lsrs	r0, r2
 8000da6:	408c      	lsls	r4, r1
 8000da8:	4304      	orrs	r4, r0
 8000daa:	0030      	movs	r0, r6
 8000dac:	4088      	lsls	r0, r1
 8000dae:	4a5b      	ldr	r2, [pc, #364]	@ (8000f1c <__aeabi_dmul+0x328>)
 8000db0:	1aeb      	subs	r3, r5, r3
 8000db2:	4694      	mov	ip, r2
 8000db4:	4463      	add	r3, ip
 8000db6:	1c5a      	adds	r2, r3, #1
 8000db8:	9201      	str	r2, [sp, #4]
 8000dba:	4642      	mov	r2, r8
 8000dbc:	2600      	movs	r6, #0
 8000dbe:	2a0a      	cmp	r2, #10
 8000dc0:	dc00      	bgt.n	8000dc4 <__aeabi_dmul+0x1d0>
 8000dc2:	e75a      	b.n	8000c7a <__aeabi_dmul+0x86>
 8000dc4:	e79c      	b.n	8000d00 <__aeabi_dmul+0x10c>
 8000dc6:	4653      	mov	r3, sl
 8000dc8:	4303      	orrs	r3, r0
 8000dca:	4699      	mov	r9, r3
 8000dcc:	d054      	beq.n	8000e78 <__aeabi_dmul+0x284>
 8000dce:	4653      	mov	r3, sl
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	d100      	bne.n	8000dd6 <__aeabi_dmul+0x1e2>
 8000dd4:	e177      	b.n	80010c6 <__aeabi_dmul+0x4d2>
 8000dd6:	4650      	mov	r0, sl
 8000dd8:	f000 fdfe 	bl	80019d8 <__clzsi2>
 8000ddc:	230b      	movs	r3, #11
 8000dde:	425b      	negs	r3, r3
 8000de0:	469c      	mov	ip, r3
 8000de2:	0002      	movs	r2, r0
 8000de4:	4484      	add	ip, r0
 8000de6:	0011      	movs	r1, r2
 8000de8:	4650      	mov	r0, sl
 8000dea:	3908      	subs	r1, #8
 8000dec:	4088      	lsls	r0, r1
 8000dee:	231d      	movs	r3, #29
 8000df0:	4680      	mov	r8, r0
 8000df2:	4660      	mov	r0, ip
 8000df4:	1a1b      	subs	r3, r3, r0
 8000df6:	0020      	movs	r0, r4
 8000df8:	40d8      	lsrs	r0, r3
 8000dfa:	0003      	movs	r3, r0
 8000dfc:	4640      	mov	r0, r8
 8000dfe:	4303      	orrs	r3, r0
 8000e00:	469a      	mov	sl, r3
 8000e02:	0023      	movs	r3, r4
 8000e04:	408b      	lsls	r3, r1
 8000e06:	4699      	mov	r9, r3
 8000e08:	2300      	movs	r3, #0
 8000e0a:	4d44      	ldr	r5, [pc, #272]	@ (8000f1c <__aeabi_dmul+0x328>)
 8000e0c:	4698      	mov	r8, r3
 8000e0e:	1aad      	subs	r5, r5, r2
 8000e10:	9302      	str	r3, [sp, #8]
 8000e12:	e715      	b.n	8000c40 <__aeabi_dmul+0x4c>
 8000e14:	4652      	mov	r2, sl
 8000e16:	4302      	orrs	r2, r0
 8000e18:	4691      	mov	r9, r2
 8000e1a:	d126      	bne.n	8000e6a <__aeabi_dmul+0x276>
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	001d      	movs	r5, r3
 8000e20:	2302      	movs	r3, #2
 8000e22:	4692      	mov	sl, r2
 8000e24:	3208      	adds	r2, #8
 8000e26:	4690      	mov	r8, r2
 8000e28:	9302      	str	r3, [sp, #8]
 8000e2a:	e709      	b.n	8000c40 <__aeabi_dmul+0x4c>
 8000e2c:	2400      	movs	r4, #0
 8000e2e:	2200      	movs	r2, #0
 8000e30:	4b35      	ldr	r3, [pc, #212]	@ (8000f08 <__aeabi_dmul+0x314>)
 8000e32:	e735      	b.n	8000ca0 <__aeabi_dmul+0xac>
 8000e34:	2300      	movs	r3, #0
 8000e36:	2480      	movs	r4, #128	@ 0x80
 8000e38:	469b      	mov	fp, r3
 8000e3a:	0324      	lsls	r4, r4, #12
 8000e3c:	4b32      	ldr	r3, [pc, #200]	@ (8000f08 <__aeabi_dmul+0x314>)
 8000e3e:	e72f      	b.n	8000ca0 <__aeabi_dmul+0xac>
 8000e40:	2202      	movs	r2, #2
 8000e42:	4641      	mov	r1, r8
 8000e44:	4311      	orrs	r1, r2
 8000e46:	2280      	movs	r2, #128	@ 0x80
 8000e48:	0112      	lsls	r2, r2, #4
 8000e4a:	4694      	mov	ip, r2
 8000e4c:	002a      	movs	r2, r5
 8000e4e:	4462      	add	r2, ip
 8000e50:	4688      	mov	r8, r1
 8000e52:	9201      	str	r2, [sp, #4]
 8000e54:	290a      	cmp	r1, #10
 8000e56:	dd00      	ble.n	8000e5a <__aeabi_dmul+0x266>
 8000e58:	e752      	b.n	8000d00 <__aeabi_dmul+0x10c>
 8000e5a:	465a      	mov	r2, fp
 8000e5c:	2000      	movs	r0, #0
 8000e5e:	9900      	ldr	r1, [sp, #0]
 8000e60:	0004      	movs	r4, r0
 8000e62:	404a      	eors	r2, r1
 8000e64:	4693      	mov	fp, r2
 8000e66:	2602      	movs	r6, #2
 8000e68:	e70b      	b.n	8000c82 <__aeabi_dmul+0x8e>
 8000e6a:	220c      	movs	r2, #12
 8000e6c:	001d      	movs	r5, r3
 8000e6e:	2303      	movs	r3, #3
 8000e70:	4681      	mov	r9, r0
 8000e72:	4690      	mov	r8, r2
 8000e74:	9302      	str	r3, [sp, #8]
 8000e76:	e6e3      	b.n	8000c40 <__aeabi_dmul+0x4c>
 8000e78:	2300      	movs	r3, #0
 8000e7a:	469a      	mov	sl, r3
 8000e7c:	3304      	adds	r3, #4
 8000e7e:	4698      	mov	r8, r3
 8000e80:	3b03      	subs	r3, #3
 8000e82:	2500      	movs	r5, #0
 8000e84:	9302      	str	r3, [sp, #8]
 8000e86:	e6db      	b.n	8000c40 <__aeabi_dmul+0x4c>
 8000e88:	4642      	mov	r2, r8
 8000e8a:	3301      	adds	r3, #1
 8000e8c:	431a      	orrs	r2, r3
 8000e8e:	002b      	movs	r3, r5
 8000e90:	4690      	mov	r8, r2
 8000e92:	1c5a      	adds	r2, r3, #1
 8000e94:	9201      	str	r2, [sp, #4]
 8000e96:	4642      	mov	r2, r8
 8000e98:	2400      	movs	r4, #0
 8000e9a:	2000      	movs	r0, #0
 8000e9c:	2601      	movs	r6, #1
 8000e9e:	2a0a      	cmp	r2, #10
 8000ea0:	dc00      	bgt.n	8000ea4 <__aeabi_dmul+0x2b0>
 8000ea2:	e6ea      	b.n	8000c7a <__aeabi_dmul+0x86>
 8000ea4:	e72c      	b.n	8000d00 <__aeabi_dmul+0x10c>
 8000ea6:	2201      	movs	r2, #1
 8000ea8:	1ad2      	subs	r2, r2, r3
 8000eaa:	2a38      	cmp	r2, #56	@ 0x38
 8000eac:	dd00      	ble.n	8000eb0 <__aeabi_dmul+0x2bc>
 8000eae:	e6f4      	b.n	8000c9a <__aeabi_dmul+0xa6>
 8000eb0:	2a1f      	cmp	r2, #31
 8000eb2:	dc00      	bgt.n	8000eb6 <__aeabi_dmul+0x2c2>
 8000eb4:	e12a      	b.n	800110c <__aeabi_dmul+0x518>
 8000eb6:	211f      	movs	r1, #31
 8000eb8:	4249      	negs	r1, r1
 8000eba:	1acb      	subs	r3, r1, r3
 8000ebc:	0021      	movs	r1, r4
 8000ebe:	40d9      	lsrs	r1, r3
 8000ec0:	000b      	movs	r3, r1
 8000ec2:	2a20      	cmp	r2, #32
 8000ec4:	d005      	beq.n	8000ed2 <__aeabi_dmul+0x2de>
 8000ec6:	4a16      	ldr	r2, [pc, #88]	@ (8000f20 <__aeabi_dmul+0x32c>)
 8000ec8:	9d01      	ldr	r5, [sp, #4]
 8000eca:	4694      	mov	ip, r2
 8000ecc:	4465      	add	r5, ip
 8000ece:	40ac      	lsls	r4, r5
 8000ed0:	4320      	orrs	r0, r4
 8000ed2:	1e42      	subs	r2, r0, #1
 8000ed4:	4190      	sbcs	r0, r2
 8000ed6:	4318      	orrs	r0, r3
 8000ed8:	2307      	movs	r3, #7
 8000eda:	0019      	movs	r1, r3
 8000edc:	2400      	movs	r4, #0
 8000ede:	4001      	ands	r1, r0
 8000ee0:	4203      	tst	r3, r0
 8000ee2:	d00c      	beq.n	8000efe <__aeabi_dmul+0x30a>
 8000ee4:	230f      	movs	r3, #15
 8000ee6:	4003      	ands	r3, r0
 8000ee8:	2b04      	cmp	r3, #4
 8000eea:	d100      	bne.n	8000eee <__aeabi_dmul+0x2fa>
 8000eec:	e140      	b.n	8001170 <__aeabi_dmul+0x57c>
 8000eee:	1d03      	adds	r3, r0, #4
 8000ef0:	4283      	cmp	r3, r0
 8000ef2:	41a4      	sbcs	r4, r4
 8000ef4:	0018      	movs	r0, r3
 8000ef6:	4264      	negs	r4, r4
 8000ef8:	0761      	lsls	r1, r4, #29
 8000efa:	0264      	lsls	r4, r4, #9
 8000efc:	0b24      	lsrs	r4, r4, #12
 8000efe:	08c2      	lsrs	r2, r0, #3
 8000f00:	2300      	movs	r3, #0
 8000f02:	430a      	orrs	r2, r1
 8000f04:	e6cc      	b.n	8000ca0 <__aeabi_dmul+0xac>
 8000f06:	46c0      	nop			@ (mov r8, r8)
 8000f08:	000007ff 	.word	0x000007ff
 8000f0c:	fffffc01 	.word	0xfffffc01
 8000f10:	000003ff 	.word	0x000003ff
 8000f14:	feffffff 	.word	0xfeffffff
 8000f18:	000007fe 	.word	0x000007fe
 8000f1c:	fffffc0d 	.word	0xfffffc0d
 8000f20:	0000043e 	.word	0x0000043e
 8000f24:	4649      	mov	r1, r9
 8000f26:	464a      	mov	r2, r9
 8000f28:	0409      	lsls	r1, r1, #16
 8000f2a:	0c09      	lsrs	r1, r1, #16
 8000f2c:	000d      	movs	r5, r1
 8000f2e:	0c16      	lsrs	r6, r2, #16
 8000f30:	0c02      	lsrs	r2, r0, #16
 8000f32:	0400      	lsls	r0, r0, #16
 8000f34:	0c00      	lsrs	r0, r0, #16
 8000f36:	4345      	muls	r5, r0
 8000f38:	46ac      	mov	ip, r5
 8000f3a:	0005      	movs	r5, r0
 8000f3c:	4375      	muls	r5, r6
 8000f3e:	46a8      	mov	r8, r5
 8000f40:	0015      	movs	r5, r2
 8000f42:	000f      	movs	r7, r1
 8000f44:	4375      	muls	r5, r6
 8000f46:	9200      	str	r2, [sp, #0]
 8000f48:	9502      	str	r5, [sp, #8]
 8000f4a:	002a      	movs	r2, r5
 8000f4c:	9d00      	ldr	r5, [sp, #0]
 8000f4e:	436f      	muls	r7, r5
 8000f50:	4665      	mov	r5, ip
 8000f52:	0c2d      	lsrs	r5, r5, #16
 8000f54:	46a9      	mov	r9, r5
 8000f56:	4447      	add	r7, r8
 8000f58:	444f      	add	r7, r9
 8000f5a:	45b8      	cmp	r8, r7
 8000f5c:	d905      	bls.n	8000f6a <__aeabi_dmul+0x376>
 8000f5e:	0015      	movs	r5, r2
 8000f60:	2280      	movs	r2, #128	@ 0x80
 8000f62:	0252      	lsls	r2, r2, #9
 8000f64:	4690      	mov	r8, r2
 8000f66:	4445      	add	r5, r8
 8000f68:	9502      	str	r5, [sp, #8]
 8000f6a:	0c3d      	lsrs	r5, r7, #16
 8000f6c:	9503      	str	r5, [sp, #12]
 8000f6e:	4665      	mov	r5, ip
 8000f70:	042d      	lsls	r5, r5, #16
 8000f72:	043f      	lsls	r7, r7, #16
 8000f74:	0c2d      	lsrs	r5, r5, #16
 8000f76:	46ac      	mov	ip, r5
 8000f78:	003d      	movs	r5, r7
 8000f7a:	4465      	add	r5, ip
 8000f7c:	9504      	str	r5, [sp, #16]
 8000f7e:	0c25      	lsrs	r5, r4, #16
 8000f80:	0424      	lsls	r4, r4, #16
 8000f82:	0c24      	lsrs	r4, r4, #16
 8000f84:	46ac      	mov	ip, r5
 8000f86:	0025      	movs	r5, r4
 8000f88:	4375      	muls	r5, r6
 8000f8a:	46a8      	mov	r8, r5
 8000f8c:	4665      	mov	r5, ip
 8000f8e:	000f      	movs	r7, r1
 8000f90:	4369      	muls	r1, r5
 8000f92:	4441      	add	r1, r8
 8000f94:	4689      	mov	r9, r1
 8000f96:	4367      	muls	r7, r4
 8000f98:	0c39      	lsrs	r1, r7, #16
 8000f9a:	4449      	add	r1, r9
 8000f9c:	436e      	muls	r6, r5
 8000f9e:	4588      	cmp	r8, r1
 8000fa0:	d903      	bls.n	8000faa <__aeabi_dmul+0x3b6>
 8000fa2:	2280      	movs	r2, #128	@ 0x80
 8000fa4:	0252      	lsls	r2, r2, #9
 8000fa6:	4690      	mov	r8, r2
 8000fa8:	4446      	add	r6, r8
 8000faa:	0c0d      	lsrs	r5, r1, #16
 8000fac:	46a8      	mov	r8, r5
 8000fae:	0035      	movs	r5, r6
 8000fb0:	4445      	add	r5, r8
 8000fb2:	9505      	str	r5, [sp, #20]
 8000fb4:	9d03      	ldr	r5, [sp, #12]
 8000fb6:	043f      	lsls	r7, r7, #16
 8000fb8:	46a8      	mov	r8, r5
 8000fba:	0c3f      	lsrs	r7, r7, #16
 8000fbc:	0409      	lsls	r1, r1, #16
 8000fbe:	19c9      	adds	r1, r1, r7
 8000fc0:	4488      	add	r8, r1
 8000fc2:	4645      	mov	r5, r8
 8000fc4:	9503      	str	r5, [sp, #12]
 8000fc6:	4655      	mov	r5, sl
 8000fc8:	042e      	lsls	r6, r5, #16
 8000fca:	0c36      	lsrs	r6, r6, #16
 8000fcc:	0c2f      	lsrs	r7, r5, #16
 8000fce:	0035      	movs	r5, r6
 8000fd0:	4345      	muls	r5, r0
 8000fd2:	4378      	muls	r0, r7
 8000fd4:	4681      	mov	r9, r0
 8000fd6:	0038      	movs	r0, r7
 8000fd8:	46a8      	mov	r8, r5
 8000fda:	0c2d      	lsrs	r5, r5, #16
 8000fdc:	46aa      	mov	sl, r5
 8000fde:	9a00      	ldr	r2, [sp, #0]
 8000fe0:	4350      	muls	r0, r2
 8000fe2:	4372      	muls	r2, r6
 8000fe4:	444a      	add	r2, r9
 8000fe6:	4452      	add	r2, sl
 8000fe8:	4591      	cmp	r9, r2
 8000fea:	d903      	bls.n	8000ff4 <__aeabi_dmul+0x400>
 8000fec:	2580      	movs	r5, #128	@ 0x80
 8000fee:	026d      	lsls	r5, r5, #9
 8000ff0:	46a9      	mov	r9, r5
 8000ff2:	4448      	add	r0, r9
 8000ff4:	0c15      	lsrs	r5, r2, #16
 8000ff6:	46a9      	mov	r9, r5
 8000ff8:	4645      	mov	r5, r8
 8000ffa:	042d      	lsls	r5, r5, #16
 8000ffc:	0c2d      	lsrs	r5, r5, #16
 8000ffe:	46a8      	mov	r8, r5
 8001000:	4665      	mov	r5, ip
 8001002:	437d      	muls	r5, r7
 8001004:	0412      	lsls	r2, r2, #16
 8001006:	4448      	add	r0, r9
 8001008:	4490      	add	r8, r2
 800100a:	46a9      	mov	r9, r5
 800100c:	0032      	movs	r2, r6
 800100e:	4665      	mov	r5, ip
 8001010:	4362      	muls	r2, r4
 8001012:	436e      	muls	r6, r5
 8001014:	437c      	muls	r4, r7
 8001016:	0c17      	lsrs	r7, r2, #16
 8001018:	1936      	adds	r6, r6, r4
 800101a:	19bf      	adds	r7, r7, r6
 800101c:	42bc      	cmp	r4, r7
 800101e:	d903      	bls.n	8001028 <__aeabi_dmul+0x434>
 8001020:	2480      	movs	r4, #128	@ 0x80
 8001022:	0264      	lsls	r4, r4, #9
 8001024:	46a4      	mov	ip, r4
 8001026:	44e1      	add	r9, ip
 8001028:	9c02      	ldr	r4, [sp, #8]
 800102a:	9e03      	ldr	r6, [sp, #12]
 800102c:	46a4      	mov	ip, r4
 800102e:	9d05      	ldr	r5, [sp, #20]
 8001030:	4466      	add	r6, ip
 8001032:	428e      	cmp	r6, r1
 8001034:	4189      	sbcs	r1, r1
 8001036:	46ac      	mov	ip, r5
 8001038:	0412      	lsls	r2, r2, #16
 800103a:	043c      	lsls	r4, r7, #16
 800103c:	0c12      	lsrs	r2, r2, #16
 800103e:	18a2      	adds	r2, r4, r2
 8001040:	4462      	add	r2, ip
 8001042:	4249      	negs	r1, r1
 8001044:	1854      	adds	r4, r2, r1
 8001046:	4446      	add	r6, r8
 8001048:	46a4      	mov	ip, r4
 800104a:	4546      	cmp	r6, r8
 800104c:	41a4      	sbcs	r4, r4
 800104e:	4682      	mov	sl, r0
 8001050:	4264      	negs	r4, r4
 8001052:	46a0      	mov	r8, r4
 8001054:	42aa      	cmp	r2, r5
 8001056:	4192      	sbcs	r2, r2
 8001058:	458c      	cmp	ip, r1
 800105a:	4189      	sbcs	r1, r1
 800105c:	44e2      	add	sl, ip
 800105e:	44d0      	add	r8, sl
 8001060:	4249      	negs	r1, r1
 8001062:	4252      	negs	r2, r2
 8001064:	430a      	orrs	r2, r1
 8001066:	45a0      	cmp	r8, r4
 8001068:	41a4      	sbcs	r4, r4
 800106a:	4582      	cmp	sl, r0
 800106c:	4189      	sbcs	r1, r1
 800106e:	4264      	negs	r4, r4
 8001070:	4249      	negs	r1, r1
 8001072:	430c      	orrs	r4, r1
 8001074:	4641      	mov	r1, r8
 8001076:	0c3f      	lsrs	r7, r7, #16
 8001078:	19d2      	adds	r2, r2, r7
 800107a:	1912      	adds	r2, r2, r4
 800107c:	0dcc      	lsrs	r4, r1, #23
 800107e:	9904      	ldr	r1, [sp, #16]
 8001080:	0270      	lsls	r0, r6, #9
 8001082:	4308      	orrs	r0, r1
 8001084:	1e41      	subs	r1, r0, #1
 8001086:	4188      	sbcs	r0, r1
 8001088:	4641      	mov	r1, r8
 800108a:	444a      	add	r2, r9
 800108c:	0df6      	lsrs	r6, r6, #23
 800108e:	0252      	lsls	r2, r2, #9
 8001090:	4330      	orrs	r0, r6
 8001092:	0249      	lsls	r1, r1, #9
 8001094:	4314      	orrs	r4, r2
 8001096:	4308      	orrs	r0, r1
 8001098:	01d2      	lsls	r2, r2, #7
 800109a:	d535      	bpl.n	8001108 <__aeabi_dmul+0x514>
 800109c:	2201      	movs	r2, #1
 800109e:	0843      	lsrs	r3, r0, #1
 80010a0:	4002      	ands	r2, r0
 80010a2:	4313      	orrs	r3, r2
 80010a4:	07e0      	lsls	r0, r4, #31
 80010a6:	4318      	orrs	r0, r3
 80010a8:	0864      	lsrs	r4, r4, #1
 80010aa:	e634      	b.n	8000d16 <__aeabi_dmul+0x122>
 80010ac:	9b00      	ldr	r3, [sp, #0]
 80010ae:	46a2      	mov	sl, r4
 80010b0:	469b      	mov	fp, r3
 80010b2:	4681      	mov	r9, r0
 80010b4:	2480      	movs	r4, #128	@ 0x80
 80010b6:	4653      	mov	r3, sl
 80010b8:	0324      	lsls	r4, r4, #12
 80010ba:	431c      	orrs	r4, r3
 80010bc:	0324      	lsls	r4, r4, #12
 80010be:	464a      	mov	r2, r9
 80010c0:	4b2e      	ldr	r3, [pc, #184]	@ (800117c <__aeabi_dmul+0x588>)
 80010c2:	0b24      	lsrs	r4, r4, #12
 80010c4:	e5ec      	b.n	8000ca0 <__aeabi_dmul+0xac>
 80010c6:	f000 fc87 	bl	80019d8 <__clzsi2>
 80010ca:	2315      	movs	r3, #21
 80010cc:	469c      	mov	ip, r3
 80010ce:	4484      	add	ip, r0
 80010d0:	0002      	movs	r2, r0
 80010d2:	4663      	mov	r3, ip
 80010d4:	3220      	adds	r2, #32
 80010d6:	2b1c      	cmp	r3, #28
 80010d8:	dc00      	bgt.n	80010dc <__aeabi_dmul+0x4e8>
 80010da:	e684      	b.n	8000de6 <__aeabi_dmul+0x1f2>
 80010dc:	2300      	movs	r3, #0
 80010de:	4699      	mov	r9, r3
 80010e0:	0023      	movs	r3, r4
 80010e2:	3808      	subs	r0, #8
 80010e4:	4083      	lsls	r3, r0
 80010e6:	469a      	mov	sl, r3
 80010e8:	e68e      	b.n	8000e08 <__aeabi_dmul+0x214>
 80010ea:	f000 fc75 	bl	80019d8 <__clzsi2>
 80010ee:	0002      	movs	r2, r0
 80010f0:	0003      	movs	r3, r0
 80010f2:	3215      	adds	r2, #21
 80010f4:	3320      	adds	r3, #32
 80010f6:	2a1c      	cmp	r2, #28
 80010f8:	dc00      	bgt.n	80010fc <__aeabi_dmul+0x508>
 80010fa:	e64e      	b.n	8000d9a <__aeabi_dmul+0x1a6>
 80010fc:	0002      	movs	r2, r0
 80010fe:	0034      	movs	r4, r6
 8001100:	3a08      	subs	r2, #8
 8001102:	2000      	movs	r0, #0
 8001104:	4094      	lsls	r4, r2
 8001106:	e652      	b.n	8000dae <__aeabi_dmul+0x1ba>
 8001108:	9301      	str	r3, [sp, #4]
 800110a:	e604      	b.n	8000d16 <__aeabi_dmul+0x122>
 800110c:	4b1c      	ldr	r3, [pc, #112]	@ (8001180 <__aeabi_dmul+0x58c>)
 800110e:	0021      	movs	r1, r4
 8001110:	469c      	mov	ip, r3
 8001112:	0003      	movs	r3, r0
 8001114:	9d01      	ldr	r5, [sp, #4]
 8001116:	40d3      	lsrs	r3, r2
 8001118:	4465      	add	r5, ip
 800111a:	40a9      	lsls	r1, r5
 800111c:	4319      	orrs	r1, r3
 800111e:	0003      	movs	r3, r0
 8001120:	40ab      	lsls	r3, r5
 8001122:	1e58      	subs	r0, r3, #1
 8001124:	4183      	sbcs	r3, r0
 8001126:	4319      	orrs	r1, r3
 8001128:	0008      	movs	r0, r1
 800112a:	40d4      	lsrs	r4, r2
 800112c:	074b      	lsls	r3, r1, #29
 800112e:	d009      	beq.n	8001144 <__aeabi_dmul+0x550>
 8001130:	230f      	movs	r3, #15
 8001132:	400b      	ands	r3, r1
 8001134:	2b04      	cmp	r3, #4
 8001136:	d005      	beq.n	8001144 <__aeabi_dmul+0x550>
 8001138:	1d0b      	adds	r3, r1, #4
 800113a:	428b      	cmp	r3, r1
 800113c:	4180      	sbcs	r0, r0
 800113e:	4240      	negs	r0, r0
 8001140:	1824      	adds	r4, r4, r0
 8001142:	0018      	movs	r0, r3
 8001144:	0223      	lsls	r3, r4, #8
 8001146:	d400      	bmi.n	800114a <__aeabi_dmul+0x556>
 8001148:	e6d6      	b.n	8000ef8 <__aeabi_dmul+0x304>
 800114a:	2301      	movs	r3, #1
 800114c:	2400      	movs	r4, #0
 800114e:	2200      	movs	r2, #0
 8001150:	e5a6      	b.n	8000ca0 <__aeabi_dmul+0xac>
 8001152:	290f      	cmp	r1, #15
 8001154:	d1aa      	bne.n	80010ac <__aeabi_dmul+0x4b8>
 8001156:	2380      	movs	r3, #128	@ 0x80
 8001158:	4652      	mov	r2, sl
 800115a:	031b      	lsls	r3, r3, #12
 800115c:	421a      	tst	r2, r3
 800115e:	d0a9      	beq.n	80010b4 <__aeabi_dmul+0x4c0>
 8001160:	421c      	tst	r4, r3
 8001162:	d1a7      	bne.n	80010b4 <__aeabi_dmul+0x4c0>
 8001164:	431c      	orrs	r4, r3
 8001166:	9b00      	ldr	r3, [sp, #0]
 8001168:	0002      	movs	r2, r0
 800116a:	469b      	mov	fp, r3
 800116c:	4b03      	ldr	r3, [pc, #12]	@ (800117c <__aeabi_dmul+0x588>)
 800116e:	e597      	b.n	8000ca0 <__aeabi_dmul+0xac>
 8001170:	2400      	movs	r4, #0
 8001172:	e6c1      	b.n	8000ef8 <__aeabi_dmul+0x304>
 8001174:	2400      	movs	r4, #0
 8001176:	4b01      	ldr	r3, [pc, #4]	@ (800117c <__aeabi_dmul+0x588>)
 8001178:	0022      	movs	r2, r4
 800117a:	e591      	b.n	8000ca0 <__aeabi_dmul+0xac>
 800117c:	000007ff 	.word	0x000007ff
 8001180:	0000041e 	.word	0x0000041e

08001184 <__aeabi_dsub>:
 8001184:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001186:	464e      	mov	r6, r9
 8001188:	4645      	mov	r5, r8
 800118a:	46de      	mov	lr, fp
 800118c:	4657      	mov	r7, sl
 800118e:	b5e0      	push	{r5, r6, r7, lr}
 8001190:	b085      	sub	sp, #20
 8001192:	9000      	str	r0, [sp, #0]
 8001194:	9101      	str	r1, [sp, #4]
 8001196:	030c      	lsls	r4, r1, #12
 8001198:	004f      	lsls	r7, r1, #1
 800119a:	0fce      	lsrs	r6, r1, #31
 800119c:	0a61      	lsrs	r1, r4, #9
 800119e:	9c00      	ldr	r4, [sp, #0]
 80011a0:	46b0      	mov	r8, r6
 80011a2:	0f64      	lsrs	r4, r4, #29
 80011a4:	430c      	orrs	r4, r1
 80011a6:	9900      	ldr	r1, [sp, #0]
 80011a8:	0d7f      	lsrs	r7, r7, #21
 80011aa:	00c8      	lsls	r0, r1, #3
 80011ac:	0011      	movs	r1, r2
 80011ae:	001a      	movs	r2, r3
 80011b0:	031b      	lsls	r3, r3, #12
 80011b2:	469c      	mov	ip, r3
 80011b4:	9100      	str	r1, [sp, #0]
 80011b6:	9201      	str	r2, [sp, #4]
 80011b8:	0051      	lsls	r1, r2, #1
 80011ba:	0d4b      	lsrs	r3, r1, #21
 80011bc:	4699      	mov	r9, r3
 80011be:	9b01      	ldr	r3, [sp, #4]
 80011c0:	9d00      	ldr	r5, [sp, #0]
 80011c2:	0fd9      	lsrs	r1, r3, #31
 80011c4:	4663      	mov	r3, ip
 80011c6:	0f6a      	lsrs	r2, r5, #29
 80011c8:	0a5b      	lsrs	r3, r3, #9
 80011ca:	4313      	orrs	r3, r2
 80011cc:	00ea      	lsls	r2, r5, #3
 80011ce:	4694      	mov	ip, r2
 80011d0:	4693      	mov	fp, r2
 80011d2:	4ac1      	ldr	r2, [pc, #772]	@ (80014d8 <__aeabi_dsub+0x354>)
 80011d4:	9003      	str	r0, [sp, #12]
 80011d6:	9302      	str	r3, [sp, #8]
 80011d8:	4591      	cmp	r9, r2
 80011da:	d100      	bne.n	80011de <__aeabi_dsub+0x5a>
 80011dc:	e0cd      	b.n	800137a <__aeabi_dsub+0x1f6>
 80011de:	2501      	movs	r5, #1
 80011e0:	4069      	eors	r1, r5
 80011e2:	464d      	mov	r5, r9
 80011e4:	1b7d      	subs	r5, r7, r5
 80011e6:	46aa      	mov	sl, r5
 80011e8:	428e      	cmp	r6, r1
 80011ea:	d100      	bne.n	80011ee <__aeabi_dsub+0x6a>
 80011ec:	e080      	b.n	80012f0 <__aeabi_dsub+0x16c>
 80011ee:	2d00      	cmp	r5, #0
 80011f0:	dc00      	bgt.n	80011f4 <__aeabi_dsub+0x70>
 80011f2:	e335      	b.n	8001860 <__aeabi_dsub+0x6dc>
 80011f4:	4649      	mov	r1, r9
 80011f6:	2900      	cmp	r1, #0
 80011f8:	d100      	bne.n	80011fc <__aeabi_dsub+0x78>
 80011fa:	e0df      	b.n	80013bc <__aeabi_dsub+0x238>
 80011fc:	4297      	cmp	r7, r2
 80011fe:	d100      	bne.n	8001202 <__aeabi_dsub+0x7e>
 8001200:	e194      	b.n	800152c <__aeabi_dsub+0x3a8>
 8001202:	4652      	mov	r2, sl
 8001204:	2501      	movs	r5, #1
 8001206:	2a38      	cmp	r2, #56	@ 0x38
 8001208:	dc19      	bgt.n	800123e <__aeabi_dsub+0xba>
 800120a:	2280      	movs	r2, #128	@ 0x80
 800120c:	9b02      	ldr	r3, [sp, #8]
 800120e:	0412      	lsls	r2, r2, #16
 8001210:	4313      	orrs	r3, r2
 8001212:	9302      	str	r3, [sp, #8]
 8001214:	4652      	mov	r2, sl
 8001216:	2a1f      	cmp	r2, #31
 8001218:	dd00      	ble.n	800121c <__aeabi_dsub+0x98>
 800121a:	e1e3      	b.n	80015e4 <__aeabi_dsub+0x460>
 800121c:	4653      	mov	r3, sl
 800121e:	2220      	movs	r2, #32
 8001220:	4661      	mov	r1, ip
 8001222:	9d02      	ldr	r5, [sp, #8]
 8001224:	1ad2      	subs	r2, r2, r3
 8001226:	4095      	lsls	r5, r2
 8001228:	40d9      	lsrs	r1, r3
 800122a:	430d      	orrs	r5, r1
 800122c:	4661      	mov	r1, ip
 800122e:	4091      	lsls	r1, r2
 8001230:	000a      	movs	r2, r1
 8001232:	1e51      	subs	r1, r2, #1
 8001234:	418a      	sbcs	r2, r1
 8001236:	4315      	orrs	r5, r2
 8001238:	9a02      	ldr	r2, [sp, #8]
 800123a:	40da      	lsrs	r2, r3
 800123c:	1aa4      	subs	r4, r4, r2
 800123e:	1b45      	subs	r5, r0, r5
 8001240:	42a8      	cmp	r0, r5
 8001242:	4180      	sbcs	r0, r0
 8001244:	4240      	negs	r0, r0
 8001246:	1a24      	subs	r4, r4, r0
 8001248:	0223      	lsls	r3, r4, #8
 800124a:	d400      	bmi.n	800124e <__aeabi_dsub+0xca>
 800124c:	e13d      	b.n	80014ca <__aeabi_dsub+0x346>
 800124e:	0264      	lsls	r4, r4, #9
 8001250:	0a64      	lsrs	r4, r4, #9
 8001252:	2c00      	cmp	r4, #0
 8001254:	d100      	bne.n	8001258 <__aeabi_dsub+0xd4>
 8001256:	e147      	b.n	80014e8 <__aeabi_dsub+0x364>
 8001258:	0020      	movs	r0, r4
 800125a:	f000 fbbd 	bl	80019d8 <__clzsi2>
 800125e:	0003      	movs	r3, r0
 8001260:	3b08      	subs	r3, #8
 8001262:	2120      	movs	r1, #32
 8001264:	0028      	movs	r0, r5
 8001266:	1aca      	subs	r2, r1, r3
 8001268:	40d0      	lsrs	r0, r2
 800126a:	409c      	lsls	r4, r3
 800126c:	0002      	movs	r2, r0
 800126e:	409d      	lsls	r5, r3
 8001270:	4322      	orrs	r2, r4
 8001272:	429f      	cmp	r7, r3
 8001274:	dd00      	ble.n	8001278 <__aeabi_dsub+0xf4>
 8001276:	e177      	b.n	8001568 <__aeabi_dsub+0x3e4>
 8001278:	1bd8      	subs	r0, r3, r7
 800127a:	3001      	adds	r0, #1
 800127c:	1a09      	subs	r1, r1, r0
 800127e:	002c      	movs	r4, r5
 8001280:	408d      	lsls	r5, r1
 8001282:	40c4      	lsrs	r4, r0
 8001284:	1e6b      	subs	r3, r5, #1
 8001286:	419d      	sbcs	r5, r3
 8001288:	0013      	movs	r3, r2
 800128a:	40c2      	lsrs	r2, r0
 800128c:	408b      	lsls	r3, r1
 800128e:	4325      	orrs	r5, r4
 8001290:	2700      	movs	r7, #0
 8001292:	0014      	movs	r4, r2
 8001294:	431d      	orrs	r5, r3
 8001296:	076b      	lsls	r3, r5, #29
 8001298:	d009      	beq.n	80012ae <__aeabi_dsub+0x12a>
 800129a:	230f      	movs	r3, #15
 800129c:	402b      	ands	r3, r5
 800129e:	2b04      	cmp	r3, #4
 80012a0:	d005      	beq.n	80012ae <__aeabi_dsub+0x12a>
 80012a2:	1d2b      	adds	r3, r5, #4
 80012a4:	42ab      	cmp	r3, r5
 80012a6:	41ad      	sbcs	r5, r5
 80012a8:	426d      	negs	r5, r5
 80012aa:	1964      	adds	r4, r4, r5
 80012ac:	001d      	movs	r5, r3
 80012ae:	0223      	lsls	r3, r4, #8
 80012b0:	d400      	bmi.n	80012b4 <__aeabi_dsub+0x130>
 80012b2:	e140      	b.n	8001536 <__aeabi_dsub+0x3b2>
 80012b4:	4a88      	ldr	r2, [pc, #544]	@ (80014d8 <__aeabi_dsub+0x354>)
 80012b6:	3701      	adds	r7, #1
 80012b8:	4297      	cmp	r7, r2
 80012ba:	d100      	bne.n	80012be <__aeabi_dsub+0x13a>
 80012bc:	e101      	b.n	80014c2 <__aeabi_dsub+0x33e>
 80012be:	2601      	movs	r6, #1
 80012c0:	4643      	mov	r3, r8
 80012c2:	4986      	ldr	r1, [pc, #536]	@ (80014dc <__aeabi_dsub+0x358>)
 80012c4:	08ed      	lsrs	r5, r5, #3
 80012c6:	4021      	ands	r1, r4
 80012c8:	074a      	lsls	r2, r1, #29
 80012ca:	432a      	orrs	r2, r5
 80012cc:	057c      	lsls	r4, r7, #21
 80012ce:	024d      	lsls	r5, r1, #9
 80012d0:	0b2d      	lsrs	r5, r5, #12
 80012d2:	0d64      	lsrs	r4, r4, #21
 80012d4:	401e      	ands	r6, r3
 80012d6:	0524      	lsls	r4, r4, #20
 80012d8:	432c      	orrs	r4, r5
 80012da:	07f6      	lsls	r6, r6, #31
 80012dc:	4334      	orrs	r4, r6
 80012de:	0010      	movs	r0, r2
 80012e0:	0021      	movs	r1, r4
 80012e2:	b005      	add	sp, #20
 80012e4:	bcf0      	pop	{r4, r5, r6, r7}
 80012e6:	46bb      	mov	fp, r7
 80012e8:	46b2      	mov	sl, r6
 80012ea:	46a9      	mov	r9, r5
 80012ec:	46a0      	mov	r8, r4
 80012ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012f0:	2d00      	cmp	r5, #0
 80012f2:	dc00      	bgt.n	80012f6 <__aeabi_dsub+0x172>
 80012f4:	e2d0      	b.n	8001898 <__aeabi_dsub+0x714>
 80012f6:	4649      	mov	r1, r9
 80012f8:	2900      	cmp	r1, #0
 80012fa:	d000      	beq.n	80012fe <__aeabi_dsub+0x17a>
 80012fc:	e0d4      	b.n	80014a8 <__aeabi_dsub+0x324>
 80012fe:	4661      	mov	r1, ip
 8001300:	9b02      	ldr	r3, [sp, #8]
 8001302:	4319      	orrs	r1, r3
 8001304:	d100      	bne.n	8001308 <__aeabi_dsub+0x184>
 8001306:	e12b      	b.n	8001560 <__aeabi_dsub+0x3dc>
 8001308:	1e69      	subs	r1, r5, #1
 800130a:	2d01      	cmp	r5, #1
 800130c:	d100      	bne.n	8001310 <__aeabi_dsub+0x18c>
 800130e:	e1d9      	b.n	80016c4 <__aeabi_dsub+0x540>
 8001310:	4295      	cmp	r5, r2
 8001312:	d100      	bne.n	8001316 <__aeabi_dsub+0x192>
 8001314:	e10a      	b.n	800152c <__aeabi_dsub+0x3a8>
 8001316:	2501      	movs	r5, #1
 8001318:	2938      	cmp	r1, #56	@ 0x38
 800131a:	dc17      	bgt.n	800134c <__aeabi_dsub+0x1c8>
 800131c:	468a      	mov	sl, r1
 800131e:	4653      	mov	r3, sl
 8001320:	2b1f      	cmp	r3, #31
 8001322:	dd00      	ble.n	8001326 <__aeabi_dsub+0x1a2>
 8001324:	e1e7      	b.n	80016f6 <__aeabi_dsub+0x572>
 8001326:	2220      	movs	r2, #32
 8001328:	1ad2      	subs	r2, r2, r3
 800132a:	9b02      	ldr	r3, [sp, #8]
 800132c:	4661      	mov	r1, ip
 800132e:	4093      	lsls	r3, r2
 8001330:	001d      	movs	r5, r3
 8001332:	4653      	mov	r3, sl
 8001334:	40d9      	lsrs	r1, r3
 8001336:	4663      	mov	r3, ip
 8001338:	4093      	lsls	r3, r2
 800133a:	001a      	movs	r2, r3
 800133c:	430d      	orrs	r5, r1
 800133e:	1e51      	subs	r1, r2, #1
 8001340:	418a      	sbcs	r2, r1
 8001342:	4653      	mov	r3, sl
 8001344:	4315      	orrs	r5, r2
 8001346:	9a02      	ldr	r2, [sp, #8]
 8001348:	40da      	lsrs	r2, r3
 800134a:	18a4      	adds	r4, r4, r2
 800134c:	182d      	adds	r5, r5, r0
 800134e:	4285      	cmp	r5, r0
 8001350:	4180      	sbcs	r0, r0
 8001352:	4240      	negs	r0, r0
 8001354:	1824      	adds	r4, r4, r0
 8001356:	0223      	lsls	r3, r4, #8
 8001358:	d400      	bmi.n	800135c <__aeabi_dsub+0x1d8>
 800135a:	e0b6      	b.n	80014ca <__aeabi_dsub+0x346>
 800135c:	4b5e      	ldr	r3, [pc, #376]	@ (80014d8 <__aeabi_dsub+0x354>)
 800135e:	3701      	adds	r7, #1
 8001360:	429f      	cmp	r7, r3
 8001362:	d100      	bne.n	8001366 <__aeabi_dsub+0x1e2>
 8001364:	e0ad      	b.n	80014c2 <__aeabi_dsub+0x33e>
 8001366:	2101      	movs	r1, #1
 8001368:	4b5c      	ldr	r3, [pc, #368]	@ (80014dc <__aeabi_dsub+0x358>)
 800136a:	086a      	lsrs	r2, r5, #1
 800136c:	401c      	ands	r4, r3
 800136e:	4029      	ands	r1, r5
 8001370:	430a      	orrs	r2, r1
 8001372:	07e5      	lsls	r5, r4, #31
 8001374:	4315      	orrs	r5, r2
 8001376:	0864      	lsrs	r4, r4, #1
 8001378:	e78d      	b.n	8001296 <__aeabi_dsub+0x112>
 800137a:	4a59      	ldr	r2, [pc, #356]	@ (80014e0 <__aeabi_dsub+0x35c>)
 800137c:	9b02      	ldr	r3, [sp, #8]
 800137e:	4692      	mov	sl, r2
 8001380:	4662      	mov	r2, ip
 8001382:	44ba      	add	sl, r7
 8001384:	431a      	orrs	r2, r3
 8001386:	d02c      	beq.n	80013e2 <__aeabi_dsub+0x25e>
 8001388:	428e      	cmp	r6, r1
 800138a:	d02e      	beq.n	80013ea <__aeabi_dsub+0x266>
 800138c:	4652      	mov	r2, sl
 800138e:	2a00      	cmp	r2, #0
 8001390:	d060      	beq.n	8001454 <__aeabi_dsub+0x2d0>
 8001392:	2f00      	cmp	r7, #0
 8001394:	d100      	bne.n	8001398 <__aeabi_dsub+0x214>
 8001396:	e0db      	b.n	8001550 <__aeabi_dsub+0x3cc>
 8001398:	4663      	mov	r3, ip
 800139a:	000e      	movs	r6, r1
 800139c:	9c02      	ldr	r4, [sp, #8]
 800139e:	08d8      	lsrs	r0, r3, #3
 80013a0:	0762      	lsls	r2, r4, #29
 80013a2:	4302      	orrs	r2, r0
 80013a4:	08e4      	lsrs	r4, r4, #3
 80013a6:	0013      	movs	r3, r2
 80013a8:	4323      	orrs	r3, r4
 80013aa:	d100      	bne.n	80013ae <__aeabi_dsub+0x22a>
 80013ac:	e254      	b.n	8001858 <__aeabi_dsub+0x6d4>
 80013ae:	2580      	movs	r5, #128	@ 0x80
 80013b0:	032d      	lsls	r5, r5, #12
 80013b2:	4325      	orrs	r5, r4
 80013b4:	032d      	lsls	r5, r5, #12
 80013b6:	4c48      	ldr	r4, [pc, #288]	@ (80014d8 <__aeabi_dsub+0x354>)
 80013b8:	0b2d      	lsrs	r5, r5, #12
 80013ba:	e78c      	b.n	80012d6 <__aeabi_dsub+0x152>
 80013bc:	4661      	mov	r1, ip
 80013be:	9b02      	ldr	r3, [sp, #8]
 80013c0:	4319      	orrs	r1, r3
 80013c2:	d100      	bne.n	80013c6 <__aeabi_dsub+0x242>
 80013c4:	e0cc      	b.n	8001560 <__aeabi_dsub+0x3dc>
 80013c6:	0029      	movs	r1, r5
 80013c8:	3901      	subs	r1, #1
 80013ca:	2d01      	cmp	r5, #1
 80013cc:	d100      	bne.n	80013d0 <__aeabi_dsub+0x24c>
 80013ce:	e188      	b.n	80016e2 <__aeabi_dsub+0x55e>
 80013d0:	4295      	cmp	r5, r2
 80013d2:	d100      	bne.n	80013d6 <__aeabi_dsub+0x252>
 80013d4:	e0aa      	b.n	800152c <__aeabi_dsub+0x3a8>
 80013d6:	2501      	movs	r5, #1
 80013d8:	2938      	cmp	r1, #56	@ 0x38
 80013da:	dd00      	ble.n	80013de <__aeabi_dsub+0x25a>
 80013dc:	e72f      	b.n	800123e <__aeabi_dsub+0xba>
 80013de:	468a      	mov	sl, r1
 80013e0:	e718      	b.n	8001214 <__aeabi_dsub+0x90>
 80013e2:	2201      	movs	r2, #1
 80013e4:	4051      	eors	r1, r2
 80013e6:	428e      	cmp	r6, r1
 80013e8:	d1d0      	bne.n	800138c <__aeabi_dsub+0x208>
 80013ea:	4653      	mov	r3, sl
 80013ec:	2b00      	cmp	r3, #0
 80013ee:	d100      	bne.n	80013f2 <__aeabi_dsub+0x26e>
 80013f0:	e0be      	b.n	8001570 <__aeabi_dsub+0x3ec>
 80013f2:	2f00      	cmp	r7, #0
 80013f4:	d000      	beq.n	80013f8 <__aeabi_dsub+0x274>
 80013f6:	e138      	b.n	800166a <__aeabi_dsub+0x4e6>
 80013f8:	46ca      	mov	sl, r9
 80013fa:	0022      	movs	r2, r4
 80013fc:	4302      	orrs	r2, r0
 80013fe:	d100      	bne.n	8001402 <__aeabi_dsub+0x27e>
 8001400:	e1e2      	b.n	80017c8 <__aeabi_dsub+0x644>
 8001402:	4653      	mov	r3, sl
 8001404:	1e59      	subs	r1, r3, #1
 8001406:	2b01      	cmp	r3, #1
 8001408:	d100      	bne.n	800140c <__aeabi_dsub+0x288>
 800140a:	e20d      	b.n	8001828 <__aeabi_dsub+0x6a4>
 800140c:	4a32      	ldr	r2, [pc, #200]	@ (80014d8 <__aeabi_dsub+0x354>)
 800140e:	4592      	cmp	sl, r2
 8001410:	d100      	bne.n	8001414 <__aeabi_dsub+0x290>
 8001412:	e1d2      	b.n	80017ba <__aeabi_dsub+0x636>
 8001414:	2701      	movs	r7, #1
 8001416:	2938      	cmp	r1, #56	@ 0x38
 8001418:	dc13      	bgt.n	8001442 <__aeabi_dsub+0x2be>
 800141a:	291f      	cmp	r1, #31
 800141c:	dd00      	ble.n	8001420 <__aeabi_dsub+0x29c>
 800141e:	e1ee      	b.n	80017fe <__aeabi_dsub+0x67a>
 8001420:	2220      	movs	r2, #32
 8001422:	9b02      	ldr	r3, [sp, #8]
 8001424:	1a52      	subs	r2, r2, r1
 8001426:	0025      	movs	r5, r4
 8001428:	0007      	movs	r7, r0
 800142a:	469a      	mov	sl, r3
 800142c:	40cc      	lsrs	r4, r1
 800142e:	4090      	lsls	r0, r2
 8001430:	4095      	lsls	r5, r2
 8001432:	40cf      	lsrs	r7, r1
 8001434:	44a2      	add	sl, r4
 8001436:	1e42      	subs	r2, r0, #1
 8001438:	4190      	sbcs	r0, r2
 800143a:	4653      	mov	r3, sl
 800143c:	432f      	orrs	r7, r5
 800143e:	4307      	orrs	r7, r0
 8001440:	9302      	str	r3, [sp, #8]
 8001442:	003d      	movs	r5, r7
 8001444:	4465      	add	r5, ip
 8001446:	4565      	cmp	r5, ip
 8001448:	4192      	sbcs	r2, r2
 800144a:	9b02      	ldr	r3, [sp, #8]
 800144c:	4252      	negs	r2, r2
 800144e:	464f      	mov	r7, r9
 8001450:	18d4      	adds	r4, r2, r3
 8001452:	e780      	b.n	8001356 <__aeabi_dsub+0x1d2>
 8001454:	4a23      	ldr	r2, [pc, #140]	@ (80014e4 <__aeabi_dsub+0x360>)
 8001456:	1c7d      	adds	r5, r7, #1
 8001458:	4215      	tst	r5, r2
 800145a:	d000      	beq.n	800145e <__aeabi_dsub+0x2da>
 800145c:	e0aa      	b.n	80015b4 <__aeabi_dsub+0x430>
 800145e:	4662      	mov	r2, ip
 8001460:	0025      	movs	r5, r4
 8001462:	9b02      	ldr	r3, [sp, #8]
 8001464:	4305      	orrs	r5, r0
 8001466:	431a      	orrs	r2, r3
 8001468:	2f00      	cmp	r7, #0
 800146a:	d000      	beq.n	800146e <__aeabi_dsub+0x2ea>
 800146c:	e0f5      	b.n	800165a <__aeabi_dsub+0x4d6>
 800146e:	2d00      	cmp	r5, #0
 8001470:	d100      	bne.n	8001474 <__aeabi_dsub+0x2f0>
 8001472:	e16b      	b.n	800174c <__aeabi_dsub+0x5c8>
 8001474:	2a00      	cmp	r2, #0
 8001476:	d100      	bne.n	800147a <__aeabi_dsub+0x2f6>
 8001478:	e152      	b.n	8001720 <__aeabi_dsub+0x59c>
 800147a:	4663      	mov	r3, ip
 800147c:	1ac5      	subs	r5, r0, r3
 800147e:	9b02      	ldr	r3, [sp, #8]
 8001480:	1ae2      	subs	r2, r4, r3
 8001482:	42a8      	cmp	r0, r5
 8001484:	419b      	sbcs	r3, r3
 8001486:	425b      	negs	r3, r3
 8001488:	1ad3      	subs	r3, r2, r3
 800148a:	021a      	lsls	r2, r3, #8
 800148c:	d400      	bmi.n	8001490 <__aeabi_dsub+0x30c>
 800148e:	e1d5      	b.n	800183c <__aeabi_dsub+0x6b8>
 8001490:	4663      	mov	r3, ip
 8001492:	1a1d      	subs	r5, r3, r0
 8001494:	45ac      	cmp	ip, r5
 8001496:	4192      	sbcs	r2, r2
 8001498:	2601      	movs	r6, #1
 800149a:	9b02      	ldr	r3, [sp, #8]
 800149c:	4252      	negs	r2, r2
 800149e:	1b1c      	subs	r4, r3, r4
 80014a0:	4688      	mov	r8, r1
 80014a2:	1aa4      	subs	r4, r4, r2
 80014a4:	400e      	ands	r6, r1
 80014a6:	e6f6      	b.n	8001296 <__aeabi_dsub+0x112>
 80014a8:	4297      	cmp	r7, r2
 80014aa:	d03f      	beq.n	800152c <__aeabi_dsub+0x3a8>
 80014ac:	4652      	mov	r2, sl
 80014ae:	2501      	movs	r5, #1
 80014b0:	2a38      	cmp	r2, #56	@ 0x38
 80014b2:	dd00      	ble.n	80014b6 <__aeabi_dsub+0x332>
 80014b4:	e74a      	b.n	800134c <__aeabi_dsub+0x1c8>
 80014b6:	2280      	movs	r2, #128	@ 0x80
 80014b8:	9b02      	ldr	r3, [sp, #8]
 80014ba:	0412      	lsls	r2, r2, #16
 80014bc:	4313      	orrs	r3, r2
 80014be:	9302      	str	r3, [sp, #8]
 80014c0:	e72d      	b.n	800131e <__aeabi_dsub+0x19a>
 80014c2:	003c      	movs	r4, r7
 80014c4:	2500      	movs	r5, #0
 80014c6:	2200      	movs	r2, #0
 80014c8:	e705      	b.n	80012d6 <__aeabi_dsub+0x152>
 80014ca:	2307      	movs	r3, #7
 80014cc:	402b      	ands	r3, r5
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d000      	beq.n	80014d4 <__aeabi_dsub+0x350>
 80014d2:	e6e2      	b.n	800129a <__aeabi_dsub+0x116>
 80014d4:	e06b      	b.n	80015ae <__aeabi_dsub+0x42a>
 80014d6:	46c0      	nop			@ (mov r8, r8)
 80014d8:	000007ff 	.word	0x000007ff
 80014dc:	ff7fffff 	.word	0xff7fffff
 80014e0:	fffff801 	.word	0xfffff801
 80014e4:	000007fe 	.word	0x000007fe
 80014e8:	0028      	movs	r0, r5
 80014ea:	f000 fa75 	bl	80019d8 <__clzsi2>
 80014ee:	0003      	movs	r3, r0
 80014f0:	3318      	adds	r3, #24
 80014f2:	2b1f      	cmp	r3, #31
 80014f4:	dc00      	bgt.n	80014f8 <__aeabi_dsub+0x374>
 80014f6:	e6b4      	b.n	8001262 <__aeabi_dsub+0xde>
 80014f8:	002a      	movs	r2, r5
 80014fa:	3808      	subs	r0, #8
 80014fc:	4082      	lsls	r2, r0
 80014fe:	429f      	cmp	r7, r3
 8001500:	dd00      	ble.n	8001504 <__aeabi_dsub+0x380>
 8001502:	e0b9      	b.n	8001678 <__aeabi_dsub+0x4f4>
 8001504:	1bdb      	subs	r3, r3, r7
 8001506:	1c58      	adds	r0, r3, #1
 8001508:	281f      	cmp	r0, #31
 800150a:	dc00      	bgt.n	800150e <__aeabi_dsub+0x38a>
 800150c:	e1a0      	b.n	8001850 <__aeabi_dsub+0x6cc>
 800150e:	0015      	movs	r5, r2
 8001510:	3b1f      	subs	r3, #31
 8001512:	40dd      	lsrs	r5, r3
 8001514:	2820      	cmp	r0, #32
 8001516:	d005      	beq.n	8001524 <__aeabi_dsub+0x3a0>
 8001518:	2340      	movs	r3, #64	@ 0x40
 800151a:	1a1b      	subs	r3, r3, r0
 800151c:	409a      	lsls	r2, r3
 800151e:	1e53      	subs	r3, r2, #1
 8001520:	419a      	sbcs	r2, r3
 8001522:	4315      	orrs	r5, r2
 8001524:	2307      	movs	r3, #7
 8001526:	2700      	movs	r7, #0
 8001528:	402b      	ands	r3, r5
 800152a:	e7d0      	b.n	80014ce <__aeabi_dsub+0x34a>
 800152c:	08c0      	lsrs	r0, r0, #3
 800152e:	0762      	lsls	r2, r4, #29
 8001530:	4302      	orrs	r2, r0
 8001532:	08e4      	lsrs	r4, r4, #3
 8001534:	e737      	b.n	80013a6 <__aeabi_dsub+0x222>
 8001536:	08ea      	lsrs	r2, r5, #3
 8001538:	0763      	lsls	r3, r4, #29
 800153a:	431a      	orrs	r2, r3
 800153c:	4bd3      	ldr	r3, [pc, #844]	@ (800188c <__aeabi_dsub+0x708>)
 800153e:	08e4      	lsrs	r4, r4, #3
 8001540:	429f      	cmp	r7, r3
 8001542:	d100      	bne.n	8001546 <__aeabi_dsub+0x3c2>
 8001544:	e72f      	b.n	80013a6 <__aeabi_dsub+0x222>
 8001546:	0324      	lsls	r4, r4, #12
 8001548:	0b25      	lsrs	r5, r4, #12
 800154a:	057c      	lsls	r4, r7, #21
 800154c:	0d64      	lsrs	r4, r4, #21
 800154e:	e6c2      	b.n	80012d6 <__aeabi_dsub+0x152>
 8001550:	46ca      	mov	sl, r9
 8001552:	0022      	movs	r2, r4
 8001554:	4302      	orrs	r2, r0
 8001556:	d158      	bne.n	800160a <__aeabi_dsub+0x486>
 8001558:	4663      	mov	r3, ip
 800155a:	000e      	movs	r6, r1
 800155c:	9c02      	ldr	r4, [sp, #8]
 800155e:	9303      	str	r3, [sp, #12]
 8001560:	9b03      	ldr	r3, [sp, #12]
 8001562:	4657      	mov	r7, sl
 8001564:	08da      	lsrs	r2, r3, #3
 8001566:	e7e7      	b.n	8001538 <__aeabi_dsub+0x3b4>
 8001568:	4cc9      	ldr	r4, [pc, #804]	@ (8001890 <__aeabi_dsub+0x70c>)
 800156a:	1aff      	subs	r7, r7, r3
 800156c:	4014      	ands	r4, r2
 800156e:	e692      	b.n	8001296 <__aeabi_dsub+0x112>
 8001570:	4dc8      	ldr	r5, [pc, #800]	@ (8001894 <__aeabi_dsub+0x710>)
 8001572:	1c7a      	adds	r2, r7, #1
 8001574:	422a      	tst	r2, r5
 8001576:	d000      	beq.n	800157a <__aeabi_dsub+0x3f6>
 8001578:	e084      	b.n	8001684 <__aeabi_dsub+0x500>
 800157a:	0022      	movs	r2, r4
 800157c:	4302      	orrs	r2, r0
 800157e:	2f00      	cmp	r7, #0
 8001580:	d000      	beq.n	8001584 <__aeabi_dsub+0x400>
 8001582:	e0ef      	b.n	8001764 <__aeabi_dsub+0x5e0>
 8001584:	2a00      	cmp	r2, #0
 8001586:	d100      	bne.n	800158a <__aeabi_dsub+0x406>
 8001588:	e0e5      	b.n	8001756 <__aeabi_dsub+0x5d2>
 800158a:	4662      	mov	r2, ip
 800158c:	9902      	ldr	r1, [sp, #8]
 800158e:	430a      	orrs	r2, r1
 8001590:	d100      	bne.n	8001594 <__aeabi_dsub+0x410>
 8001592:	e0c5      	b.n	8001720 <__aeabi_dsub+0x59c>
 8001594:	4663      	mov	r3, ip
 8001596:	18c5      	adds	r5, r0, r3
 8001598:	468c      	mov	ip, r1
 800159a:	4285      	cmp	r5, r0
 800159c:	4180      	sbcs	r0, r0
 800159e:	4464      	add	r4, ip
 80015a0:	4240      	negs	r0, r0
 80015a2:	1824      	adds	r4, r4, r0
 80015a4:	0223      	lsls	r3, r4, #8
 80015a6:	d502      	bpl.n	80015ae <__aeabi_dsub+0x42a>
 80015a8:	4bb9      	ldr	r3, [pc, #740]	@ (8001890 <__aeabi_dsub+0x70c>)
 80015aa:	3701      	adds	r7, #1
 80015ac:	401c      	ands	r4, r3
 80015ae:	46ba      	mov	sl, r7
 80015b0:	9503      	str	r5, [sp, #12]
 80015b2:	e7d5      	b.n	8001560 <__aeabi_dsub+0x3dc>
 80015b4:	4662      	mov	r2, ip
 80015b6:	1a85      	subs	r5, r0, r2
 80015b8:	42a8      	cmp	r0, r5
 80015ba:	4192      	sbcs	r2, r2
 80015bc:	4252      	negs	r2, r2
 80015be:	4691      	mov	r9, r2
 80015c0:	9b02      	ldr	r3, [sp, #8]
 80015c2:	1ae3      	subs	r3, r4, r3
 80015c4:	001a      	movs	r2, r3
 80015c6:	464b      	mov	r3, r9
 80015c8:	1ad2      	subs	r2, r2, r3
 80015ca:	0013      	movs	r3, r2
 80015cc:	4691      	mov	r9, r2
 80015ce:	021a      	lsls	r2, r3, #8
 80015d0:	d46c      	bmi.n	80016ac <__aeabi_dsub+0x528>
 80015d2:	464a      	mov	r2, r9
 80015d4:	464c      	mov	r4, r9
 80015d6:	432a      	orrs	r2, r5
 80015d8:	d000      	beq.n	80015dc <__aeabi_dsub+0x458>
 80015da:	e63a      	b.n	8001252 <__aeabi_dsub+0xce>
 80015dc:	2600      	movs	r6, #0
 80015de:	2400      	movs	r4, #0
 80015e0:	2500      	movs	r5, #0
 80015e2:	e678      	b.n	80012d6 <__aeabi_dsub+0x152>
 80015e4:	9902      	ldr	r1, [sp, #8]
 80015e6:	4653      	mov	r3, sl
 80015e8:	000d      	movs	r5, r1
 80015ea:	3a20      	subs	r2, #32
 80015ec:	40d5      	lsrs	r5, r2
 80015ee:	2b20      	cmp	r3, #32
 80015f0:	d006      	beq.n	8001600 <__aeabi_dsub+0x47c>
 80015f2:	2240      	movs	r2, #64	@ 0x40
 80015f4:	1ad2      	subs	r2, r2, r3
 80015f6:	000b      	movs	r3, r1
 80015f8:	4093      	lsls	r3, r2
 80015fa:	4662      	mov	r2, ip
 80015fc:	431a      	orrs	r2, r3
 80015fe:	4693      	mov	fp, r2
 8001600:	465b      	mov	r3, fp
 8001602:	1e5a      	subs	r2, r3, #1
 8001604:	4193      	sbcs	r3, r2
 8001606:	431d      	orrs	r5, r3
 8001608:	e619      	b.n	800123e <__aeabi_dsub+0xba>
 800160a:	4653      	mov	r3, sl
 800160c:	1e5a      	subs	r2, r3, #1
 800160e:	2b01      	cmp	r3, #1
 8001610:	d100      	bne.n	8001614 <__aeabi_dsub+0x490>
 8001612:	e0c6      	b.n	80017a2 <__aeabi_dsub+0x61e>
 8001614:	4e9d      	ldr	r6, [pc, #628]	@ (800188c <__aeabi_dsub+0x708>)
 8001616:	45b2      	cmp	sl, r6
 8001618:	d100      	bne.n	800161c <__aeabi_dsub+0x498>
 800161a:	e6bd      	b.n	8001398 <__aeabi_dsub+0x214>
 800161c:	4688      	mov	r8, r1
 800161e:	000e      	movs	r6, r1
 8001620:	2501      	movs	r5, #1
 8001622:	2a38      	cmp	r2, #56	@ 0x38
 8001624:	dc10      	bgt.n	8001648 <__aeabi_dsub+0x4c4>
 8001626:	2a1f      	cmp	r2, #31
 8001628:	dc7f      	bgt.n	800172a <__aeabi_dsub+0x5a6>
 800162a:	2120      	movs	r1, #32
 800162c:	0025      	movs	r5, r4
 800162e:	1a89      	subs	r1, r1, r2
 8001630:	0007      	movs	r7, r0
 8001632:	4088      	lsls	r0, r1
 8001634:	408d      	lsls	r5, r1
 8001636:	40d7      	lsrs	r7, r2
 8001638:	40d4      	lsrs	r4, r2
 800163a:	1e41      	subs	r1, r0, #1
 800163c:	4188      	sbcs	r0, r1
 800163e:	9b02      	ldr	r3, [sp, #8]
 8001640:	433d      	orrs	r5, r7
 8001642:	1b1b      	subs	r3, r3, r4
 8001644:	4305      	orrs	r5, r0
 8001646:	9302      	str	r3, [sp, #8]
 8001648:	4662      	mov	r2, ip
 800164a:	1b55      	subs	r5, r2, r5
 800164c:	45ac      	cmp	ip, r5
 800164e:	4192      	sbcs	r2, r2
 8001650:	9b02      	ldr	r3, [sp, #8]
 8001652:	4252      	negs	r2, r2
 8001654:	464f      	mov	r7, r9
 8001656:	1a9c      	subs	r4, r3, r2
 8001658:	e5f6      	b.n	8001248 <__aeabi_dsub+0xc4>
 800165a:	2d00      	cmp	r5, #0
 800165c:	d000      	beq.n	8001660 <__aeabi_dsub+0x4dc>
 800165e:	e0b7      	b.n	80017d0 <__aeabi_dsub+0x64c>
 8001660:	2a00      	cmp	r2, #0
 8001662:	d100      	bne.n	8001666 <__aeabi_dsub+0x4e2>
 8001664:	e0f0      	b.n	8001848 <__aeabi_dsub+0x6c4>
 8001666:	2601      	movs	r6, #1
 8001668:	400e      	ands	r6, r1
 800166a:	4663      	mov	r3, ip
 800166c:	9802      	ldr	r0, [sp, #8]
 800166e:	08d9      	lsrs	r1, r3, #3
 8001670:	0742      	lsls	r2, r0, #29
 8001672:	430a      	orrs	r2, r1
 8001674:	08c4      	lsrs	r4, r0, #3
 8001676:	e696      	b.n	80013a6 <__aeabi_dsub+0x222>
 8001678:	4c85      	ldr	r4, [pc, #532]	@ (8001890 <__aeabi_dsub+0x70c>)
 800167a:	1aff      	subs	r7, r7, r3
 800167c:	4014      	ands	r4, r2
 800167e:	0762      	lsls	r2, r4, #29
 8001680:	08e4      	lsrs	r4, r4, #3
 8001682:	e760      	b.n	8001546 <__aeabi_dsub+0x3c2>
 8001684:	4981      	ldr	r1, [pc, #516]	@ (800188c <__aeabi_dsub+0x708>)
 8001686:	428a      	cmp	r2, r1
 8001688:	d100      	bne.n	800168c <__aeabi_dsub+0x508>
 800168a:	e0c9      	b.n	8001820 <__aeabi_dsub+0x69c>
 800168c:	4663      	mov	r3, ip
 800168e:	18c1      	adds	r1, r0, r3
 8001690:	4281      	cmp	r1, r0
 8001692:	4180      	sbcs	r0, r0
 8001694:	9b02      	ldr	r3, [sp, #8]
 8001696:	4240      	negs	r0, r0
 8001698:	18e3      	adds	r3, r4, r3
 800169a:	181b      	adds	r3, r3, r0
 800169c:	07dd      	lsls	r5, r3, #31
 800169e:	085c      	lsrs	r4, r3, #1
 80016a0:	2307      	movs	r3, #7
 80016a2:	0849      	lsrs	r1, r1, #1
 80016a4:	430d      	orrs	r5, r1
 80016a6:	0017      	movs	r7, r2
 80016a8:	402b      	ands	r3, r5
 80016aa:	e710      	b.n	80014ce <__aeabi_dsub+0x34a>
 80016ac:	4663      	mov	r3, ip
 80016ae:	1a1d      	subs	r5, r3, r0
 80016b0:	45ac      	cmp	ip, r5
 80016b2:	4192      	sbcs	r2, r2
 80016b4:	2601      	movs	r6, #1
 80016b6:	9b02      	ldr	r3, [sp, #8]
 80016b8:	4252      	negs	r2, r2
 80016ba:	1b1c      	subs	r4, r3, r4
 80016bc:	4688      	mov	r8, r1
 80016be:	1aa4      	subs	r4, r4, r2
 80016c0:	400e      	ands	r6, r1
 80016c2:	e5c6      	b.n	8001252 <__aeabi_dsub+0xce>
 80016c4:	4663      	mov	r3, ip
 80016c6:	18c5      	adds	r5, r0, r3
 80016c8:	9b02      	ldr	r3, [sp, #8]
 80016ca:	4285      	cmp	r5, r0
 80016cc:	4180      	sbcs	r0, r0
 80016ce:	469c      	mov	ip, r3
 80016d0:	4240      	negs	r0, r0
 80016d2:	4464      	add	r4, ip
 80016d4:	1824      	adds	r4, r4, r0
 80016d6:	2701      	movs	r7, #1
 80016d8:	0223      	lsls	r3, r4, #8
 80016da:	d400      	bmi.n	80016de <__aeabi_dsub+0x55a>
 80016dc:	e6f5      	b.n	80014ca <__aeabi_dsub+0x346>
 80016de:	2702      	movs	r7, #2
 80016e0:	e641      	b.n	8001366 <__aeabi_dsub+0x1e2>
 80016e2:	4663      	mov	r3, ip
 80016e4:	1ac5      	subs	r5, r0, r3
 80016e6:	42a8      	cmp	r0, r5
 80016e8:	4180      	sbcs	r0, r0
 80016ea:	9b02      	ldr	r3, [sp, #8]
 80016ec:	4240      	negs	r0, r0
 80016ee:	1ae4      	subs	r4, r4, r3
 80016f0:	2701      	movs	r7, #1
 80016f2:	1a24      	subs	r4, r4, r0
 80016f4:	e5a8      	b.n	8001248 <__aeabi_dsub+0xc4>
 80016f6:	9d02      	ldr	r5, [sp, #8]
 80016f8:	4652      	mov	r2, sl
 80016fa:	002b      	movs	r3, r5
 80016fc:	3a20      	subs	r2, #32
 80016fe:	40d3      	lsrs	r3, r2
 8001700:	0019      	movs	r1, r3
 8001702:	4653      	mov	r3, sl
 8001704:	2b20      	cmp	r3, #32
 8001706:	d006      	beq.n	8001716 <__aeabi_dsub+0x592>
 8001708:	2240      	movs	r2, #64	@ 0x40
 800170a:	1ad2      	subs	r2, r2, r3
 800170c:	002b      	movs	r3, r5
 800170e:	4093      	lsls	r3, r2
 8001710:	4662      	mov	r2, ip
 8001712:	431a      	orrs	r2, r3
 8001714:	4693      	mov	fp, r2
 8001716:	465d      	mov	r5, fp
 8001718:	1e6b      	subs	r3, r5, #1
 800171a:	419d      	sbcs	r5, r3
 800171c:	430d      	orrs	r5, r1
 800171e:	e615      	b.n	800134c <__aeabi_dsub+0x1c8>
 8001720:	0762      	lsls	r2, r4, #29
 8001722:	08c0      	lsrs	r0, r0, #3
 8001724:	4302      	orrs	r2, r0
 8001726:	08e4      	lsrs	r4, r4, #3
 8001728:	e70d      	b.n	8001546 <__aeabi_dsub+0x3c2>
 800172a:	0011      	movs	r1, r2
 800172c:	0027      	movs	r7, r4
 800172e:	3920      	subs	r1, #32
 8001730:	40cf      	lsrs	r7, r1
 8001732:	2a20      	cmp	r2, #32
 8001734:	d005      	beq.n	8001742 <__aeabi_dsub+0x5be>
 8001736:	2140      	movs	r1, #64	@ 0x40
 8001738:	1a8a      	subs	r2, r1, r2
 800173a:	4094      	lsls	r4, r2
 800173c:	0025      	movs	r5, r4
 800173e:	4305      	orrs	r5, r0
 8001740:	9503      	str	r5, [sp, #12]
 8001742:	9d03      	ldr	r5, [sp, #12]
 8001744:	1e6a      	subs	r2, r5, #1
 8001746:	4195      	sbcs	r5, r2
 8001748:	433d      	orrs	r5, r7
 800174a:	e77d      	b.n	8001648 <__aeabi_dsub+0x4c4>
 800174c:	2a00      	cmp	r2, #0
 800174e:	d100      	bne.n	8001752 <__aeabi_dsub+0x5ce>
 8001750:	e744      	b.n	80015dc <__aeabi_dsub+0x458>
 8001752:	2601      	movs	r6, #1
 8001754:	400e      	ands	r6, r1
 8001756:	4663      	mov	r3, ip
 8001758:	08d9      	lsrs	r1, r3, #3
 800175a:	9b02      	ldr	r3, [sp, #8]
 800175c:	075a      	lsls	r2, r3, #29
 800175e:	430a      	orrs	r2, r1
 8001760:	08dc      	lsrs	r4, r3, #3
 8001762:	e6f0      	b.n	8001546 <__aeabi_dsub+0x3c2>
 8001764:	2a00      	cmp	r2, #0
 8001766:	d028      	beq.n	80017ba <__aeabi_dsub+0x636>
 8001768:	4662      	mov	r2, ip
 800176a:	9f02      	ldr	r7, [sp, #8]
 800176c:	08c0      	lsrs	r0, r0, #3
 800176e:	433a      	orrs	r2, r7
 8001770:	d100      	bne.n	8001774 <__aeabi_dsub+0x5f0>
 8001772:	e6dc      	b.n	800152e <__aeabi_dsub+0x3aa>
 8001774:	0762      	lsls	r2, r4, #29
 8001776:	4310      	orrs	r0, r2
 8001778:	2280      	movs	r2, #128	@ 0x80
 800177a:	08e4      	lsrs	r4, r4, #3
 800177c:	0312      	lsls	r2, r2, #12
 800177e:	4214      	tst	r4, r2
 8001780:	d009      	beq.n	8001796 <__aeabi_dsub+0x612>
 8001782:	08fd      	lsrs	r5, r7, #3
 8001784:	4215      	tst	r5, r2
 8001786:	d106      	bne.n	8001796 <__aeabi_dsub+0x612>
 8001788:	4663      	mov	r3, ip
 800178a:	2601      	movs	r6, #1
 800178c:	002c      	movs	r4, r5
 800178e:	08d8      	lsrs	r0, r3, #3
 8001790:	077b      	lsls	r3, r7, #29
 8001792:	4318      	orrs	r0, r3
 8001794:	400e      	ands	r6, r1
 8001796:	0f42      	lsrs	r2, r0, #29
 8001798:	00c0      	lsls	r0, r0, #3
 800179a:	08c0      	lsrs	r0, r0, #3
 800179c:	0752      	lsls	r2, r2, #29
 800179e:	4302      	orrs	r2, r0
 80017a0:	e601      	b.n	80013a6 <__aeabi_dsub+0x222>
 80017a2:	4663      	mov	r3, ip
 80017a4:	1a1d      	subs	r5, r3, r0
 80017a6:	45ac      	cmp	ip, r5
 80017a8:	4192      	sbcs	r2, r2
 80017aa:	9b02      	ldr	r3, [sp, #8]
 80017ac:	4252      	negs	r2, r2
 80017ae:	1b1c      	subs	r4, r3, r4
 80017b0:	000e      	movs	r6, r1
 80017b2:	4688      	mov	r8, r1
 80017b4:	2701      	movs	r7, #1
 80017b6:	1aa4      	subs	r4, r4, r2
 80017b8:	e546      	b.n	8001248 <__aeabi_dsub+0xc4>
 80017ba:	4663      	mov	r3, ip
 80017bc:	08d9      	lsrs	r1, r3, #3
 80017be:	9b02      	ldr	r3, [sp, #8]
 80017c0:	075a      	lsls	r2, r3, #29
 80017c2:	430a      	orrs	r2, r1
 80017c4:	08dc      	lsrs	r4, r3, #3
 80017c6:	e5ee      	b.n	80013a6 <__aeabi_dsub+0x222>
 80017c8:	4663      	mov	r3, ip
 80017ca:	9c02      	ldr	r4, [sp, #8]
 80017cc:	9303      	str	r3, [sp, #12]
 80017ce:	e6c7      	b.n	8001560 <__aeabi_dsub+0x3dc>
 80017d0:	08c0      	lsrs	r0, r0, #3
 80017d2:	2a00      	cmp	r2, #0
 80017d4:	d100      	bne.n	80017d8 <__aeabi_dsub+0x654>
 80017d6:	e6aa      	b.n	800152e <__aeabi_dsub+0x3aa>
 80017d8:	0762      	lsls	r2, r4, #29
 80017da:	4310      	orrs	r0, r2
 80017dc:	2280      	movs	r2, #128	@ 0x80
 80017de:	08e4      	lsrs	r4, r4, #3
 80017e0:	0312      	lsls	r2, r2, #12
 80017e2:	4214      	tst	r4, r2
 80017e4:	d0d7      	beq.n	8001796 <__aeabi_dsub+0x612>
 80017e6:	9f02      	ldr	r7, [sp, #8]
 80017e8:	08fd      	lsrs	r5, r7, #3
 80017ea:	4215      	tst	r5, r2
 80017ec:	d1d3      	bne.n	8001796 <__aeabi_dsub+0x612>
 80017ee:	4663      	mov	r3, ip
 80017f0:	2601      	movs	r6, #1
 80017f2:	08d8      	lsrs	r0, r3, #3
 80017f4:	077b      	lsls	r3, r7, #29
 80017f6:	002c      	movs	r4, r5
 80017f8:	4318      	orrs	r0, r3
 80017fa:	400e      	ands	r6, r1
 80017fc:	e7cb      	b.n	8001796 <__aeabi_dsub+0x612>
 80017fe:	000a      	movs	r2, r1
 8001800:	0027      	movs	r7, r4
 8001802:	3a20      	subs	r2, #32
 8001804:	40d7      	lsrs	r7, r2
 8001806:	2920      	cmp	r1, #32
 8001808:	d005      	beq.n	8001816 <__aeabi_dsub+0x692>
 800180a:	2240      	movs	r2, #64	@ 0x40
 800180c:	1a52      	subs	r2, r2, r1
 800180e:	4094      	lsls	r4, r2
 8001810:	0025      	movs	r5, r4
 8001812:	4305      	orrs	r5, r0
 8001814:	9503      	str	r5, [sp, #12]
 8001816:	9d03      	ldr	r5, [sp, #12]
 8001818:	1e6a      	subs	r2, r5, #1
 800181a:	4195      	sbcs	r5, r2
 800181c:	432f      	orrs	r7, r5
 800181e:	e610      	b.n	8001442 <__aeabi_dsub+0x2be>
 8001820:	0014      	movs	r4, r2
 8001822:	2500      	movs	r5, #0
 8001824:	2200      	movs	r2, #0
 8001826:	e556      	b.n	80012d6 <__aeabi_dsub+0x152>
 8001828:	9b02      	ldr	r3, [sp, #8]
 800182a:	4460      	add	r0, ip
 800182c:	4699      	mov	r9, r3
 800182e:	4560      	cmp	r0, ip
 8001830:	4192      	sbcs	r2, r2
 8001832:	444c      	add	r4, r9
 8001834:	4252      	negs	r2, r2
 8001836:	0005      	movs	r5, r0
 8001838:	18a4      	adds	r4, r4, r2
 800183a:	e74c      	b.n	80016d6 <__aeabi_dsub+0x552>
 800183c:	001a      	movs	r2, r3
 800183e:	001c      	movs	r4, r3
 8001840:	432a      	orrs	r2, r5
 8001842:	d000      	beq.n	8001846 <__aeabi_dsub+0x6c2>
 8001844:	e6b3      	b.n	80015ae <__aeabi_dsub+0x42a>
 8001846:	e6c9      	b.n	80015dc <__aeabi_dsub+0x458>
 8001848:	2480      	movs	r4, #128	@ 0x80
 800184a:	2600      	movs	r6, #0
 800184c:	0324      	lsls	r4, r4, #12
 800184e:	e5ae      	b.n	80013ae <__aeabi_dsub+0x22a>
 8001850:	2120      	movs	r1, #32
 8001852:	2500      	movs	r5, #0
 8001854:	1a09      	subs	r1, r1, r0
 8001856:	e517      	b.n	8001288 <__aeabi_dsub+0x104>
 8001858:	2200      	movs	r2, #0
 800185a:	2500      	movs	r5, #0
 800185c:	4c0b      	ldr	r4, [pc, #44]	@ (800188c <__aeabi_dsub+0x708>)
 800185e:	e53a      	b.n	80012d6 <__aeabi_dsub+0x152>
 8001860:	2d00      	cmp	r5, #0
 8001862:	d100      	bne.n	8001866 <__aeabi_dsub+0x6e2>
 8001864:	e5f6      	b.n	8001454 <__aeabi_dsub+0x2d0>
 8001866:	464b      	mov	r3, r9
 8001868:	1bda      	subs	r2, r3, r7
 800186a:	4692      	mov	sl, r2
 800186c:	2f00      	cmp	r7, #0
 800186e:	d100      	bne.n	8001872 <__aeabi_dsub+0x6ee>
 8001870:	e66f      	b.n	8001552 <__aeabi_dsub+0x3ce>
 8001872:	2a38      	cmp	r2, #56	@ 0x38
 8001874:	dc05      	bgt.n	8001882 <__aeabi_dsub+0x6fe>
 8001876:	2680      	movs	r6, #128	@ 0x80
 8001878:	0436      	lsls	r6, r6, #16
 800187a:	4334      	orrs	r4, r6
 800187c:	4688      	mov	r8, r1
 800187e:	000e      	movs	r6, r1
 8001880:	e6d1      	b.n	8001626 <__aeabi_dsub+0x4a2>
 8001882:	4688      	mov	r8, r1
 8001884:	000e      	movs	r6, r1
 8001886:	2501      	movs	r5, #1
 8001888:	e6de      	b.n	8001648 <__aeabi_dsub+0x4c4>
 800188a:	46c0      	nop			@ (mov r8, r8)
 800188c:	000007ff 	.word	0x000007ff
 8001890:	ff7fffff 	.word	0xff7fffff
 8001894:	000007fe 	.word	0x000007fe
 8001898:	2d00      	cmp	r5, #0
 800189a:	d100      	bne.n	800189e <__aeabi_dsub+0x71a>
 800189c:	e668      	b.n	8001570 <__aeabi_dsub+0x3ec>
 800189e:	464b      	mov	r3, r9
 80018a0:	1bd9      	subs	r1, r3, r7
 80018a2:	2f00      	cmp	r7, #0
 80018a4:	d101      	bne.n	80018aa <__aeabi_dsub+0x726>
 80018a6:	468a      	mov	sl, r1
 80018a8:	e5a7      	b.n	80013fa <__aeabi_dsub+0x276>
 80018aa:	2701      	movs	r7, #1
 80018ac:	2938      	cmp	r1, #56	@ 0x38
 80018ae:	dd00      	ble.n	80018b2 <__aeabi_dsub+0x72e>
 80018b0:	e5c7      	b.n	8001442 <__aeabi_dsub+0x2be>
 80018b2:	2280      	movs	r2, #128	@ 0x80
 80018b4:	0412      	lsls	r2, r2, #16
 80018b6:	4314      	orrs	r4, r2
 80018b8:	e5af      	b.n	800141a <__aeabi_dsub+0x296>
 80018ba:	46c0      	nop			@ (mov r8, r8)

080018bc <__aeabi_d2iz>:
 80018bc:	000b      	movs	r3, r1
 80018be:	0002      	movs	r2, r0
 80018c0:	b570      	push	{r4, r5, r6, lr}
 80018c2:	4d16      	ldr	r5, [pc, #88]	@ (800191c <__aeabi_d2iz+0x60>)
 80018c4:	030c      	lsls	r4, r1, #12
 80018c6:	b082      	sub	sp, #8
 80018c8:	0049      	lsls	r1, r1, #1
 80018ca:	2000      	movs	r0, #0
 80018cc:	9200      	str	r2, [sp, #0]
 80018ce:	9301      	str	r3, [sp, #4]
 80018d0:	0b24      	lsrs	r4, r4, #12
 80018d2:	0d49      	lsrs	r1, r1, #21
 80018d4:	0fde      	lsrs	r6, r3, #31
 80018d6:	42a9      	cmp	r1, r5
 80018d8:	dd04      	ble.n	80018e4 <__aeabi_d2iz+0x28>
 80018da:	4811      	ldr	r0, [pc, #68]	@ (8001920 <__aeabi_d2iz+0x64>)
 80018dc:	4281      	cmp	r1, r0
 80018de:	dd03      	ble.n	80018e8 <__aeabi_d2iz+0x2c>
 80018e0:	4b10      	ldr	r3, [pc, #64]	@ (8001924 <__aeabi_d2iz+0x68>)
 80018e2:	18f0      	adds	r0, r6, r3
 80018e4:	b002      	add	sp, #8
 80018e6:	bd70      	pop	{r4, r5, r6, pc}
 80018e8:	2080      	movs	r0, #128	@ 0x80
 80018ea:	0340      	lsls	r0, r0, #13
 80018ec:	4320      	orrs	r0, r4
 80018ee:	4c0e      	ldr	r4, [pc, #56]	@ (8001928 <__aeabi_d2iz+0x6c>)
 80018f0:	1a64      	subs	r4, r4, r1
 80018f2:	2c1f      	cmp	r4, #31
 80018f4:	dd08      	ble.n	8001908 <__aeabi_d2iz+0x4c>
 80018f6:	4b0d      	ldr	r3, [pc, #52]	@ (800192c <__aeabi_d2iz+0x70>)
 80018f8:	1a5b      	subs	r3, r3, r1
 80018fa:	40d8      	lsrs	r0, r3
 80018fc:	0003      	movs	r3, r0
 80018fe:	4258      	negs	r0, r3
 8001900:	2e00      	cmp	r6, #0
 8001902:	d1ef      	bne.n	80018e4 <__aeabi_d2iz+0x28>
 8001904:	0018      	movs	r0, r3
 8001906:	e7ed      	b.n	80018e4 <__aeabi_d2iz+0x28>
 8001908:	4b09      	ldr	r3, [pc, #36]	@ (8001930 <__aeabi_d2iz+0x74>)
 800190a:	9a00      	ldr	r2, [sp, #0]
 800190c:	469c      	mov	ip, r3
 800190e:	0003      	movs	r3, r0
 8001910:	4461      	add	r1, ip
 8001912:	408b      	lsls	r3, r1
 8001914:	40e2      	lsrs	r2, r4
 8001916:	4313      	orrs	r3, r2
 8001918:	e7f1      	b.n	80018fe <__aeabi_d2iz+0x42>
 800191a:	46c0      	nop			@ (mov r8, r8)
 800191c:	000003fe 	.word	0x000003fe
 8001920:	0000041d 	.word	0x0000041d
 8001924:	7fffffff 	.word	0x7fffffff
 8001928:	00000433 	.word	0x00000433
 800192c:	00000413 	.word	0x00000413
 8001930:	fffffbed 	.word	0xfffffbed

08001934 <__aeabi_i2d>:
 8001934:	b570      	push	{r4, r5, r6, lr}
 8001936:	2800      	cmp	r0, #0
 8001938:	d016      	beq.n	8001968 <__aeabi_i2d+0x34>
 800193a:	17c3      	asrs	r3, r0, #31
 800193c:	18c5      	adds	r5, r0, r3
 800193e:	405d      	eors	r5, r3
 8001940:	0fc4      	lsrs	r4, r0, #31
 8001942:	0028      	movs	r0, r5
 8001944:	f000 f848 	bl	80019d8 <__clzsi2>
 8001948:	4b10      	ldr	r3, [pc, #64]	@ (800198c <__aeabi_i2d+0x58>)
 800194a:	1a1b      	subs	r3, r3, r0
 800194c:	055b      	lsls	r3, r3, #21
 800194e:	0d5b      	lsrs	r3, r3, #21
 8001950:	280a      	cmp	r0, #10
 8001952:	dc14      	bgt.n	800197e <__aeabi_i2d+0x4a>
 8001954:	0002      	movs	r2, r0
 8001956:	002e      	movs	r6, r5
 8001958:	3215      	adds	r2, #21
 800195a:	4096      	lsls	r6, r2
 800195c:	220b      	movs	r2, #11
 800195e:	1a12      	subs	r2, r2, r0
 8001960:	40d5      	lsrs	r5, r2
 8001962:	032d      	lsls	r5, r5, #12
 8001964:	0b2d      	lsrs	r5, r5, #12
 8001966:	e003      	b.n	8001970 <__aeabi_i2d+0x3c>
 8001968:	2400      	movs	r4, #0
 800196a:	2300      	movs	r3, #0
 800196c:	2500      	movs	r5, #0
 800196e:	2600      	movs	r6, #0
 8001970:	051b      	lsls	r3, r3, #20
 8001972:	432b      	orrs	r3, r5
 8001974:	07e4      	lsls	r4, r4, #31
 8001976:	4323      	orrs	r3, r4
 8001978:	0030      	movs	r0, r6
 800197a:	0019      	movs	r1, r3
 800197c:	bd70      	pop	{r4, r5, r6, pc}
 800197e:	380b      	subs	r0, #11
 8001980:	4085      	lsls	r5, r0
 8001982:	032d      	lsls	r5, r5, #12
 8001984:	2600      	movs	r6, #0
 8001986:	0b2d      	lsrs	r5, r5, #12
 8001988:	e7f2      	b.n	8001970 <__aeabi_i2d+0x3c>
 800198a:	46c0      	nop			@ (mov r8, r8)
 800198c:	0000041e 	.word	0x0000041e

08001990 <__aeabi_ui2d>:
 8001990:	b510      	push	{r4, lr}
 8001992:	1e04      	subs	r4, r0, #0
 8001994:	d010      	beq.n	80019b8 <__aeabi_ui2d+0x28>
 8001996:	f000 f81f 	bl	80019d8 <__clzsi2>
 800199a:	4b0e      	ldr	r3, [pc, #56]	@ (80019d4 <__aeabi_ui2d+0x44>)
 800199c:	1a1b      	subs	r3, r3, r0
 800199e:	055b      	lsls	r3, r3, #21
 80019a0:	0d5b      	lsrs	r3, r3, #21
 80019a2:	280a      	cmp	r0, #10
 80019a4:	dc0f      	bgt.n	80019c6 <__aeabi_ui2d+0x36>
 80019a6:	220b      	movs	r2, #11
 80019a8:	0021      	movs	r1, r4
 80019aa:	1a12      	subs	r2, r2, r0
 80019ac:	40d1      	lsrs	r1, r2
 80019ae:	3015      	adds	r0, #21
 80019b0:	030a      	lsls	r2, r1, #12
 80019b2:	4084      	lsls	r4, r0
 80019b4:	0b12      	lsrs	r2, r2, #12
 80019b6:	e001      	b.n	80019bc <__aeabi_ui2d+0x2c>
 80019b8:	2300      	movs	r3, #0
 80019ba:	2200      	movs	r2, #0
 80019bc:	051b      	lsls	r3, r3, #20
 80019be:	4313      	orrs	r3, r2
 80019c0:	0020      	movs	r0, r4
 80019c2:	0019      	movs	r1, r3
 80019c4:	bd10      	pop	{r4, pc}
 80019c6:	0022      	movs	r2, r4
 80019c8:	380b      	subs	r0, #11
 80019ca:	4082      	lsls	r2, r0
 80019cc:	0312      	lsls	r2, r2, #12
 80019ce:	2400      	movs	r4, #0
 80019d0:	0b12      	lsrs	r2, r2, #12
 80019d2:	e7f3      	b.n	80019bc <__aeabi_ui2d+0x2c>
 80019d4:	0000041e 	.word	0x0000041e

080019d8 <__clzsi2>:
 80019d8:	211c      	movs	r1, #28
 80019da:	2301      	movs	r3, #1
 80019dc:	041b      	lsls	r3, r3, #16
 80019de:	4298      	cmp	r0, r3
 80019e0:	d301      	bcc.n	80019e6 <__clzsi2+0xe>
 80019e2:	0c00      	lsrs	r0, r0, #16
 80019e4:	3910      	subs	r1, #16
 80019e6:	0a1b      	lsrs	r3, r3, #8
 80019e8:	4298      	cmp	r0, r3
 80019ea:	d301      	bcc.n	80019f0 <__clzsi2+0x18>
 80019ec:	0a00      	lsrs	r0, r0, #8
 80019ee:	3908      	subs	r1, #8
 80019f0:	091b      	lsrs	r3, r3, #4
 80019f2:	4298      	cmp	r0, r3
 80019f4:	d301      	bcc.n	80019fa <__clzsi2+0x22>
 80019f6:	0900      	lsrs	r0, r0, #4
 80019f8:	3904      	subs	r1, #4
 80019fa:	a202      	add	r2, pc, #8	@ (adr r2, 8001a04 <__clzsi2+0x2c>)
 80019fc:	5c10      	ldrb	r0, [r2, r0]
 80019fe:	1840      	adds	r0, r0, r1
 8001a00:	4770      	bx	lr
 8001a02:	46c0      	nop			@ (mov r8, r8)
 8001a04:	02020304 	.word	0x02020304
 8001a08:	01010101 	.word	0x01010101
	...

08001a14 <CMSIS_FullInit>:
void CMSIS_FullInit(void)
{
	// *** Налаштування кешу, передвибірки і попереднього читання *** //

	// Вимкнути буфер кешу, якщо це налаштовано
	CLEAR_BIT(FLASH->ACR, FLASH_ACR_DISAB_BUF);
 8001a14:	2120      	movs	r1, #32
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001a16:	20c0      	movs	r0, #192	@ 0xc0
 8001a18:	4b12      	ldr	r3, [pc, #72]	@ (8001a64 <CMSIS_FullInit+0x50>)
 8001a1a:	0600      	lsls	r0, r0, #24
 8001a1c:	681a      	ldr	r2, [r3, #0]
 8001a1e:	438a      	bics	r2, r1
 8001a20:	601a      	str	r2, [r3, #0]
	// Включити попереднє читання, якщо це налаштовано
	SET_BIT(FLASH->ACR, FLASH_ACR_PRE_READ);
 8001a22:	681a      	ldr	r2, [r3, #0]
 8001a24:	3120      	adds	r1, #32
 8001a26:	430a      	orrs	r2, r1
 8001a28:	601a      	str	r2, [r3, #0]
	// Включити буфер передвибірки, якщо це налаштовано
	SET_BIT(FLASH->ACR, FLASH_ACR_PRFTEN);
 8001a2a:	681a      	ldr	r2, [r3, #0]
 8001a2c:	393e      	subs	r1, #62	@ 0x3e
 8001a2e:	430a      	orrs	r2, r1
 8001a30:	601a      	str	r2, [r3, #0]
	SET_BIT(FLASH->ACR, FLASH_ACR_LATENCY);
 8001a32:	681a      	ldr	r2, [r3, #0]
 8001a34:	3901      	subs	r1, #1
 8001a36:	430a      	orrs	r2, r1
 8001a38:	601a      	str	r2, [r3, #0]
	CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_ENABLE_Msk);				 /* Disenable SysTick Timer */
 8001a3a:	4b0b      	ldr	r3, [pc, #44]	@ (8001a68 <CMSIS_FullInit+0x54>)
 8001a3c:	681a      	ldr	r2, [r3, #0]
 8001a3e:	438a      	bics	r2, r1
 8001a40:	601a      	str	r2, [r3, #0]
	SysTick->LOAD = (uint32_t)(ticks - 1UL);						 /* set reload register */
 8001a42:	4a0a      	ldr	r2, [pc, #40]	@ (8001a6c <CMSIS_FullInit+0x58>)
 8001a44:	490a      	ldr	r1, [pc, #40]	@ (8001a70 <CMSIS_FullInit+0x5c>)
 8001a46:	605a      	str	r2, [r3, #4]
 8001a48:	6a0a      	ldr	r2, [r1, #32]
 8001a4a:	0212      	lsls	r2, r2, #8
 8001a4c:	0a12      	lsrs	r2, r2, #8
 8001a4e:	4302      	orrs	r2, r0
 8001a50:	620a      	str	r2, [r1, #32]
	SysTick->VAL = 0UL;												 /* Load the SysTick Counter Value */
 8001a52:	2200      	movs	r2, #0
 8001a54:	609a      	str	r2, [r3, #8]
	SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
 8001a56:	3207      	adds	r2, #7
 8001a58:	601a      	str	r2, [r3, #0]
 8001a5a:	6a0b      	ldr	r3, [r1, #32]
 8001a5c:	021b      	lsls	r3, r3, #8
 8001a5e:	0a1b      	lsrs	r3, r3, #8
 8001a60:	620b      	str	r3, [r1, #32]
	else
	{
		while (1)
			; // Помилка пріоритету
	}
}
 8001a62:	4770      	bx	lr
 8001a64:	40022000 	.word	0x40022000
 8001a68:	e000e010 	.word	0xe000e010
 8001a6c:	00007cff 	.word	0x00007cff
 8001a70:	e000ed00 	.word	0xe000ed00

08001a74 <SystemClock_Config>:

void SystemClock_Config(void)
{
	// Налаштування PWR CR для регулювання напруги
	MODIFY_REG(PWR->CR, PWR_CR_VOS_Msk, 0b01 << PWR_CR_VOS_Pos);
 8001a74:	4935      	ldr	r1, [pc, #212]	@ (8001b4c <SystemClock_Config+0xd8>)
 8001a76:	4b36      	ldr	r3, [pc, #216]	@ (8001b50 <SystemClock_Config+0xdc>)
 8001a78:	680a      	ldr	r2, [r1, #0]
 8001a7a:	401a      	ands	r2, r3
 8001a7c:	2380      	movs	r3, #128	@ 0x80
 8001a7e:	011b      	lsls	r3, r3, #4
 8001a80:	4313      	orrs	r3, r2
 8001a82:	600b      	str	r3, [r1, #0]

	// Вимкнення HSI16DIV
	CLEAR_BIT(RCC->CR, RCC_CR_HSIDIVEN);
 8001a84:	2108      	movs	r1, #8
 8001a86:	4b33      	ldr	r3, [pc, #204]	@ (8001b54 <SystemClock_Config+0xe0>)
 8001a88:	681a      	ldr	r2, [r3, #0]
 8001a8a:	438a      	bics	r2, r1
 8001a8c:	601a      	str	r2, [r3, #0]

	// Вимкнення MSI
	CLEAR_BIT(RCC->CR, RCC_CR_MSION);
 8001a8e:	681a      	ldr	r2, [r3, #0]
 8001a90:	4931      	ldr	r1, [pc, #196]	@ (8001b58 <SystemClock_Config+0xe4>)
 8001a92:	400a      	ands	r2, r1
 8001a94:	601a      	str	r2, [r3, #0]

	// Якщо джерело системної частоти не HSI16
	if ((RCC->CFGR & RCC_CFGR_SWS_Msk) != RCC_CFGR_SWS_HSI)
 8001a96:	220c      	movs	r2, #12
 8001a98:	68d9      	ldr	r1, [r3, #12]
 8001a9a:	400a      	ands	r2, r1
 8001a9c:	2a04      	cmp	r2, #4
 8001a9e:	d013      	beq.n	8001ac8 <SystemClock_Config+0x54>
	{
		// Увімкнення HSI16
		SET_BIT(RCC->CR, RCC_CR_HSION);
 8001aa0:	2101      	movs	r1, #1
 8001aa2:	681a      	ldr	r2, [r3, #0]
 8001aa4:	430a      	orrs	r2, r1
 8001aa6:	601a      	str	r2, [r3, #0]

		// Очікування стабілізації HSI16
		while (!(RCC->CR & RCC_CR_HSIRDY))
 8001aa8:	3103      	adds	r1, #3
 8001aaa:	681a      	ldr	r2, [r3, #0]
 8001aac:	4211      	tst	r1, r2
 8001aae:	d0fc      	beq.n	8001aaa <SystemClock_Config+0x36>
		{
		}

		// Перемикання системної тактової частоти на HSI16
		MODIFY_REG(RCC->CFGR, RCC_CFGR_SW_Msk, RCC_CFGR_SW_HSI);
 8001ab0:	2103      	movs	r1, #3
 8001ab2:	68da      	ldr	r2, [r3, #12]
 8001ab4:	438a      	bics	r2, r1
 8001ab6:	3902      	subs	r1, #2
 8001ab8:	430a      	orrs	r2, r1
 8001aba:	60da      	str	r2, [r3, #12]

		// Очікування завершення перемикання
		while ((RCC->CFGR & RCC_CFGR_SWS_Msk) != RCC_CFGR_SWS_HSI)
 8001abc:	220c      	movs	r2, #12
 8001abe:	4925      	ldr	r1, [pc, #148]	@ (8001b54 <SystemClock_Config+0xe0>)
 8001ac0:	68cb      	ldr	r3, [r1, #12]
 8001ac2:	4013      	ands	r3, r2
 8001ac4:	2b04      	cmp	r3, #4
 8001ac6:	d1fb      	bne.n	8001ac0 <SystemClock_Config+0x4c>
		{
		}
	}

	// Налаштування MCO prescaler і джерела сигналу
	MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOPRE_Msk, 0b000 << RCC_CFGR_MCOPRE_Pos);
 8001ac8:	4b22      	ldr	r3, [pc, #136]	@ (8001b54 <SystemClock_Config+0xe0>)
 8001aca:	4924      	ldr	r1, [pc, #144]	@ (8001b5c <SystemClock_Config+0xe8>)
 8001acc:	68da      	ldr	r2, [r3, #12]
 8001ace:	400a      	ands	r2, r1
 8001ad0:	60da      	str	r2, [r3, #12]
	MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL_Msk, 0b000 << RCC_CFGR_MCOSEL_Pos);
 8001ad2:	68da      	ldr	r2, [r3, #12]
 8001ad4:	4922      	ldr	r1, [pc, #136]	@ (8001b60 <SystemClock_Config+0xec>)
 8001ad6:	400a      	ands	r2, r1
 8001ad8:	60da      	str	r2, [r3, #12]

	// Налаштування PLL
	MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLDIV_Msk, 0b01 << RCC_CFGR_PLLDIV_Pos);
 8001ada:	68d9      	ldr	r1, [r3, #12]
 8001adc:	4a21      	ldr	r2, [pc, #132]	@ (8001b64 <SystemClock_Config+0xf0>)
 8001ade:	4011      	ands	r1, r2
 8001ae0:	2280      	movs	r2, #128	@ 0x80
 8001ae2:	03d2      	lsls	r2, r2, #15
 8001ae4:	430a      	orrs	r2, r1
 8001ae6:	60da      	str	r2, [r3, #12]
	MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLMUL_Msk, 0b0001 << RCC_CFGR_PLLMUL_Pos);
 8001ae8:	68d9      	ldr	r1, [r3, #12]
 8001aea:	4a1f      	ldr	r2, [pc, #124]	@ (8001b68 <SystemClock_Config+0xf4>)
 8001aec:	4011      	ands	r1, r2
 8001aee:	2280      	movs	r2, #128	@ 0x80
 8001af0:	02d2      	lsls	r2, r2, #11
 8001af2:	430a      	orrs	r2, r1
 8001af4:	60da      	str	r2, [r3, #12]
	MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLSRC_Msk, 0b0 << RCC_CFGR_PLLSRC_Pos);
 8001af6:	68da      	ldr	r2, [r3, #12]
 8001af8:	491c      	ldr	r1, [pc, #112]	@ (8001b6c <SystemClock_Config+0xf8>)
 8001afa:	400a      	ands	r2, r1
 8001afc:	60da      	str	r2, [r3, #12]

	// Вимкнення системного пробудження від MSI після STOP режиму
	SET_BIT(RCC->CFGR, RCC_CFGR_STOPWUCK);
 8001afe:	2280      	movs	r2, #128	@ 0x80
 8001b00:	68d9      	ldr	r1, [r3, #12]
 8001b02:	0212      	lsls	r2, r2, #8
 8001b04:	430a      	orrs	r2, r1
 8001b06:	60da      	str	r2, [r3, #12]

	// Налаштування прескалерів для шин APB1, APB2 та AHB
	MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2_Msk, 0b000 << RCC_CFGR_PPRE2_Pos);
 8001b08:	68da      	ldr	r2, [r3, #12]
 8001b0a:	4919      	ldr	r1, [pc, #100]	@ (8001b70 <SystemClock_Config+0xfc>)
 8001b0c:	400a      	ands	r2, r1
 8001b0e:	60da      	str	r2, [r3, #12]
	MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1_Msk, 0b000 << RCC_CFGR_PPRE1_Pos);
 8001b10:	68da      	ldr	r2, [r3, #12]
 8001b12:	4918      	ldr	r1, [pc, #96]	@ (8001b74 <SystemClock_Config+0x100>)
 8001b14:	400a      	ands	r2, r1
	MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE_Msk, 0b0000 << RCC_CFGR_HPRE_Pos);
 8001b16:	21f0      	movs	r1, #240	@ 0xf0
	MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1_Msk, 0b000 << RCC_CFGR_PPRE1_Pos);
 8001b18:	60da      	str	r2, [r3, #12]
	MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE_Msk, 0b0000 << RCC_CFGR_HPRE_Pos);
 8001b1a:	68da      	ldr	r2, [r3, #12]
 8001b1c:	438a      	bics	r2, r1
 8001b1e:	60da      	str	r2, [r3, #12]

	// Перемикання на PLL
	SET_BIT(RCC->CR, RCC_CR_PLLON);
 8001b20:	2280      	movs	r2, #128	@ 0x80
 8001b22:	6819      	ldr	r1, [r3, #0]
 8001b24:	0452      	lsls	r2, r2, #17
 8001b26:	430a      	orrs	r2, r1

	// Очікування стабілізації PLL
	while (!(RCC->CR & RCC_CR_PLLRDY))
 8001b28:	2180      	movs	r1, #128	@ 0x80
	SET_BIT(RCC->CR, RCC_CR_PLLON);
 8001b2a:	601a      	str	r2, [r3, #0]
	while (!(RCC->CR & RCC_CR_PLLRDY))
 8001b2c:	0489      	lsls	r1, r1, #18
 8001b2e:	681a      	ldr	r2, [r3, #0]
 8001b30:	420a      	tst	r2, r1
 8001b32:	d0fc      	beq.n	8001b2e <SystemClock_Config+0xba>
	{
	}

	// Перемикання системної частоти на PLL
	MODIFY_REG(RCC->CFGR, RCC_CFGR_SW_Msk, RCC_CFGR_SW_PLL);
 8001b34:	2103      	movs	r1, #3
 8001b36:	68da      	ldr	r2, [r3, #12]
 8001b38:	430a      	orrs	r2, r1
 8001b3a:	60da      	str	r2, [r3, #12]

	// Очікування завершення перемикання
	while ((RCC->CFGR & RCC_CFGR_SWS_Msk) != RCC_CFGR_SWS_PLL)
 8001b3c:	220c      	movs	r2, #12
 8001b3e:	4905      	ldr	r1, [pc, #20]	@ (8001b54 <SystemClock_Config+0xe0>)
 8001b40:	68cb      	ldr	r3, [r1, #12]
 8001b42:	4013      	ands	r3, r2
 8001b44:	2b0c      	cmp	r3, #12
 8001b46:	d1fb      	bne.n	8001b40 <SystemClock_Config+0xcc>
	{
	}
}
 8001b48:	4770      	bx	lr
 8001b4a:	46c0      	nop			@ (mov r8, r8)
 8001b4c:	40007000 	.word	0x40007000
 8001b50:	ffffe7ff 	.word	0xffffe7ff
 8001b54:	40021000 	.word	0x40021000
 8001b58:	fffffeff 	.word	0xfffffeff
 8001b5c:	8fffffff 	.word	0x8fffffff
 8001b60:	f0ffffff 	.word	0xf0ffffff
 8001b64:	ff3fffff 	.word	0xff3fffff
 8001b68:	ffc3ffff 	.word	0xffc3ffff
 8001b6c:	fffeffff 	.word	0xfffeffff
 8001b70:	ffffc7ff 	.word	0xffffc7ff
 8001b74:	fffff8ff 	.word	0xfffff8ff

08001b78 <RTC_Init>:

void RTC_Init(void)
{
	// 1. Enable power and backup domain access
	SET_BIT(RCC->APB1ENR, RCC_APB1ENR_PWREN);
 8001b78:	2380      	movs	r3, #128	@ 0x80
 8001b7a:	4a20      	ldr	r2, [pc, #128]	@ (8001bfc <RTC_Init+0x84>)
 8001b7c:	055b      	lsls	r3, r3, #21
 8001b7e:	6b91      	ldr	r1, [r2, #56]	@ 0x38
	SET_BIT(PWR->CR, PWR_CR_DBP);
 8001b80:	481f      	ldr	r0, [pc, #124]	@ (8001c00 <RTC_Init+0x88>)
	SET_BIT(RCC->APB1ENR, RCC_APB1ENR_PWREN);
 8001b82:	430b      	orrs	r3, r1
 8001b84:	6393      	str	r3, [r2, #56]	@ 0x38
	SET_BIT(PWR->CR, PWR_CR_DBP);
 8001b86:	2380      	movs	r3, #128	@ 0x80
 8001b88:	6801      	ldr	r1, [r0, #0]
 8001b8a:	005b      	lsls	r3, r3, #1
 8001b8c:	4319      	orrs	r1, r3
 8001b8e:	6001      	str	r1, [r0, #0]

	// 2. Enable LSE Oscillator
	SET_BIT(RCC->CSR, RCC_CSR_LSEON);
 8001b90:	6d11      	ldr	r1, [r2, #80]	@ 0x50
 8001b92:	430b      	orrs	r3, r1
	while (!(READ_BIT(RCC->CSR, RCC_CSR_LSERDY)))
 8001b94:	2180      	movs	r1, #128	@ 0x80
	SET_BIT(RCC->CSR, RCC_CSR_LSEON);
 8001b96:	6513      	str	r3, [r2, #80]	@ 0x50
	while (!(READ_BIT(RCC->CSR, RCC_CSR_LSERDY)))
 8001b98:	0089      	lsls	r1, r1, #2
 8001b9a:	6d13      	ldr	r3, [r2, #80]	@ 0x50
 8001b9c:	420b      	tst	r3, r1
 8001b9e:	d0fc      	beq.n	8001b9a <RTC_Init+0x22>
	{
	}

	// 3. Set LSE as RTC clock source and enable RTC
	MODIFY_REG(RCC->CSR, RCC_CSR_RTCSEL_Msk, 0b01 << RCC_CSR_RTCSEL_Pos); // LSE selected as RTC clock
 8001ba0:	6d11      	ldr	r1, [r2, #80]	@ 0x50
 8001ba2:	4b18      	ldr	r3, [pc, #96]	@ (8001c04 <RTC_Init+0x8c>)
 8001ba4:	4019      	ands	r1, r3
 8001ba6:	2380      	movs	r3, #128	@ 0x80
 8001ba8:	025b      	lsls	r3, r3, #9
 8001baa:	430b      	orrs	r3, r1
 8001bac:	6513      	str	r3, [r2, #80]	@ 0x50
	SET_BIT(RCC->CSR, RCC_CSR_RTCEN);
 8001bae:	2380      	movs	r3, #128	@ 0x80
 8001bb0:	6d11      	ldr	r1, [r2, #80]	@ 0x50
 8001bb2:	02db      	lsls	r3, r3, #11
 8001bb4:	430b      	orrs	r3, r1
 8001bb6:	6513      	str	r3, [r2, #80]	@ 0x50

	// 4. Disable RTC write protection
	RTC->WPR = 0xCA; // Step 1
 8001bb8:	22ca      	movs	r2, #202	@ 0xca
	RTC->WPR = 0x53; // Step 2

	// 5. Enter initialization mode
	SET_BIT(RTC->ISR, RTC_ISR_INIT);
 8001bba:	2180      	movs	r1, #128	@ 0x80
	RTC->WPR = 0xCA; // Step 1
 8001bbc:	4b12      	ldr	r3, [pc, #72]	@ (8001c08 <RTC_Init+0x90>)
 8001bbe:	625a      	str	r2, [r3, #36]	@ 0x24
	RTC->WPR = 0x53; // Step 2
 8001bc0:	3a77      	subs	r2, #119	@ 0x77
 8001bc2:	625a      	str	r2, [r3, #36]	@ 0x24
	SET_BIT(RTC->ISR, RTC_ISR_INIT);
 8001bc4:	68da      	ldr	r2, [r3, #12]
 8001bc6:	430a      	orrs	r2, r1
 8001bc8:	60da      	str	r2, [r3, #12]
	while (!(READ_BIT(RTC->ISR, RTC_ISR_INITF)))
 8001bca:	3940      	subs	r1, #64	@ 0x40
 8001bcc:	68da      	ldr	r2, [r3, #12]
 8001bce:	4211      	tst	r1, r2
 8001bd0:	d0fc      	beq.n	8001bcc <RTC_Init+0x54>
	{
	}

	// 6. Set the time in BCD format (17:36:00)
	MODIFY_REG(RTC->TR,
 8001bd2:	6819      	ldr	r1, [r3, #0]
 8001bd4:	4a0d      	ldr	r2, [pc, #52]	@ (8001c0c <RTC_Init+0x94>)
 8001bd6:	4011      	ands	r1, r2
 8001bd8:	4a0d      	ldr	r2, [pc, #52]	@ (8001c10 <RTC_Init+0x98>)
 8001bda:	430a      	orrs	r2, r1
 8001bdc:	601a      	str	r2, [r3, #0]
				   (0x6 << RTC_TR_MNU_Pos) | // Minute units (6 -> 36)
				   (0x0 << RTC_TR_ST_Pos) |	 // Second tens (0 -> 00)
				   (0x0 << RTC_TR_SU_Pos));	 // Second units (0 -> 00)

	// 7. Set the date in BCD format (01/02/2024, Monday)
	MODIFY_REG(RTC->DR,
 8001bde:	6859      	ldr	r1, [r3, #4]
 8001be0:	4a0c      	ldr	r2, [pc, #48]	@ (8001c14 <RTC_Init+0x9c>)
 8001be2:	4011      	ands	r1, r2
 8001be4:	4a0c      	ldr	r2, [pc, #48]	@ (8001c18 <RTC_Init+0xa0>)
 8001be6:	430a      	orrs	r2, r1
				   (0x0 << RTC_DR_DT_Pos) |	 // Day tens (0 -> 01)
				   (0x1 << RTC_DR_DU_Pos) |	 // Day units (1 -> 01)
				   (0x2 << RTC_DR_WDU_Pos)); // Weekday (3 -> Monday)

	// 8. Exit initialization mode
	CLEAR_BIT(RTC->ISR, RTC_ISR_INIT);
 8001be8:	2180      	movs	r1, #128	@ 0x80
	MODIFY_REG(RTC->DR,
 8001bea:	605a      	str	r2, [r3, #4]
	CLEAR_BIT(RTC->ISR, RTC_ISR_INIT);
 8001bec:	68da      	ldr	r2, [r3, #12]
 8001bee:	438a      	bics	r2, r1
 8001bf0:	60da      	str	r2, [r3, #12]

	// 9. Re-enable RTC write protection
	RTC->WPR = 0xFE; // Disable write access for RTC register
 8001bf2:	22fe      	movs	r2, #254	@ 0xfe
 8001bf4:	625a      	str	r2, [r3, #36]	@ 0x24
	RTC->WPR = 0x64; //				-||-
 8001bf6:	3a9a      	subs	r2, #154	@ 0x9a
 8001bf8:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001bfa:	4770      	bx	lr
 8001bfc:	40021000 	.word	0x40021000
 8001c00:	40007000 	.word	0x40007000
 8001c04:	fffcffff 	.word	0xfffcffff
 8001c08:	40002800 	.word	0x40002800
 8001c0c:	ffc08080 	.word	0xffc08080
 8001c10:	00173600 	.word	0x00173600
 8001c14:	ff0000c0 	.word	0xff0000c0
 8001c18:	00244401 	.word	0x00244401

08001c1c <TIM2_Init>:

void TIM2_Init(void)
{

	// Увімкнення тактування GPIOA (для PA15, як PWM вихід)
	RCC->IOPENR |= RCC_IOPENR_IOPAEN;
 8001c1c:	2201      	movs	r2, #1
{
 8001c1e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c20:	46c6      	mov	lr, r8
	// Настроить пин 15 на режим альтернативной функции
	CONFIGURE_GPIO(GPIOB, 15, 0b10, 0, 0b11); // BuzzerPin
 8001c22:	2480      	movs	r4, #128	@ 0x80
	RCC->IOPENR |= RCC_IOPENR_IOPAEN;
 8001c24:	4835      	ldr	r0, [pc, #212]	@ (8001cfc <TIM2_Init+0xe0>)
{
 8001c26:	b500      	push	{lr}
	RCC->IOPENR |= RCC_IOPENR_IOPAEN;
 8001c28:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
	CONFIGURE_GPIO(GPIOB, 15, 0b10, 0, 0b11); // BuzzerPin
 8001c2a:	0624      	lsls	r4, r4, #24
	RCC->IOPENR |= RCC_IOPENR_IOPAEN;
 8001c2c:	4313      	orrs	r3, r2
 8001c2e:	62c3      	str	r3, [r0, #44]	@ 0x2c
	CONFIGURE_GPIO(GPIOB, 15, 0b10, 0, 0b11); // BuzzerPin
 8001c30:	4b33      	ldr	r3, [pc, #204]	@ (8001d00 <TIM2_Init+0xe4>)

	/*Настройка таймера 2*/
	// TIMx control register 1 (TIMx_CR1)
	// SET_BIT(TIM2->CR1, TIM_CR1_CEN);  //Запуск таймера
	CLEAR_BIT(TIM2->CR1, TIM_CR1_UDIS);								 // Генерировать событие Update
	CLEAR_BIT(TIM2->CR1, TIM_CR1_URS);								 // Генерировать прерывание
 8001c32:	2704      	movs	r7, #4
	CONFIGURE_GPIO(GPIOB, 15, 0b10, 0, 0b11); // BuzzerPin
 8001c34:	6819      	ldr	r1, [r3, #0]
	CLEAR_BIT(TIM2->CR1, TIM_CR1_OPM);								 // One pulse mode off(Счетчик не останавливается при обновлении)
 8001c36:	2608      	movs	r6, #8
	CONFIGURE_GPIO(GPIOB, 15, 0b10, 0, 0b11); // BuzzerPin
 8001c38:	0089      	lsls	r1, r1, #2
 8001c3a:	0889      	lsrs	r1, r1, #2
 8001c3c:	4321      	orrs	r1, r4
 8001c3e:	6019      	str	r1, [r3, #0]
 8001c40:	6859      	ldr	r1, [r3, #4]
 8001c42:	4c30      	ldr	r4, [pc, #192]	@ (8001d04 <TIM2_Init+0xe8>)
	CLEAR_BIT(TIM2->CR1, TIM_CR1_DIR);								 // Считаем вверх
	MODIFY_REG(TIM2->CR1, TIM_CR1_CMS_Msk, 0b00 << TIM_CR1_CMS_Pos); // Выравнивание по краю
 8001c44:	2560      	movs	r5, #96	@ 0x60
	CONFIGURE_GPIO(GPIOB, 15, 0b10, 0, 0b11); // BuzzerPin
 8001c46:	4021      	ands	r1, r4
 8001c48:	6059      	str	r1, [r3, #4]
 8001c4a:	21c0      	movs	r1, #192	@ 0xc0
 8001c4c:	689c      	ldr	r4, [r3, #8]
 8001c4e:	0609      	lsls	r1, r1, #24
 8001c50:	4321      	orrs	r1, r4
 8001c52:	6099      	str	r1, [r3, #8]
	MODIFY_REG(GPIOA->AFR[1], GPIO_AFRH_AFSEL15_Msk, 0b0101 << GPIO_AFRH_AFSEL15_Pos);
 8001c54:	21a0      	movs	r1, #160	@ 0xa0
 8001c56:	05c9      	lsls	r1, r1, #23
 8001c58:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
	CLEAR_BIT(TIM2->CR1, TIM_CR1_DIR);								 // Считаем вверх
 8001c5a:	2410      	movs	r4, #16
	MODIFY_REG(GPIOA->AFR[1], GPIO_AFRH_AFSEL15_Msk, 0b0101 << GPIO_AFRH_AFSEL15_Pos);
 8001c5c:	011b      	lsls	r3, r3, #4
 8001c5e:	091b      	lsrs	r3, r3, #4
 8001c60:	430b      	orrs	r3, r1
 8001c62:	624b      	str	r3, [r1, #36]	@ 0x24
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001c64:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001c66:	4313      	orrs	r3, r2
 8001c68:	6383      	str	r3, [r0, #56]	@ 0x38
	CLEAR_BIT(TIM2->CR1, TIM_CR1_CEN);
 8001c6a:	2380      	movs	r3, #128	@ 0x80
	CLEAR_BIT(TIM2->CR1, TIM_CR1_UDIS);								 // Генерировать событие Update
 8001c6c:	2002      	movs	r0, #2
	CLEAR_BIT(TIM2->CR1, TIM_CR1_CEN);
 8001c6e:	05db      	lsls	r3, r3, #23
 8001c70:	6819      	ldr	r1, [r3, #0]
	CLEAR_BIT(TIM2->CR1, TIM_CR1_UDIS);								 // Генерировать событие Update
 8001c72:	4680      	mov	r8, r0
	CLEAR_BIT(TIM2->CR1, TIM_CR1_CEN);
 8001c74:	4391      	bics	r1, r2
 8001c76:	6019      	str	r1, [r3, #0]
	CLEAR_BIT(TIM2->CR1, TIM_CR1_UDIS);								 // Генерировать событие Update
 8001c78:	6819      	ldr	r1, [r3, #0]
 8001c7a:	4381      	bics	r1, r0
 8001c7c:	6019      	str	r1, [r3, #0]
	CLEAR_BIT(TIM2->CR1, TIM_CR1_URS);								 // Генерировать прерывание
 8001c7e:	6819      	ldr	r1, [r3, #0]
	SET_BIT(TIM2->CR1, TIM_CR1_ARPE);								 // Auto-reload preload enable
	MODIFY_REG(TIM2->CR1, TIM_CR1_CKD_Msk, 0b00 << TIM_CR1_CKD_Pos); // Предделение выключено
 8001c80:	4821      	ldr	r0, [pc, #132]	@ (8001d08 <TIM2_Init+0xec>)
	CLEAR_BIT(TIM2->CR1, TIM_CR1_URS);								 // Генерировать прерывание
 8001c82:	43b9      	bics	r1, r7
 8001c84:	6019      	str	r1, [r3, #0]
	CLEAR_BIT(TIM2->CR1, TIM_CR1_OPM);								 // One pulse mode off(Счетчик не останавливается при обновлении)
 8001c86:	6819      	ldr	r1, [r3, #0]
 8001c88:	43b1      	bics	r1, r6
 8001c8a:	6019      	str	r1, [r3, #0]
	CLEAR_BIT(TIM2->CR1, TIM_CR1_DIR);								 // Считаем вверх
 8001c8c:	6819      	ldr	r1, [r3, #0]
 8001c8e:	43a1      	bics	r1, r4
 8001c90:	6019      	str	r1, [r3, #0]
	MODIFY_REG(TIM2->CR1, TIM_CR1_CMS_Msk, 0b00 << TIM_CR1_CMS_Pos); // Выравнивание по краю
 8001c92:	6819      	ldr	r1, [r3, #0]
	SET_BIT(TIM2->CR1, TIM_CR1_ARPE);								 // Auto-reload preload enable
 8001c94:	3470      	adds	r4, #112	@ 0x70
	MODIFY_REG(TIM2->CR1, TIM_CR1_CMS_Msk, 0b00 << TIM_CR1_CMS_Pos); // Выравнивание по краю
 8001c96:	43a9      	bics	r1, r5
 8001c98:	6019      	str	r1, [r3, #0]
	SET_BIT(TIM2->CR1, TIM_CR1_ARPE);								 // Auto-reload preload enable
 8001c9a:	6819      	ldr	r1, [r3, #0]
 8001c9c:	4321      	orrs	r1, r4
 8001c9e:	6019      	str	r1, [r3, #0]
	MODIFY_REG(TIM2->CR1, TIM_CR1_CKD_Msk, 0b00 << TIM_CR1_CKD_Pos); // Предделение выключено
 8001ca0:	6819      	ldr	r1, [r3, #0]
 8001ca2:	4001      	ands	r1, r0
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ca4:	2080      	movs	r0, #128	@ 0x80
 8001ca6:	6019      	str	r1, [r3, #0]

	/*Настройка прерываний*/
	// TIMx DMA/uint16_terrupt enable register (TIMx_DIER)
	SET_BIT(TIM2->DIER, TIM_DIER_UIE); // Update uint16_terrupt enable
 8001ca8:	68d9      	ldr	r1, [r3, #12]
 8001caa:	0200      	lsls	r0, r0, #8
 8001cac:	4311      	orrs	r1, r2
 8001cae:	60d9      	str	r1, [r3, #12]

	// TIMx status register (TIMx_SR) - Статусные регистры

	TIM2->PSC = 3200 - 1;
 8001cb0:	4916      	ldr	r1, [pc, #88]	@ (8001d0c <TIM2_Init+0xf0>)
 8001cb2:	6299      	str	r1, [r3, #40]	@ 0x28
	TIM2->ARR = 10000 - 1;
 8001cb4:	4916      	ldr	r1, [pc, #88]	@ (8001d10 <TIM2_Init+0xf4>)
 8001cb6:	62d9      	str	r1, [r3, #44]	@ 0x2c
 8001cb8:	4916      	ldr	r1, [pc, #88]	@ (8001d14 <TIM2_Init+0xf8>)
 8001cba:	6008      	str	r0, [r1, #0]

	NVIC_EnableIRQ(TIM2_IRQn); // Разрешить прерывания по таймеру 2
	/*Настройка шим(Канал 1)*/
	MODIFY_REG(TIM2->CCMR1, TIM_CCMR1_CC1S_Msk, 0b00 << TIM_CCMR1_CC1S_Pos);  // CC1 channel is configured as output
 8001cbc:	2003      	movs	r0, #3
 8001cbe:	6999      	ldr	r1, [r3, #24]
 8001cc0:	4381      	bics	r1, r0
	CLEAR_BIT(TIM2->CCMR1, TIM_CCMR1_OC1CE);								  // OC1Ref is not affected by the ETRF input

	/*Запуск ШИМ*/
	// 15.4.9 TIMx capture/compare enable register (TIMx_CCER)
	SET_BIT(TIM2->CCER, TIM_CCER_CC1E);	   // On - OC1 signal is output on the corresponding output pin.
	CLEAR_BIT(TIM21->CCER, TIM_CCER_CC1P); // OC1 active high.
 8001cc2:	4640      	mov	r0, r8
	MODIFY_REG(TIM2->CCMR1, TIM_CCMR1_CC1S_Msk, 0b00 << TIM_CCMR1_CC1S_Pos);  // CC1 channel is configured as output
 8001cc4:	6199      	str	r1, [r3, #24]
	CLEAR_BIT(TIM2->CCMR1, TIM_CCMR1_OC1FE);								  // Fast mode disable
 8001cc6:	6999      	ldr	r1, [r3, #24]
 8001cc8:	43b9      	bics	r1, r7
 8001cca:	6199      	str	r1, [r3, #24]
	SET_BIT(TIM2->CCMR1, TIM_CCMR1_OC1PE);									  // Preload enable
 8001ccc:	6999      	ldr	r1, [r3, #24]
 8001cce:	4331      	orrs	r1, r6
 8001cd0:	6199      	str	r1, [r3, #24]
	MODIFY_REG(TIM2->CCMR1, TIM_CCMR1_OC1M_Msk, 0b110 << TIM_CCMR1_OC1M_Pos); // PWM MODE 1
 8001cd2:	6999      	ldr	r1, [r3, #24]
 8001cd4:	3668      	adds	r6, #104	@ 0x68
 8001cd6:	43b1      	bics	r1, r6
 8001cd8:	4329      	orrs	r1, r5
 8001cda:	6199      	str	r1, [r3, #24]
	CLEAR_BIT(TIM2->CCMR1, TIM_CCMR1_OC1CE);								  // OC1Ref is not affected by the ETRF input
 8001cdc:	6999      	ldr	r1, [r3, #24]
 8001cde:	43a1      	bics	r1, r4
 8001ce0:	6199      	str	r1, [r3, #24]
	SET_BIT(TIM2->CCER, TIM_CCER_CC1E);	   // On - OC1 signal is output on the corresponding output pin.
 8001ce2:	6a19      	ldr	r1, [r3, #32]
	CLEAR_BIT(TIM21->CCER, TIM_CCER_CC1P); // OC1 active high.
 8001ce4:	4c0c      	ldr	r4, [pc, #48]	@ (8001d18 <TIM2_Init+0xfc>)
	SET_BIT(TIM2->CCER, TIM_CCER_CC1E);	   // On - OC1 signal is output on the corresponding output pin.
 8001ce6:	4311      	orrs	r1, r2
 8001ce8:	6219      	str	r1, [r3, #32]
	CLEAR_BIT(TIM21->CCER, TIM_CCER_CC1P); // OC1 active high.
 8001cea:	6a21      	ldr	r1, [r4, #32]
 8001cec:	4381      	bics	r1, r0
 8001cee:	6221      	str	r1, [r4, #32]

	SET_BIT(TIM2->CR1, TIM_CR1_CEN);
 8001cf0:	6819      	ldr	r1, [r3, #0]
 8001cf2:	430a      	orrs	r2, r1
 8001cf4:	601a      	str	r2, [r3, #0]
}
 8001cf6:	bc80      	pop	{r7}
 8001cf8:	46b8      	mov	r8, r7
 8001cfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cfc:	40021000 	.word	0x40021000
 8001d00:	50000400 	.word	0x50000400
 8001d04:	ffff7fff 	.word	0xffff7fff
 8001d08:	fffffcff 	.word	0xfffffcff
 8001d0c:	00000c7f 	.word	0x00000c7f
 8001d10:	0000270f 	.word	0x0000270f
 8001d14:	e000e100 	.word	0xe000e100
 8001d18:	40010800 	.word	0x40010800

08001d1c <TIM21_Init>:

void TIM21_Init(void)
{
	// Увімкнення тактування GPIOB (для PB5, як PWM вихід)
	RCC->IOPENR |= RCC_IOPENR_IOPBEN;
 8001d1c:	2002      	movs	r0, #2
{
 8001d1e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d20:	46c6      	mov	lr, r8
	RCC->IOPENR |= RCC_IOPENR_IOPBEN;
 8001d22:	4a35      	ldr	r2, [pc, #212]	@ (8001df8 <TIM21_Init+0xdc>)
{
 8001d24:	b500      	push	{lr}
	RCC->IOPENR |= RCC_IOPENR_IOPBEN;
 8001d26:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
	// Настроить пин 5 на режим альтернативной функции
	CONFIGURE_GPIO(GPIOB, 5, 0b10, 0, 0b11); // mainLED
 8001d28:	4934      	ldr	r1, [pc, #208]	@ (8001dfc <TIM21_Init+0xe0>)
	RCC->IOPENR |= RCC_IOPENR_IOPBEN;
 8001d2a:	4303      	orrs	r3, r0
 8001d2c:	62d3      	str	r3, [r2, #44]	@ 0x2c
	CONFIGURE_GPIO(GPIOB, 5, 0b10, 0, 0b11); // mainLED
 8001d2e:	4b34      	ldr	r3, [pc, #208]	@ (8001e00 <TIM21_Init+0xe4>)
	/*Настройка таймера 21*/
	// TIMx control register 1 (TIMx_CR1)
	// SET_BIT(TIM21->CR1, TIM_CR1_CEN);  //Запуск таймера
	CLEAR_BIT(TIM21->CR1, TIM_CR1_UDIS);							  // Генерировать событие Update
	CLEAR_BIT(TIM21->CR1, TIM_CR1_URS);								  // Генерировать прерывание
	CLEAR_BIT(TIM21->CR1, TIM_CR1_OPM);								  // One pulse mode off(Счетчик не останавливается при обновлении)
 8001d30:	2708      	movs	r7, #8
	CONFIGURE_GPIO(GPIOB, 5, 0b10, 0, 0b11); // mainLED
 8001d32:	681c      	ldr	r4, [r3, #0]
	CLEAR_BIT(TIM21->CR1, TIM_CR1_DIR);								  // Считаем вверх
 8001d34:	2510      	movs	r5, #16
	CONFIGURE_GPIO(GPIOB, 5, 0b10, 0, 0b11); // mainLED
 8001d36:	400c      	ands	r4, r1
 8001d38:	2180      	movs	r1, #128	@ 0x80
 8001d3a:	0109      	lsls	r1, r1, #4
 8001d3c:	4321      	orrs	r1, r4
 8001d3e:	2420      	movs	r4, #32
 8001d40:	6019      	str	r1, [r3, #0]
 8001d42:	6859      	ldr	r1, [r3, #4]
	MODIFY_REG(TIM21->CR1, TIM_CR1_CMS_Msk, 0b00 << TIM_CR1_CMS_Pos); // Выравнивание по краю
 8001d44:	2660      	movs	r6, #96	@ 0x60
	CONFIGURE_GPIO(GPIOB, 5, 0b10, 0, 0b11); // mainLED
 8001d46:	43a1      	bics	r1, r4
 8001d48:	6059      	str	r1, [r3, #4]
 8001d4a:	21c0      	movs	r1, #192	@ 0xc0
 8001d4c:	689c      	ldr	r4, [r3, #8]
 8001d4e:	0109      	lsls	r1, r1, #4
 8001d50:	4321      	orrs	r1, r4
 8001d52:	6099      	str	r1, [r3, #8]
	MODIFY_REG(GPIOB->AFR[0], GPIO_AFRL_AFSEL5_Msk, 0b0101 << GPIO_AFRL_AFSEL5_Pos);
 8001d54:	6a1c      	ldr	r4, [r3, #32]
 8001d56:	492b      	ldr	r1, [pc, #172]	@ (8001e04 <TIM21_Init+0xe8>)
 8001d58:	400c      	ands	r4, r1
 8001d5a:	21a0      	movs	r1, #160	@ 0xa0
 8001d5c:	03c9      	lsls	r1, r1, #15
 8001d5e:	4321      	orrs	r1, r4
	RCC->APB2ENR |= RCC_APB2ENR_TIM21EN;
 8001d60:	2404      	movs	r4, #4
	MODIFY_REG(GPIOB->AFR[0], GPIO_AFRL_AFSEL5_Msk, 0b0101 << GPIO_AFRL_AFSEL5_Pos);
 8001d62:	6219      	str	r1, [r3, #32]
	CLEAR_BIT(TIM21->CR1, TIM_CR1_CEN);
 8001d64:	2101      	movs	r1, #1
	RCC->APB2ENR |= RCC_APB2ENR_TIM21EN;
 8001d66:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001d68:	4323      	orrs	r3, r4
 8001d6a:	6353      	str	r3, [r2, #52]	@ 0x34
	CLEAR_BIT(TIM21->CR1, TIM_CR1_CEN);
 8001d6c:	4b26      	ldr	r3, [pc, #152]	@ (8001e08 <TIM21_Init+0xec>)
 8001d6e:	681a      	ldr	r2, [r3, #0]
 8001d70:	438a      	bics	r2, r1
 8001d72:	601a      	str	r2, [r3, #0]
	CLEAR_BIT(TIM21->CR1, TIM_CR1_UDIS);							  // Генерировать событие Update
 8001d74:	681a      	ldr	r2, [r3, #0]
 8001d76:	4382      	bics	r2, r0
 8001d78:	601a      	str	r2, [r3, #0]
	CLEAR_BIT(TIM21->CR1, TIM_CR1_URS);								  // Генерировать прерывание
 8001d7a:	681a      	ldr	r2, [r3, #0]
 8001d7c:	43a2      	bics	r2, r4
 8001d7e:	601a      	str	r2, [r3, #0]
	CLEAR_BIT(TIM21->CR1, TIM_CR1_OPM);								  // One pulse mode off(Счетчик не останавливается при обновлении)
 8001d80:	681a      	ldr	r2, [r3, #0]
 8001d82:	43ba      	bics	r2, r7
 8001d84:	601a      	str	r2, [r3, #0]
	CLEAR_BIT(TIM21->CR1, TIM_CR1_DIR);								  // Считаем вверх
 8001d86:	681a      	ldr	r2, [r3, #0]
 8001d88:	43aa      	bics	r2, r5
 8001d8a:	601a      	str	r2, [r3, #0]
	MODIFY_REG(TIM21->CR1, TIM_CR1_CMS_Msk, 0b00 << TIM_CR1_CMS_Pos); // Выравнивание по краю
 8001d8c:	681a      	ldr	r2, [r3, #0]
	SET_BIT(TIM21->CR1, TIM_CR1_ARPE);								  // Auto-reload preload enable
 8001d8e:	3570      	adds	r5, #112	@ 0x70
	MODIFY_REG(TIM21->CR1, TIM_CR1_CMS_Msk, 0b00 << TIM_CR1_CMS_Pos); // Выравнивание по краю
 8001d90:	43b2      	bics	r2, r6
 8001d92:	601a      	str	r2, [r3, #0]
	SET_BIT(TIM21->CR1, TIM_CR1_ARPE);								  // Auto-reload preload enable
 8001d94:	681a      	ldr	r2, [r3, #0]
 8001d96:	46a8      	mov	r8, r5
 8001d98:	432a      	orrs	r2, r5
 8001d9a:	601a      	str	r2, [r3, #0]
	MODIFY_REG(TIM21->CR1, TIM_CR1_CKD_Msk, 0b00 << TIM_CR1_CKD_Pos); // Предделение выключено
 8001d9c:	681a      	ldr	r2, [r3, #0]
 8001d9e:	4d1b      	ldr	r5, [pc, #108]	@ (8001e0c <TIM21_Init+0xf0>)
 8001da0:	402a      	ands	r2, r5
 8001da2:	2580      	movs	r5, #128	@ 0x80
 8001da4:	601a      	str	r2, [r3, #0]

	/*Настройка прерываний*/
	// TIMx DMA/interrupt enable register (TIMx_DIER)
	SET_BIT(TIM21->DIER, TIM_DIER_UIE); // Update interrupt enable
 8001da6:	68da      	ldr	r2, [r3, #12]
 8001da8:	036d      	lsls	r5, r5, #13
 8001daa:	430a      	orrs	r2, r1
 8001dac:	60da      	str	r2, [r3, #12]

	// TIMx status register (TIMx_SR) - Статусные регистры
	TIM21->PSC = 3200 - 1;
 8001dae:	4a18      	ldr	r2, [pc, #96]	@ (8001e10 <TIM21_Init+0xf4>)
 8001db0:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM21->ARR = 10000 - 1;
 8001db2:	4a18      	ldr	r2, [pc, #96]	@ (8001e14 <TIM21_Init+0xf8>)
 8001db4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001db6:	4a18      	ldr	r2, [pc, #96]	@ (8001e18 <TIM21_Init+0xfc>)
 8001db8:	6015      	str	r5, [r2, #0]

	NVIC_EnableIRQ(TIM21_IRQn); // Разрешить прерывания по таймеру 21

	/*Настройка шим(Канал 1)*/
	MODIFY_REG(TIM21->CCMR1, TIM_CCMR1_CC1S_Msk, 0b00 << TIM_CCMR1_CC1S_Pos);  // CC1 channel is configured as output
 8001dba:	2503      	movs	r5, #3
 8001dbc:	699a      	ldr	r2, [r3, #24]
 8001dbe:	43aa      	bics	r2, r5
 8001dc0:	619a      	str	r2, [r3, #24]
	CLEAR_BIT(TIM21->CCMR1, TIM_CCMR1_OC1FE);								   // Fast mode disable
 8001dc2:	699a      	ldr	r2, [r3, #24]
 8001dc4:	43a2      	bics	r2, r4
 8001dc6:	619a      	str	r2, [r3, #24]
	SET_BIT(TIM21->CCMR1, TIM_CCMR1_OC1PE);									   // Preload enable
 8001dc8:	699a      	ldr	r2, [r3, #24]
	MODIFY_REG(TIM21->CCMR1, TIM_CCMR1_OC1M_Msk, 0b110 << TIM_CCMR1_OC1M_Pos); // PWM MODE 1
 8001dca:	346c      	adds	r4, #108	@ 0x6c
	SET_BIT(TIM21->CCMR1, TIM_CCMR1_OC1PE);									   // Preload enable
 8001dcc:	433a      	orrs	r2, r7
 8001dce:	619a      	str	r2, [r3, #24]
	MODIFY_REG(TIM21->CCMR1, TIM_CCMR1_OC1M_Msk, 0b110 << TIM_CCMR1_OC1M_Pos); // PWM MODE 1
 8001dd0:	699a      	ldr	r2, [r3, #24]
 8001dd2:	43a2      	bics	r2, r4
	CLEAR_BIT(TIM21->CCMR1, TIM_CCMR1_OC1CE);								   // OC1Ref is not affected by the ETRF input
 8001dd4:	4644      	mov	r4, r8
	MODIFY_REG(TIM21->CCMR1, TIM_CCMR1_OC1M_Msk, 0b110 << TIM_CCMR1_OC1M_Pos); // PWM MODE 1
 8001dd6:	4332      	orrs	r2, r6
 8001dd8:	619a      	str	r2, [r3, #24]
	CLEAR_BIT(TIM21->CCMR1, TIM_CCMR1_OC1CE);								   // OC1Ref is not affected by the ETRF input
 8001dda:	699a      	ldr	r2, [r3, #24]
 8001ddc:	43a2      	bics	r2, r4
 8001dde:	619a      	str	r2, [r3, #24]

	/*Запуск ШИМ*/
	// TIMx capture/compare enable register (TIMx_CCER)
	SET_BIT(TIM21->CCER, TIM_CCER_CC1E); // On - OC1 signal is output on the corresponding output pin.
 8001de0:	6a1a      	ldr	r2, [r3, #32]
 8001de2:	430a      	orrs	r2, r1
 8001de4:	621a      	str	r2, [r3, #32]
	SET_BIT(TIM21->CCER, TIM_CCER_CC1P); // OC1 active high.
 8001de6:	6a1a      	ldr	r2, [r3, #32]
 8001de8:	4302      	orrs	r2, r0
 8001dea:	621a      	str	r2, [r3, #32]

	SET_BIT(TIM21->CR1, TIM_CR1_CEN);
 8001dec:	681a      	ldr	r2, [r3, #0]
 8001dee:	430a      	orrs	r2, r1
 8001df0:	601a      	str	r2, [r3, #0]
}
 8001df2:	bc80      	pop	{r7}
 8001df4:	46b8      	mov	r8, r7
 8001df6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001df8:	40021000 	.word	0x40021000
 8001dfc:	fffff3ff 	.word	0xfffff3ff
 8001e00:	50000400 	.word	0x50000400
 8001e04:	ff0fffff 	.word	0xff0fffff
 8001e08:	40010800 	.word	0x40010800
 8001e0c:	fffffcff 	.word	0xfffffcff
 8001e10:	00000c7f 	.word	0x00000c7f
 8001e14:	0000270f 	.word	0x0000270f
 8001e18:	e000e100 	.word	0xe000e100

08001e1c <GPIO_Init>:

void GPIO_Init(void)
{
	// Включення тактування портів A, B, C
	RCC->IOPENR |= RCC_IOPENR_IOPAEN | RCC_IOPENR_IOPBEN | RCC_IOPENR_IOPCEN;
 8001e1c:	2107      	movs	r1, #7
{
 8001e1e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e20:	4657      	mov	r7, sl
 8001e22:	464e      	mov	r6, r9
 8001e24:	4645      	mov	r5, r8
 8001e26:	46de      	mov	lr, fp
	RCC->IOPENR |= RCC_IOPENR_IOPAEN | RCC_IOPENR_IOPBEN | RCC_IOPENR_IOPCEN;
 8001e28:	4ab3      	ldr	r2, [pc, #716]	@ (80020f8 <GPIO_Init+0x2dc>)
{
 8001e2a:	b5e0      	push	{r5, r6, r7, lr}
	RCC->IOPENR |= RCC_IOPENR_IOPAEN | RCC_IOPENR_IOPBEN | RCC_IOPENR_IOPCEN;
 8001e2c:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c

	// Налаштування світлодіодів (виводи PA, PB)
	CONFIGURE_GPIO(GPIOA, 7, 0b01, 0, 0b11);  // LEDa
	CONFIGURE_GPIO(GPIOB, 1, 0b01, 0, 0b11);  // LEDb
 8001e2e:	250c      	movs	r5, #12
	RCC->IOPENR |= RCC_IOPENR_IOPAEN | RCC_IOPENR_IOPBEN | RCC_IOPENR_IOPCEN;
 8001e30:	430b      	orrs	r3, r1
 8001e32:	62d3      	str	r3, [r2, #44]	@ 0x2c
	CONFIGURE_GPIO(GPIOA, 7, 0b01, 0, 0b11);  // LEDa
 8001e34:	23a0      	movs	r3, #160	@ 0xa0
 8001e36:	05db      	lsls	r3, r3, #23
 8001e38:	6819      	ldr	r1, [r3, #0]
 8001e3a:	4ab0      	ldr	r2, [pc, #704]	@ (80020fc <GPIO_Init+0x2e0>)
	CONFIGURE_GPIO(GPIOB, 1, 0b01, 0, 0b11);  // LEDb
 8001e3c:	2004      	movs	r0, #4
	CONFIGURE_GPIO(GPIOA, 7, 0b01, 0, 0b11);  // LEDa
 8001e3e:	4011      	ands	r1, r2
 8001e40:	2280      	movs	r2, #128	@ 0x80
 8001e42:	01d2      	lsls	r2, r2, #7
 8001e44:	430a      	orrs	r2, r1
 8001e46:	2180      	movs	r1, #128	@ 0x80
 8001e48:	601a      	str	r2, [r3, #0]
 8001e4a:	685a      	ldr	r2, [r3, #4]
	CONFIGURE_GPIO(GPIOB, 1, 0b01, 0, 0b11);  // LEDb
 8001e4c:	2402      	movs	r4, #2
	CONFIGURE_GPIO(GPIOA, 7, 0b01, 0, 0b11);  // LEDa
 8001e4e:	438a      	bics	r2, r1
 8001e50:	605a      	str	r2, [r3, #4]
 8001e52:	22c0      	movs	r2, #192	@ 0xc0
 8001e54:	6899      	ldr	r1, [r3, #8]
 8001e56:	0212      	lsls	r2, r2, #8
 8001e58:	430a      	orrs	r2, r1
 8001e5a:	609a      	str	r2, [r3, #8]
	CONFIGURE_GPIO(GPIOB, 1, 0b01, 0, 0b11);  // LEDb
 8001e5c:	4aa8      	ldr	r2, [pc, #672]	@ (8002100 <GPIO_Init+0x2e4>)
	CONFIGURE_GPIO(GPIOA, 6, 0b01, 0, 0b11);  // LEDc
	CONFIGURE_GPIO(GPIOA, 5, 0b01, 0, 0b11);  // LEDd
	CONFIGURE_GPIO(GPIOA, 11, 0b01, 0, 0b11); // LEDe
	CONFIGURE_GPIO(GPIOA, 9, 0b01, 0, 0b11);  // LEDf
 8001e5e:	4fa9      	ldr	r7, [pc, #676]	@ (8002104 <GPIO_Init+0x2e8>)
	CONFIGURE_GPIO(GPIOB, 1, 0b01, 0, 0b11);  // LEDb
 8001e60:	6811      	ldr	r1, [r2, #0]
 8001e62:	43a9      	bics	r1, r5
 8001e64:	4301      	orrs	r1, r0
 8001e66:	6011      	str	r1, [r2, #0]
 8001e68:	6851      	ldr	r1, [r2, #4]
 8001e6a:	43a1      	bics	r1, r4
 8001e6c:	6051      	str	r1, [r2, #4]
 8001e6e:	6891      	ldr	r1, [r2, #8]
	CONFIGURE_GPIO(GPIOA, 6, 0b01, 0, 0b11);  // LEDc
 8001e70:	343e      	adds	r4, #62	@ 0x3e
	CONFIGURE_GPIO(GPIOB, 1, 0b01, 0, 0b11);  // LEDb
 8001e72:	4329      	orrs	r1, r5
 8001e74:	6091      	str	r1, [r2, #8]
	CONFIGURE_GPIO(GPIOA, 6, 0b01, 0, 0b11);  // LEDc
 8001e76:	681e      	ldr	r6, [r3, #0]
 8001e78:	49a3      	ldr	r1, [pc, #652]	@ (8002108 <GPIO_Init+0x2ec>)
 8001e7a:	46a1      	mov	r9, r4
 8001e7c:	400e      	ands	r6, r1
 8001e7e:	2180      	movs	r1, #128	@ 0x80
 8001e80:	0149      	lsls	r1, r1, #5
 8001e82:	4331      	orrs	r1, r6
 8001e84:	6019      	str	r1, [r3, #0]
 8001e86:	6859      	ldr	r1, [r3, #4]
 8001e88:	43a1      	bics	r1, r4
 8001e8a:	6059      	str	r1, [r3, #4]
 8001e8c:	21c0      	movs	r1, #192	@ 0xc0
 8001e8e:	689e      	ldr	r6, [r3, #8]
 8001e90:	0189      	lsls	r1, r1, #6
 8001e92:	4331      	orrs	r1, r6
 8001e94:	6099      	str	r1, [r3, #8]
	CONFIGURE_GPIO(GPIOA, 5, 0b01, 0, 0b11);  // LEDd
 8001e96:	681e      	ldr	r6, [r3, #0]
 8001e98:	499c      	ldr	r1, [pc, #624]	@ (800210c <GPIO_Init+0x2f0>)
	CONFIGURE_GPIO(GPIOB, 0, 0b01, 0, 0b11);  // LEDg
	CONFIGURE_GPIO(GPIOB, 3, 0b01, 0, 0b11);  // LEDdp
 8001e9a:	3480      	adds	r4, #128	@ 0x80
	CONFIGURE_GPIO(GPIOA, 5, 0b01, 0, 0b11);  // LEDd
 8001e9c:	400e      	ands	r6, r1
 8001e9e:	2180      	movs	r1, #128	@ 0x80
 8001ea0:	00c9      	lsls	r1, r1, #3
 8001ea2:	4331      	orrs	r1, r6
 8001ea4:	2620      	movs	r6, #32
 8001ea6:	6019      	str	r1, [r3, #0]
 8001ea8:	6859      	ldr	r1, [r3, #4]
	CONFIGURE_GPIO(GPIOB, 3, 0b01, 0, 0b11);  // LEDdp
 8001eaa:	46a4      	mov	ip, r4
	CONFIGURE_GPIO(GPIOA, 5, 0b01, 0, 0b11);  // LEDd
 8001eac:	43b1      	bics	r1, r6
 8001eae:	6059      	str	r1, [r3, #4]
 8001eb0:	21c0      	movs	r1, #192	@ 0xc0
 8001eb2:	689e      	ldr	r6, [r3, #8]
 8001eb4:	0109      	lsls	r1, r1, #4
 8001eb6:	4331      	orrs	r1, r6
 8001eb8:	6099      	str	r1, [r3, #8]
	CONFIGURE_GPIO(GPIOA, 11, 0b01, 0, 0b11); // LEDe
 8001eba:	681e      	ldr	r6, [r3, #0]
 8001ebc:	4994      	ldr	r1, [pc, #592]	@ (8002110 <GPIO_Init+0x2f4>)
 8001ebe:	400e      	ands	r6, r1
 8001ec0:	2180      	movs	r1, #128	@ 0x80
 8001ec2:	03c9      	lsls	r1, r1, #15
 8001ec4:	4331      	orrs	r1, r6
 8001ec6:	6019      	str	r1, [r3, #0]
 8001ec8:	6859      	ldr	r1, [r3, #4]
 8001eca:	4e92      	ldr	r6, [pc, #584]	@ (8002114 <GPIO_Init+0x2f8>)
 8001ecc:	4031      	ands	r1, r6
 8001ece:	6059      	str	r1, [r3, #4]
 8001ed0:	21c0      	movs	r1, #192	@ 0xc0
 8001ed2:	689e      	ldr	r6, [r3, #8]
 8001ed4:	0409      	lsls	r1, r1, #16
 8001ed6:	4331      	orrs	r1, r6
 8001ed8:	6099      	str	r1, [r3, #8]
	CONFIGURE_GPIO(GPIOA, 9, 0b01, 0, 0b11);  // LEDf
 8001eda:	2180      	movs	r1, #128	@ 0x80
 8001edc:	681e      	ldr	r6, [r3, #0]
 8001ede:	02c9      	lsls	r1, r1, #11
 8001ee0:	403e      	ands	r6, r7
 8001ee2:	4331      	orrs	r1, r6
 8001ee4:	26c0      	movs	r6, #192	@ 0xc0
 8001ee6:	6019      	str	r1, [r3, #0]
 8001ee8:	6859      	ldr	r1, [r3, #4]
 8001eea:	4f8b      	ldr	r7, [pc, #556]	@ (8002118 <GPIO_Init+0x2fc>)
 8001eec:	0336      	lsls	r6, r6, #12
 8001eee:	4039      	ands	r1, r7
 8001ef0:	6059      	str	r1, [r3, #4]
 8001ef2:	6899      	ldr	r1, [r3, #8]
 8001ef4:	4331      	orrs	r1, r6
	CONFIGURE_GPIO(GPIOB, 0, 0b01, 0, 0b11);  // LEDg
 8001ef6:	2603      	movs	r6, #3
	CONFIGURE_GPIO(GPIOA, 9, 0b01, 0, 0b11);  // LEDf
 8001ef8:	6099      	str	r1, [r3, #8]
	CONFIGURE_GPIO(GPIOB, 0, 0b01, 0, 0b11);  // LEDg
 8001efa:	2101      	movs	r1, #1
 8001efc:	6817      	ldr	r7, [r2, #0]
 8001efe:	43b7      	bics	r7, r6
 8001f00:	430f      	orrs	r7, r1
 8001f02:	6017      	str	r7, [r2, #0]
 8001f04:	6857      	ldr	r7, [r2, #4]
 8001f06:	438f      	bics	r7, r1
 8001f08:	6057      	str	r7, [r2, #4]
 8001f0a:	6897      	ldr	r7, [r2, #8]
 8001f0c:	4337      	orrs	r7, r6
 8001f0e:	6097      	str	r7, [r2, #8]
	CONFIGURE_GPIO(GPIOB, 3, 0b01, 0, 0b11);  // LEDdp
 8001f10:	6817      	ldr	r7, [r2, #0]
 8001f12:	43a7      	bics	r7, r4
 8001f14:	464c      	mov	r4, r9
 8001f16:	4327      	orrs	r7, r4
 8001f18:	6017      	str	r7, [r2, #0]
 8001f1a:	6857      	ldr	r7, [r2, #4]
 8001f1c:	3c38      	subs	r4, #56	@ 0x38
 8001f1e:	46a0      	mov	r8, r4
 8001f20:	43a7      	bics	r7, r4
 8001f22:	4664      	mov	r4, ip
 8001f24:	6057      	str	r7, [r2, #4]
 8001f26:	6897      	ldr	r7, [r2, #8]
 8001f28:	4327      	orrs	r7, r4
 8001f2a:	6097      	str	r7, [r2, #8]
	CONFIGURE_GPIO(GPIOA, 3, 0b01, 0, 0b11);  // LEDD1
 8001f2c:	681f      	ldr	r7, [r3, #0]
 8001f2e:	43a7      	bics	r7, r4
 8001f30:	464c      	mov	r4, r9
 8001f32:	4327      	orrs	r7, r4
 8001f34:	4644      	mov	r4, r8
 8001f36:	601f      	str	r7, [r3, #0]
 8001f38:	685f      	ldr	r7, [r3, #4]
 8001f3a:	43a7      	bics	r7, r4
 8001f3c:	4664      	mov	r4, ip
 8001f3e:	605f      	str	r7, [r3, #4]
 8001f40:	689f      	ldr	r7, [r3, #8]
 8001f42:	4327      	orrs	r7, r4
 8001f44:	609f      	str	r7, [r3, #8]
	CONFIGURE_GPIO(GPIOA, 4, 0b01, 0, 0b11);  // LEDD2
 8001f46:	681f      	ldr	r7, [r3, #0]
 8001f48:	4c74      	ldr	r4, [pc, #464]	@ (800211c <GPIO_Init+0x300>)
 8001f4a:	46a2      	mov	sl, r4
 8001f4c:	4027      	ands	r7, r4
 8001f4e:	2480      	movs	r4, #128	@ 0x80
 8001f50:	0064      	lsls	r4, r4, #1
 8001f52:	4327      	orrs	r7, r4
 8001f54:	601f      	str	r7, [r3, #0]
 8001f56:	685f      	ldr	r7, [r3, #4]
 8001f58:	46a4      	mov	ip, r4
 8001f5a:	3cf0      	subs	r4, #240	@ 0xf0
 8001f5c:	43a7      	bics	r7, r4
 8001f5e:	605f      	str	r7, [r3, #4]
 8001f60:	689d      	ldr	r5, [r3, #8]
 8001f62:	27c0      	movs	r7, #192	@ 0xc0
 8001f64:	002c      	movs	r4, r5
 8001f66:	00bf      	lsls	r7, r7, #2
 8001f68:	433c      	orrs	r4, r7
 8001f6a:	609c      	str	r4, [r3, #8]
	CONFIGURE_GPIO(GPIOA, 12, 0b01, 0, 0b11); // LEDD3
 8001f6c:	681d      	ldr	r5, [r3, #0]
 8001f6e:	46a8      	mov	r8, r5
 8001f70:	4644      	mov	r4, r8
 8001f72:	4d6b      	ldr	r5, [pc, #428]	@ (8002120 <GPIO_Init+0x304>)
 8001f74:	402c      	ands	r4, r5
 8001f76:	2580      	movs	r5, #128	@ 0x80
 8001f78:	046d      	lsls	r5, r5, #17
 8001f7a:	432c      	orrs	r4, r5
 8001f7c:	601c      	str	r4, [r3, #0]
 8001f7e:	685d      	ldr	r5, [r3, #4]
 8001f80:	46a8      	mov	r8, r5
 8001f82:	4644      	mov	r4, r8
 8001f84:	4d67      	ldr	r5, [pc, #412]	@ (8002124 <GPIO_Init+0x308>)
 8001f86:	402c      	ands	r4, r5
 8001f88:	605c      	str	r4, [r3, #4]
 8001f8a:	689d      	ldr	r5, [r3, #8]
 8001f8c:	46ab      	mov	fp, r5
 8001f8e:	25c0      	movs	r5, #192	@ 0xc0
 8001f90:	465c      	mov	r4, fp
 8001f92:	04ad      	lsls	r5, r5, #18
 8001f94:	432c      	orrs	r4, r5
 8001f96:	609c      	str	r4, [r3, #8]
	CONFIGURE_GPIO(GPIOB, 4, 0b01, 0, 0b11);  // LEDD4
 8001f98:	4654      	mov	r4, sl
 8001f9a:	6815      	ldr	r5, [r2, #0]
 8001f9c:	402c      	ands	r4, r5
 8001f9e:	46a0      	mov	r8, r4
 8001fa0:	4664      	mov	r4, ip
 8001fa2:	4645      	mov	r5, r8
 8001fa4:	432c      	orrs	r4, r5
 8001fa6:	6014      	str	r4, [r2, #0]
 8001fa8:	2410      	movs	r4, #16
 8001faa:	6855      	ldr	r5, [r2, #4]
 8001fac:	43a5      	bics	r5, r4
 8001fae:	6055      	str	r5, [r2, #4]
 8001fb0:	6894      	ldr	r4, [r2, #8]
 8001fb2:	4327      	orrs	r7, r4
 8001fb4:	6097      	str	r7, [r2, #8]
	CONFIGURE_GPIO(GPIOA, 10, 0b01, 0, 0b11); // LEDl1l2
 8001fb6:	681c      	ldr	r4, [r3, #0]
 8001fb8:	4f5b      	ldr	r7, [pc, #364]	@ (8002128 <GPIO_Init+0x30c>)
 8001fba:	403c      	ands	r4, r7
 8001fbc:	2780      	movs	r7, #128	@ 0x80
 8001fbe:	037f      	lsls	r7, r7, #13
 8001fc0:	4327      	orrs	r7, r4
 8001fc2:	601f      	str	r7, [r3, #0]
 8001fc4:	685f      	ldr	r7, [r3, #4]
 8001fc6:	4c59      	ldr	r4, [pc, #356]	@ (800212c <GPIO_Init+0x310>)
 8001fc8:	4027      	ands	r7, r4
 8001fca:	605f      	str	r7, [r3, #4]
 8001fcc:	27c0      	movs	r7, #192	@ 0xc0
 8001fce:	689c      	ldr	r4, [r3, #8]
 8001fd0:	03bf      	lsls	r7, r7, #14
 8001fd2:	4327      	orrs	r7, r4
 8001fd4:	609f      	str	r7, [r3, #8]
	CONFIGURE_GPIO(GPIOA, 8, 0b01, 0, 0b11);  // LEDalarm
 8001fd6:	681c      	ldr	r4, [r3, #0]
 8001fd8:	4f55      	ldr	r7, [pc, #340]	@ (8002130 <GPIO_Init+0x314>)
 8001fda:	403c      	ands	r4, r7
 8001fdc:	2780      	movs	r7, #128	@ 0x80
 8001fde:	027f      	lsls	r7, r7, #9
 8001fe0:	4327      	orrs	r7, r4
 8001fe2:	601f      	str	r7, [r3, #0]
 8001fe4:	685f      	ldr	r7, [r3, #4]
 8001fe6:	4c53      	ldr	r4, [pc, #332]	@ (8002134 <GPIO_Init+0x318>)
 8001fe8:	4027      	ands	r7, r4
 8001fea:	605f      	str	r7, [r3, #4]
 8001fec:	27c0      	movs	r7, #192	@ 0xc0
 8001fee:	689c      	ldr	r4, [r3, #8]
 8001ff0:	02bf      	lsls	r7, r7, #10
 8001ff2:	4327      	orrs	r7, r4
 8001ff4:	609f      	str	r7, [r3, #8]
	CONFIGURE_GPIO(GPIOC, 15, 0b01, 0, 0b11); // pinEN
 8001ff6:	4f50      	ldr	r7, [pc, #320]	@ (8002138 <GPIO_Init+0x31c>)
 8001ff8:	683c      	ldr	r4, [r7, #0]
 8001ffa:	00a4      	lsls	r4, r4, #2
 8001ffc:	08a4      	lsrs	r4, r4, #2
 8001ffe:	46a4      	mov	ip, r4
 8002000:	2480      	movs	r4, #128	@ 0x80
 8002002:	05e4      	lsls	r4, r4, #23
 8002004:	46a0      	mov	r8, r4
 8002006:	4664      	mov	r4, ip
 8002008:	4645      	mov	r5, r8
 800200a:	432c      	orrs	r4, r5
 800200c:	603c      	str	r4, [r7, #0]
 800200e:	687c      	ldr	r4, [r7, #4]
 8002010:	46a4      	mov	ip, r4
 8002012:	4c4a      	ldr	r4, [pc, #296]	@ (800213c <GPIO_Init+0x320>)
 8002014:	46a0      	mov	r8, r4
 8002016:	4664      	mov	r4, ip
 8002018:	4645      	mov	r5, r8
 800201a:	402c      	ands	r4, r5
 800201c:	607c      	str	r4, [r7, #4]
 800201e:	68bc      	ldr	r4, [r7, #8]
 8002020:	46a0      	mov	r8, r4
 8002022:	24c0      	movs	r4, #192	@ 0xc0
 8002024:	0624      	lsls	r4, r4, #24
 8002026:	46a4      	mov	ip, r4
 8002028:	4644      	mov	r4, r8
 800202a:	4665      	mov	r5, ip
 800202c:	432c      	orrs	r4, r5
 800202e:	60bc      	str	r4, [r7, #8]

	// Налаштування кнопок із EXTI
	CONFIGURE_GPIO(GPIOA, 0, 0b00, 0, 0b11); // decrement
	CONFIGURE_EXTI(0, 0b000, 0, 1);			 // EXTI для decrement
 8002030:	240f      	movs	r4, #15
	CONFIGURE_GPIO(GPIOA, 0, 0b00, 0, 0b11); // decrement
 8002032:	681f      	ldr	r7, [r3, #0]

	CONFIGURE_GPIO(GPIOA, 1, 0b00, 0, 0b11); // enter
 8002034:	250c      	movs	r5, #12
	CONFIGURE_GPIO(GPIOA, 0, 0b00, 0, 0b11); // decrement
 8002036:	43b7      	bics	r7, r6
 8002038:	601f      	str	r7, [r3, #0]
 800203a:	685f      	ldr	r7, [r3, #4]
 800203c:	438f      	bics	r7, r1
 800203e:	605f      	str	r7, [r3, #4]
 8002040:	689f      	ldr	r7, [r3, #8]
 8002042:	4337      	orrs	r7, r6
 8002044:	609f      	str	r7, [r3, #8]
	CONFIGURE_EXTI(0, 0b000, 0, 1);			 // EXTI для decrement
 8002046:	4f3e      	ldr	r7, [pc, #248]	@ (8002140 <GPIO_Init+0x324>)
 8002048:	68be      	ldr	r6, [r7, #8]
 800204a:	43a6      	bics	r6, r4
 800204c:	60be      	str	r6, [r7, #8]
 800204e:	4e3d      	ldr	r6, [pc, #244]	@ (8002144 <GPIO_Init+0x328>)
 8002050:	6834      	ldr	r4, [r6, #0]
 8002052:	430c      	orrs	r4, r1
 8002054:	6034      	str	r4, [r6, #0]
 8002056:	68f4      	ldr	r4, [r6, #12]
 8002058:	4321      	orrs	r1, r4
	CONFIGURE_GPIO(GPIOA, 1, 0b00, 0, 0b11); // enter
 800205a:	2402      	movs	r4, #2
	CONFIGURE_EXTI(0, 0b000, 0, 1);			 // EXTI для decrement
 800205c:	60f1      	str	r1, [r6, #12]
	CONFIGURE_GPIO(GPIOA, 1, 0b00, 0, 0b11); // enter
 800205e:	6819      	ldr	r1, [r3, #0]
 8002060:	43a9      	bics	r1, r5
 8002062:	6019      	str	r1, [r3, #0]
 8002064:	6859      	ldr	r1, [r3, #4]
 8002066:	43a1      	bics	r1, r4
 8002068:	6059      	str	r1, [r3, #4]
 800206a:	6899      	ldr	r1, [r3, #8]
 800206c:	4329      	orrs	r1, r5
 800206e:	6099      	str	r1, [r3, #8]
	CONFIGURE_EXTI(1, 0b000, 0, 1);			 // EXTI для enter
 8002070:	68b9      	ldr	r1, [r7, #8]
 8002072:	35e4      	adds	r5, #228	@ 0xe4
 8002074:	43a9      	bics	r1, r5
 8002076:	60b9      	str	r1, [r7, #8]
 8002078:	6831      	ldr	r1, [r6, #0]
 800207a:	4321      	orrs	r1, r4
 800207c:	6031      	str	r1, [r6, #0]
 800207e:	68f1      	ldr	r1, [r6, #12]
 8002080:	4321      	orrs	r1, r4
 8002082:	60f1      	str	r1, [r6, #12]

	CONFIGURE_GPIO(GPIOA, 2, 0b00, 0, 0b11); // increment
 8002084:	6819      	ldr	r1, [r3, #0]
 8002086:	342e      	adds	r4, #46	@ 0x2e
 8002088:	43a1      	bics	r1, r4
 800208a:	6019      	str	r1, [r3, #0]
 800208c:	6859      	ldr	r1, [r3, #4]
 800208e:	4381      	bics	r1, r0
 8002090:	6059      	str	r1, [r3, #4]
 8002092:	6899      	ldr	r1, [r3, #8]
 8002094:	4321      	orrs	r1, r4
 8002096:	6099      	str	r1, [r3, #8]
	CONFIGURE_EXTI(2, 0b000, 0, 1);			 // EXTI для increment
 8002098:	68bb      	ldr	r3, [r7, #8]
 800209a:	492b      	ldr	r1, [pc, #172]	@ (8002148 <GPIO_Init+0x32c>)
 800209c:	400b      	ands	r3, r1
 800209e:	60bb      	str	r3, [r7, #8]
 80020a0:	6833      	ldr	r3, [r6, #0]
 80020a2:	2180      	movs	r1, #128	@ 0x80
 80020a4:	4303      	orrs	r3, r0
 80020a6:	6033      	str	r3, [r6, #0]
 80020a8:	68f3      	ldr	r3, [r6, #12]
 80020aa:	4303      	orrs	r3, r0
 80020ac:	60f3      	str	r3, [r6, #12]

	CONFIGURE_GPIO(GPIOB, 9, 0b00, 0, 0b11); // pwr
 80020ae:	6813      	ldr	r3, [r2, #0]
 80020b0:	4814      	ldr	r0, [pc, #80]	@ (8002104 <GPIO_Init+0x2e8>)
 80020b2:	4003      	ands	r3, r0
 80020b4:	6013      	str	r3, [r2, #0]
 80020b6:	6853      	ldr	r3, [r2, #4]
 80020b8:	4817      	ldr	r0, [pc, #92]	@ (8002118 <GPIO_Init+0x2fc>)
 80020ba:	4003      	ands	r3, r0
 80020bc:	20c0      	movs	r0, #192	@ 0xc0
 80020be:	6053      	str	r3, [r2, #4]
 80020c0:	6893      	ldr	r3, [r2, #8]
 80020c2:	0300      	lsls	r0, r0, #12
 80020c4:	4303      	orrs	r3, r0
 80020c6:	6093      	str	r3, [r2, #8]
	CONFIGURE_EXTI(9, 0b000, 2, 3);			 // EXTI для pwr з обробкою по зростанню
 80020c8:	693b      	ldr	r3, [r7, #16]
 80020ca:	43ab      	bics	r3, r5
 80020cc:	613b      	str	r3, [r7, #16]
 80020ce:	2380      	movs	r3, #128	@ 0x80
 80020d0:	6832      	ldr	r2, [r6, #0]
 80020d2:	009b      	lsls	r3, r3, #2
 80020d4:	431a      	orrs	r2, r3
 80020d6:	6032      	str	r2, [r6, #0]
 80020d8:	68f2      	ldr	r2, [r6, #12]
 80020da:	4313      	orrs	r3, r2
 80020dc:	60f3      	str	r3, [r6, #12]
 80020de:	464a      	mov	r2, r9
 80020e0:	2620      	movs	r6, #32
 80020e2:	4b1a      	ldr	r3, [pc, #104]	@ (800214c <GPIO_Init+0x330>)
 80020e4:	601e      	str	r6, [r3, #0]
 80020e6:	601a      	str	r2, [r3, #0]
 80020e8:	6019      	str	r1, [r3, #0]

	/* Включення переривання */
	NVIC_EnableIRQ(EXTI0_1_IRQn);
	NVIC_EnableIRQ(EXTI2_3_IRQn);
	NVIC_EnableIRQ(EXTI4_15_IRQn);
}
 80020ea:	bcf0      	pop	{r4, r5, r6, r7}
 80020ec:	46bb      	mov	fp, r7
 80020ee:	46b2      	mov	sl, r6
 80020f0:	46a9      	mov	r9, r5
 80020f2:	46a0      	mov	r8, r4
 80020f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020f6:	46c0      	nop			@ (mov r8, r8)
 80020f8:	40021000 	.word	0x40021000
 80020fc:	ffff3fff 	.word	0xffff3fff
 8002100:	50000400 	.word	0x50000400
 8002104:	fff3ffff 	.word	0xfff3ffff
 8002108:	ffffcfff 	.word	0xffffcfff
 800210c:	fffff3ff 	.word	0xfffff3ff
 8002110:	ff3fffff 	.word	0xff3fffff
 8002114:	fffff7ff 	.word	0xfffff7ff
 8002118:	fffffdff 	.word	0xfffffdff
 800211c:	fffffcff 	.word	0xfffffcff
 8002120:	fcffffff 	.word	0xfcffffff
 8002124:	ffffefff 	.word	0xffffefff
 8002128:	ffcfffff 	.word	0xffcfffff
 800212c:	fffffbff 	.word	0xfffffbff
 8002130:	fffcffff 	.word	0xfffcffff
 8002134:	fffffeff 	.word	0xfffffeff
 8002138:	50000800 	.word	0x50000800
 800213c:	ffff7fff 	.word	0xffff7fff
 8002140:	40010000 	.word	0x40010000
 8002144:	40010400 	.word	0x40010400
 8002148:	fffff0ff 	.word	0xfffff0ff
 800214c:	e000e100 	.word	0xe000e100

08002150 <writeCHARSEG>:
		return '?'; // Повертаємо '?' для невідомого числа
	}
}

void writeCHARSEG(char CHAR, uint8_t seg)
{
 8002150:	b500      	push	{lr}
	switch (seg)
 8002152:	2902      	cmp	r1, #2
 8002154:	d048      	beq.n	80021e8 <writeCHARSEG+0x98>
 8002156:	d817      	bhi.n	8002188 <writeCHARSEG+0x38>
 8002158:	2900      	cmp	r1, #0
 800215a:	d061      	beq.n	8002220 <writeCHARSEG+0xd0>
		LEDD2_OFF();
		LEDD3_OFF();
		LEDD4_OFF();
		break;
	case 1:
		LEDD1_OFF();
 800215c:	23a0      	movs	r3, #160	@ 0xa0
 800215e:	2280      	movs	r2, #128	@ 0x80
 8002160:	05db      	lsls	r3, r3, #23
 8002162:	0312      	lsls	r2, r2, #12
 8002164:	619a      	str	r2, [r3, #24]
		LEDD2_ON();
 8002166:	2210      	movs	r2, #16
 8002168:	619a      	str	r2, [r3, #24]
		LEDD3_OFF();
 800216a:	2280      	movs	r2, #128	@ 0x80
 800216c:	0552      	lsls	r2, r2, #21
 800216e:	619a      	str	r2, [r3, #24]
		LEDD4_OFF();
 8002170:	2280      	movs	r2, #128	@ 0x80
 8002172:	4b8d      	ldr	r3, [pc, #564]	@ (80023a8 <writeCHARSEG+0x258>)
 8002174:	0352      	lsls	r2, r2, #13
 8002176:	619a      	str	r2, [r3, #24]
		LEDD2_OFF();
		LEDD3_OFF();
		LEDD4_OFF();
		break;
	}
	switch (CHAR)
 8002178:	382e      	subs	r0, #46	@ 0x2e
 800217a:	b2c0      	uxtb	r0, r0
 800217c:	2831      	cmp	r0, #49	@ 0x31
 800217e:	d817      	bhi.n	80021b0 <writeCHARSEG+0x60>
 8002180:	4b8a      	ldr	r3, [pc, #552]	@ (80023ac <writeCHARSEG+0x25c>)
 8002182:	0080      	lsls	r0, r0, #2
 8002184:	581b      	ldr	r3, [r3, r0]
 8002186:	469f      	mov	pc, r3
	switch (seg)
 8002188:	2903      	cmp	r1, #3
 800218a:	d13b      	bne.n	8002204 <writeCHARSEG+0xb4>
		LEDD1_OFF();
 800218c:	23a0      	movs	r3, #160	@ 0xa0
 800218e:	2280      	movs	r2, #128	@ 0x80
 8002190:	05db      	lsls	r3, r3, #23
 8002192:	0312      	lsls	r2, r2, #12
 8002194:	619a      	str	r2, [r3, #24]
		LEDD2_OFF();
 8002196:	2280      	movs	r2, #128	@ 0x80
 8002198:	0352      	lsls	r2, r2, #13
 800219a:	619a      	str	r2, [r3, #24]
		LEDD3_OFF();
 800219c:	2280      	movs	r2, #128	@ 0x80
 800219e:	0552      	lsls	r2, r2, #21
 80021a0:	619a      	str	r2, [r3, #24]
		LEDD4_ON();
 80021a2:	2210      	movs	r2, #16
 80021a4:	4b80      	ldr	r3, [pc, #512]	@ (80023a8 <writeCHARSEG+0x258>)
	switch (CHAR)
 80021a6:	382e      	subs	r0, #46	@ 0x2e
 80021a8:	b2c0      	uxtb	r0, r0
		LEDD4_ON();
 80021aa:	619a      	str	r2, [r3, #24]
	switch (CHAR)
 80021ac:	2831      	cmp	r0, #49	@ 0x31
 80021ae:	d9e7      	bls.n	8002180 <writeCHARSEG+0x30>
		LEDf_ON();
		LEDg_ON();
		LEDdp_OFF();
		break;
	default:
		LEDa_OFF();
 80021b0:	23a0      	movs	r3, #160	@ 0xa0
 80021b2:	2280      	movs	r2, #128	@ 0x80
		LEDb_OFF();
 80021b4:	2180      	movs	r1, #128	@ 0x80
		LEDa_OFF();
 80021b6:	0412      	lsls	r2, r2, #16
 80021b8:	05db      	lsls	r3, r3, #23
 80021ba:	619a      	str	r2, [r3, #24]
		LEDb_OFF();
 80021bc:	4a7a      	ldr	r2, [pc, #488]	@ (80023a8 <writeCHARSEG+0x258>)
 80021be:	0289      	lsls	r1, r1, #10
 80021c0:	6191      	str	r1, [r2, #24]
		LEDc_OFF();
 80021c2:	2180      	movs	r1, #128	@ 0x80
 80021c4:	03c9      	lsls	r1, r1, #15
 80021c6:	6199      	str	r1, [r3, #24]
		LEDd_OFF();
 80021c8:	2180      	movs	r1, #128	@ 0x80
 80021ca:	0389      	lsls	r1, r1, #14
 80021cc:	6199      	str	r1, [r3, #24]
		LEDe_OFF();
 80021ce:	2180      	movs	r1, #128	@ 0x80
 80021d0:	0509      	lsls	r1, r1, #20
 80021d2:	6199      	str	r1, [r3, #24]
		LEDf_OFF();
 80021d4:	2180      	movs	r1, #128	@ 0x80
 80021d6:	0489      	lsls	r1, r1, #18
 80021d8:	6199      	str	r1, [r3, #24]
		LEDg_OFF();
 80021da:	2380      	movs	r3, #128	@ 0x80
 80021dc:	025b      	lsls	r3, r3, #9
 80021de:	6193      	str	r3, [r2, #24]
		LEDdp_OFF();
 80021e0:	2380      	movs	r3, #128	@ 0x80
 80021e2:	031b      	lsls	r3, r3, #12
 80021e4:	6193      	str	r3, [r2, #24]
		break;
	}
}
 80021e6:	bd00      	pop	{pc}
		LEDD1_OFF();
 80021e8:	23a0      	movs	r3, #160	@ 0xa0
 80021ea:	2280      	movs	r2, #128	@ 0x80
 80021ec:	05db      	lsls	r3, r3, #23
 80021ee:	0312      	lsls	r2, r2, #12
 80021f0:	619a      	str	r2, [r3, #24]
		LEDD3_ON();
 80021f2:	2180      	movs	r1, #128	@ 0x80
		LEDD2_OFF();
 80021f4:	2280      	movs	r2, #128	@ 0x80
		LEDD3_ON();
 80021f6:	0149      	lsls	r1, r1, #5
		LEDD2_OFF();
 80021f8:	0352      	lsls	r2, r2, #13
 80021fa:	619a      	str	r2, [r3, #24]
		LEDD3_ON();
 80021fc:	6199      	str	r1, [r3, #24]
		LEDD4_OFF();
 80021fe:	4b6a      	ldr	r3, [pc, #424]	@ (80023a8 <writeCHARSEG+0x258>)
 8002200:	619a      	str	r2, [r3, #24]
		break;
 8002202:	e7b9      	b.n	8002178 <writeCHARSEG+0x28>
		LEDD1_OFF();
 8002204:	23a0      	movs	r3, #160	@ 0xa0
 8002206:	2280      	movs	r2, #128	@ 0x80
 8002208:	05db      	lsls	r3, r3, #23
 800220a:	0312      	lsls	r2, r2, #12
 800220c:	619a      	str	r2, [r3, #24]
		LEDD3_OFF();
 800220e:	2180      	movs	r1, #128	@ 0x80
		LEDD2_OFF();
 8002210:	2280      	movs	r2, #128	@ 0x80
		LEDD3_OFF();
 8002212:	0549      	lsls	r1, r1, #21
		LEDD2_OFF();
 8002214:	0352      	lsls	r2, r2, #13
 8002216:	619a      	str	r2, [r3, #24]
		LEDD3_OFF();
 8002218:	6199      	str	r1, [r3, #24]
		LEDD4_OFF();
 800221a:	4b63      	ldr	r3, [pc, #396]	@ (80023a8 <writeCHARSEG+0x258>)
 800221c:	619a      	str	r2, [r3, #24]
		break;
 800221e:	e7ab      	b.n	8002178 <writeCHARSEG+0x28>
		LEDD1_ON();
 8002220:	23a0      	movs	r3, #160	@ 0xa0
 8002222:	2208      	movs	r2, #8
 8002224:	05db      	lsls	r3, r3, #23
 8002226:	e7f1      	b.n	800220c <writeCHARSEG+0xbc>
		LEDa_OFF();
 8002228:	23a0      	movs	r3, #160	@ 0xa0
 800222a:	2280      	movs	r2, #128	@ 0x80
		LEDb_OFF();
 800222c:	2180      	movs	r1, #128	@ 0x80
		LEDa_OFF();
 800222e:	05db      	lsls	r3, r3, #23
 8002230:	0412      	lsls	r2, r2, #16
 8002232:	619a      	str	r2, [r3, #24]
		LEDb_OFF();
 8002234:	4a5c      	ldr	r2, [pc, #368]	@ (80023a8 <writeCHARSEG+0x258>)
 8002236:	0289      	lsls	r1, r1, #10
 8002238:	6191      	str	r1, [r2, #24]
		LEDc_OFF();
 800223a:	2180      	movs	r1, #128	@ 0x80
 800223c:	03c9      	lsls	r1, r1, #15
 800223e:	6199      	str	r1, [r3, #24]
		LEDd_OFF();
 8002240:	2180      	movs	r1, #128	@ 0x80
 8002242:	0389      	lsls	r1, r1, #14
 8002244:	6199      	str	r1, [r3, #24]
		LEDe_OFF();
 8002246:	2180      	movs	r1, #128	@ 0x80
 8002248:	0509      	lsls	r1, r1, #20
 800224a:	6199      	str	r1, [r3, #24]
		LEDf_OFF();
 800224c:	2180      	movs	r1, #128	@ 0x80
 800224e:	0489      	lsls	r1, r1, #18
 8002250:	6199      	str	r1, [r3, #24]
		LEDg_OFF();
 8002252:	2380      	movs	r3, #128	@ 0x80
 8002254:	025b      	lsls	r3, r3, #9
 8002256:	6193      	str	r3, [r2, #24]
		LEDdp_ON();
 8002258:	2308      	movs	r3, #8
 800225a:	6193      	str	r3, [r2, #24]
		break;
 800225c:	e7c3      	b.n	80021e6 <writeCHARSEG+0x96>
		LEDa_ON();
 800225e:	23a0      	movs	r3, #160	@ 0xa0
 8002260:	2280      	movs	r2, #128	@ 0x80
		LEDb_ON();
 8002262:	2102      	movs	r1, #2
		LEDa_ON();
 8002264:	05db      	lsls	r3, r3, #23
 8002266:	619a      	str	r2, [r3, #24]
		LEDb_ON();
 8002268:	4a4f      	ldr	r2, [pc, #316]	@ (80023a8 <writeCHARSEG+0x258>)
 800226a:	6191      	str	r1, [r2, #24]
		LEDc_ON();
 800226c:	313e      	adds	r1, #62	@ 0x3e
 800226e:	6199      	str	r1, [r3, #24]
		LEDd_ON();
 8002270:	3920      	subs	r1, #32
 8002272:	6199      	str	r1, [r3, #24]
		LEDe_ON();
 8002274:	2180      	movs	r1, #128	@ 0x80
 8002276:	0109      	lsls	r1, r1, #4
 8002278:	6199      	str	r1, [r3, #24]
		LEDf_ON();
 800227a:	2180      	movs	r1, #128	@ 0x80
 800227c:	0089      	lsls	r1, r1, #2
 800227e:	e7ab      	b.n	80021d8 <writeCHARSEG+0x88>
		LEDa_OFF();
 8002280:	23a0      	movs	r3, #160	@ 0xa0
 8002282:	2280      	movs	r2, #128	@ 0x80
 8002284:	05db      	lsls	r3, r3, #23
 8002286:	0412      	lsls	r2, r2, #16
		LEDb_ON();
 8002288:	2102      	movs	r1, #2
		LEDa_ON();
 800228a:	619a      	str	r2, [r3, #24]
		LEDb_ON();
 800228c:	4a46      	ldr	r2, [pc, #280]	@ (80023a8 <writeCHARSEG+0x258>)
 800228e:	6191      	str	r1, [r2, #24]
		LEDc_ON();
 8002290:	313e      	adds	r1, #62	@ 0x3e
 8002292:	e798      	b.n	80021c6 <writeCHARSEG+0x76>
		LEDa_ON();
 8002294:	23a0      	movs	r3, #160	@ 0xa0
 8002296:	2280      	movs	r2, #128	@ 0x80
		LEDb_ON();
 8002298:	2102      	movs	r1, #2
		LEDa_ON();
 800229a:	05db      	lsls	r3, r3, #23
 800229c:	619a      	str	r2, [r3, #24]
		LEDb_ON();
 800229e:	4a42      	ldr	r2, [pc, #264]	@ (80023a8 <writeCHARSEG+0x258>)
 80022a0:	6191      	str	r1, [r2, #24]
		LEDc_OFF();
 80022a2:	2180      	movs	r1, #128	@ 0x80
 80022a4:	03c9      	lsls	r1, r1, #15
 80022a6:	6199      	str	r1, [r3, #24]
		LEDd_ON();
 80022a8:	2120      	movs	r1, #32
 80022aa:	6199      	str	r1, [r3, #24]
		LEDe_ON();
 80022ac:	2180      	movs	r1, #128	@ 0x80
 80022ae:	0109      	lsls	r1, r1, #4
 80022b0:	6199      	str	r1, [r3, #24]
		LEDf_OFF();
 80022b2:	2180      	movs	r1, #128	@ 0x80
 80022b4:	0489      	lsls	r1, r1, #18
		LEDf_ON();
 80022b6:	6199      	str	r1, [r3, #24]
		LEDg_ON();
 80022b8:	2301      	movs	r3, #1
 80022ba:	6193      	str	r3, [r2, #24]
		LEDdp_OFF();
 80022bc:	2380      	movs	r3, #128	@ 0x80
 80022be:	031b      	lsls	r3, r3, #12
 80022c0:	6193      	str	r3, [r2, #24]
		break;
 80022c2:	e790      	b.n	80021e6 <writeCHARSEG+0x96>
		LEDa_ON();
 80022c4:	23a0      	movs	r3, #160	@ 0xa0
 80022c6:	2280      	movs	r2, #128	@ 0x80
		LEDb_ON();
 80022c8:	2102      	movs	r1, #2
		LEDa_ON();
 80022ca:	05db      	lsls	r3, r3, #23
 80022cc:	619a      	str	r2, [r3, #24]
		LEDb_ON();
 80022ce:	4a36      	ldr	r2, [pc, #216]	@ (80023a8 <writeCHARSEG+0x258>)
 80022d0:	6191      	str	r1, [r2, #24]
		LEDc_ON();
 80022d2:	313e      	adds	r1, #62	@ 0x3e
 80022d4:	6199      	str	r1, [r3, #24]
		LEDd_ON();
 80022d6:	3920      	subs	r1, #32
 80022d8:	6199      	str	r1, [r3, #24]
		LEDe_OFF();
 80022da:	2180      	movs	r1, #128	@ 0x80
 80022dc:	0509      	lsls	r1, r1, #20
 80022de:	6199      	str	r1, [r3, #24]
		LEDf_OFF();
 80022e0:	2180      	movs	r1, #128	@ 0x80
 80022e2:	0489      	lsls	r1, r1, #18
 80022e4:	e7e7      	b.n	80022b6 <writeCHARSEG+0x166>
		LEDa_OFF();
 80022e6:	23a0      	movs	r3, #160	@ 0xa0
 80022e8:	2280      	movs	r2, #128	@ 0x80
		LEDb_ON();
 80022ea:	2102      	movs	r1, #2
		LEDa_OFF();
 80022ec:	05db      	lsls	r3, r3, #23
 80022ee:	0412      	lsls	r2, r2, #16
 80022f0:	619a      	str	r2, [r3, #24]
		LEDb_ON();
 80022f2:	4a2d      	ldr	r2, [pc, #180]	@ (80023a8 <writeCHARSEG+0x258>)
 80022f4:	6191      	str	r1, [r2, #24]
		LEDc_ON();
 80022f6:	313e      	adds	r1, #62	@ 0x3e
 80022f8:	6199      	str	r1, [r3, #24]
		LEDd_OFF();
 80022fa:	2180      	movs	r1, #128	@ 0x80
 80022fc:	0389      	lsls	r1, r1, #14
		LEDd_ON();
 80022fe:	6199      	str	r1, [r3, #24]
		LEDe_OFF();
 8002300:	2180      	movs	r1, #128	@ 0x80
 8002302:	0509      	lsls	r1, r1, #20
 8002304:	6199      	str	r1, [r3, #24]
		LEDf_ON();
 8002306:	2180      	movs	r1, #128	@ 0x80
 8002308:	0089      	lsls	r1, r1, #2
 800230a:	e7d4      	b.n	80022b6 <writeCHARSEG+0x166>
		LEDa_ON();
 800230c:	23a0      	movs	r3, #160	@ 0xa0
 800230e:	2280      	movs	r2, #128	@ 0x80
		LEDb_OFF();
 8002310:	2180      	movs	r1, #128	@ 0x80
		LEDa_ON();
 8002312:	05db      	lsls	r3, r3, #23
 8002314:	619a      	str	r2, [r3, #24]
		LEDb_OFF();
 8002316:	4a24      	ldr	r2, [pc, #144]	@ (80023a8 <writeCHARSEG+0x258>)
 8002318:	0289      	lsls	r1, r1, #10
 800231a:	6191      	str	r1, [r2, #24]
		LEDc_ON();
 800231c:	2140      	movs	r1, #64	@ 0x40
		LEDc_ON();
 800231e:	6199      	str	r1, [r3, #24]
		LEDd_ON();
 8002320:	3920      	subs	r1, #32
 8002322:	e7ec      	b.n	80022fe <writeCHARSEG+0x1ae>
		LEDa_ON();
 8002324:	23a0      	movs	r3, #160	@ 0xa0
 8002326:	2280      	movs	r2, #128	@ 0x80
		LEDb_OFF();
 8002328:	2180      	movs	r1, #128	@ 0x80
		LEDa_ON();
 800232a:	05db      	lsls	r3, r3, #23
 800232c:	619a      	str	r2, [r3, #24]
		LEDb_OFF();
 800232e:	4a1e      	ldr	r2, [pc, #120]	@ (80023a8 <writeCHARSEG+0x258>)
 8002330:	0289      	lsls	r1, r1, #10
 8002332:	6191      	str	r1, [r2, #24]
		LEDc_ON();
 8002334:	2140      	movs	r1, #64	@ 0x40
 8002336:	6199      	str	r1, [r3, #24]
		LEDd_ON();
 8002338:	3920      	subs	r1, #32
 800233a:	6199      	str	r1, [r3, #24]
		LEDe_ON();
 800233c:	2180      	movs	r1, #128	@ 0x80
 800233e:	0109      	lsls	r1, r1, #4
 8002340:	e7e0      	b.n	8002304 <writeCHARSEG+0x1b4>
		LEDa_ON();
 8002342:	23a0      	movs	r3, #160	@ 0xa0
 8002344:	2280      	movs	r2, #128	@ 0x80
 8002346:	05db      	lsls	r3, r3, #23
 8002348:	e79e      	b.n	8002288 <writeCHARSEG+0x138>
		LEDa_ON();
 800234a:	23a0      	movs	r3, #160	@ 0xa0
 800234c:	2280      	movs	r2, #128	@ 0x80
 800234e:	05db      	lsls	r3, r3, #23
 8002350:	619a      	str	r2, [r3, #24]
		LEDb_ON();
 8002352:	2102      	movs	r1, #2
 8002354:	4a14      	ldr	r2, [pc, #80]	@ (80023a8 <writeCHARSEG+0x258>)
 8002356:	e7ec      	b.n	8002332 <writeCHARSEG+0x1e2>
		LEDa_ON();
 8002358:	23a0      	movs	r3, #160	@ 0xa0
 800235a:	2280      	movs	r2, #128	@ 0x80
		LEDb_ON();
 800235c:	2102      	movs	r1, #2
		LEDa_ON();
 800235e:	05db      	lsls	r3, r3, #23
 8002360:	619a      	str	r2, [r3, #24]
		LEDb_ON();
 8002362:	4a11      	ldr	r2, [pc, #68]	@ (80023a8 <writeCHARSEG+0x258>)
 8002364:	6191      	str	r1, [r2, #24]
		LEDc_ON();
 8002366:	313e      	adds	r1, #62	@ 0x3e
 8002368:	e7d9      	b.n	800231e <writeCHARSEG+0x1ce>
		LEDa_ON();
 800236a:	23a0      	movs	r3, #160	@ 0xa0
 800236c:	2280      	movs	r2, #128	@ 0x80
		LEDb_ON();
 800236e:	2102      	movs	r1, #2
		LEDa_ON();
 8002370:	05db      	lsls	r3, r3, #23
 8002372:	619a      	str	r2, [r3, #24]
		LEDb_ON();
 8002374:	4a0c      	ldr	r2, [pc, #48]	@ (80023a8 <writeCHARSEG+0x258>)
 8002376:	6191      	str	r1, [r2, #24]
		LEDc_OFF();
 8002378:	2180      	movs	r1, #128	@ 0x80
 800237a:	03c9      	lsls	r1, r1, #15
 800237c:	6199      	str	r1, [r3, #24]
		LEDd_OFF();
 800237e:	2180      	movs	r1, #128	@ 0x80
 8002380:	0389      	lsls	r1, r1, #14
 8002382:	6199      	str	r1, [r3, #24]
		LEDe_ON();
 8002384:	2180      	movs	r1, #128	@ 0x80
 8002386:	0109      	lsls	r1, r1, #4
 8002388:	e7bc      	b.n	8002304 <writeCHARSEG+0x1b4>
		LEDa_OFF();
 800238a:	23a0      	movs	r3, #160	@ 0xa0
 800238c:	2280      	movs	r2, #128	@ 0x80
		LEDb_OFF();
 800238e:	2180      	movs	r1, #128	@ 0x80
		LEDa_OFF();
 8002390:	05db      	lsls	r3, r3, #23
 8002392:	0412      	lsls	r2, r2, #16
 8002394:	619a      	str	r2, [r3, #24]
		LEDb_OFF();
 8002396:	4a04      	ldr	r2, [pc, #16]	@ (80023a8 <writeCHARSEG+0x258>)
 8002398:	0289      	lsls	r1, r1, #10
 800239a:	6191      	str	r1, [r2, #24]
		LEDc_OFF();
 800239c:	2180      	movs	r1, #128	@ 0x80
 800239e:	03c9      	lsls	r1, r1, #15
 80023a0:	6199      	str	r1, [r3, #24]
		LEDd_ON();
 80023a2:	2120      	movs	r1, #32
 80023a4:	e712      	b.n	80021cc <writeCHARSEG+0x7c>
 80023a6:	46c0      	nop			@ (mov r8, r8)
 80023a8:	50000400 	.word	0x50000400
 80023ac:	08002fc0 	.word	0x08002fc0

080023b0 <pwmFP7103>:

void pwmFP7103()
{
 80023b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023b2:	46c6      	mov	lr, r8
	if (menu[16].value)
 80023b4:	23a7      	movs	r3, #167	@ 0xa7
{
 80023b6:	b500      	push	{lr}
	if (menu[16].value)
 80023b8:	4e65      	ldr	r6, [pc, #404]	@ (8002550 <pwmFP7103+0x1a0>)
{
 80023ba:	b084      	sub	sp, #16
	if (menu[16].value)
 80023bc:	5cf3      	ldrb	r3, [r6, r3]
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d100      	bne.n	80023c4 <pwmFP7103+0x14>
 80023c2:	e09d      	b.n	8002500 <pwmFP7103+0x150>
	{												 //*16 		P_3.0	Alarm_Status
		uint16_t timeWakeUp = menu[10].value * 3600	 //*10 		P_1.0	Hour_Rise
 80023c4:	236b      	movs	r3, #107	@ 0x6b
							  + menu[11].value * 60; //*11 		P_1.1	Minute_Rise
 80023c6:	25e1      	movs	r5, #225	@ 0xe1
 80023c8:	5cf3      	ldrb	r3, [r6, r3]
 80023ca:	012d      	lsls	r5, r5, #4
 80023cc:	435d      	muls	r5, r3
 80023ce:	2375      	movs	r3, #117	@ 0x75
 80023d0:	213c      	movs	r1, #60	@ 0x3c
 80023d2:	5cf3      	ldrb	r3, [r6, r3]
 80023d4:	434b      	muls	r3, r1
		uint16_t timeWakeUp = menu[10].value * 3600	 //*10 		P_1.0	Hour_Rise
 80023d6:	18ed      	adds	r5, r5, r3
		uint16_t timeNow = (READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU)) * 3600 + (READ_BIT(RTC->TR, RTC_TR_MNT) * 10 + READ_BIT(RTC->TR, RTC_TR_MNU)) * 60 + (READ_BIT(RTC->TR, RTC_TR_ST) * 10 + READ_BIT(RTC->TR, RTC_TR_SU));
 80023d8:	4b5e      	ldr	r3, [pc, #376]	@ (8002554 <pwmFP7103+0x1a4>)
		uint16_t timeWakeUp = menu[10].value * 3600	 //*10 		P_1.0	Hour_Rise
 80023da:	b2ad      	uxth	r5, r5
		uint16_t timeNow = (READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU)) * 3600 + (READ_BIT(RTC->TR, RTC_TR_MNT) * 10 + READ_BIT(RTC->TR, RTC_TR_MNU)) * 60 + (READ_BIT(RTC->TR, RTC_TR_ST) * 10 + READ_BIT(RTC->TR, RTC_TR_SU));
 80023dc:	681a      	ldr	r2, [r3, #0]
 80023de:	681a      	ldr	r2, [r3, #0]
 80023e0:	681c      	ldr	r4, [r3, #0]
 80023e2:	681f      	ldr	r7, [r3, #0]
 80023e4:	6818      	ldr	r0, [r3, #0]
 80023e6:	681a      	ldr	r2, [r3, #0]
 80023e8:	23e0      	movs	r3, #224	@ 0xe0
 80023ea:	01db      	lsls	r3, r3, #7
 80023ec:	4023      	ands	r3, r4
 80023ee:	009c      	lsls	r4, r3, #2
 80023f0:	18e4      	adds	r4, r4, r3
 80023f2:	23f0      	movs	r3, #240	@ 0xf0
 80023f4:	011b      	lsls	r3, r3, #4
 80023f6:	403b      	ands	r3, r7
 80023f8:	0064      	lsls	r4, r4, #1
 80023fa:	18e4      	adds	r4, r4, r3
 80023fc:	2370      	movs	r3, #112	@ 0x70
 80023fe:	4003      	ands	r3, r0
 8002400:	434c      	muls	r4, r1
 8002402:	0099      	lsls	r1, r3, #2
 8002404:	185b      	adds	r3, r3, r1
 8002406:	210f      	movs	r1, #15
 8002408:	005b      	lsls	r3, r3, #1
 800240a:	400a      	ands	r2, r1
 800240c:	189b      	adds	r3, r3, r2
 800240e:	18e4      	adds	r4, r4, r3
		if (menu[13].value * 60 >= timeWakeUp - timeNow)
 8002410:	2389      	movs	r3, #137	@ 0x89
 8002412:	5cf2      	ldrb	r2, [r6, r3]
		uint16_t timeNow = (READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU)) * 3600 + (READ_BIT(RTC->TR, RTC_TR_MNT) * 10 + READ_BIT(RTC->TR, RTC_TR_MNU)) * 60 + (READ_BIT(RTC->TR, RTC_TR_ST) * 10 + READ_BIT(RTC->TR, RTC_TR_SU));
 8002414:	b2a4      	uxth	r4, r4
		if (menu[13].value * 60 >= timeWakeUp - timeNow)
 8002416:	0113      	lsls	r3, r2, #4
 8002418:	1a9b      	subs	r3, r3, r2
 800241a:	009b      	lsls	r3, r3, #2
 800241c:	1b2a      	subs	r2, r5, r4
 800241e:	4293      	cmp	r3, r2
 8002420:	db6a      	blt.n	80024f8 <pwmFP7103+0x148>
		{ // *13 		P_2.0	Period_Rising
			pinEN_ON();
 8002422:	2280      	movs	r2, #128	@ 0x80
 8002424:	4b4c      	ldr	r3, [pc, #304]	@ (8002558 <pwmFP7103+0x1a8>)
 8002426:	0212      	lsls	r2, r2, #8
 8002428:	619a      	str	r2, [r3, #24]
			SET_BIT(TIM21->CR1, TIM_CR1_CEN); // Запуск таймера
 800242a:	4a4c      	ldr	r2, [pc, #304]	@ (800255c <pwmFP7103+0x1ac>)
 800242c:	390e      	subs	r1, #14
 800242e:	6813      	ldr	r3, [r2, #0]
 8002430:	4688      	mov	r8, r1
 8002432:	430b      	orrs	r3, r1
 8002434:	6013      	str	r3, [r2, #0]
			TIM21->CCR1 = custom_floor(TIM2->ARR * custom_pow((1 - timeNow / timeWakeUp), menu[14].value / 100));
 8002436:	2380      	movs	r3, #128	@ 0x80
 8002438:	05db      	lsls	r3, r3, #23
 800243a:	6adf      	ldr	r7, [r3, #44]	@ 0x2c
 800243c:	0038      	movs	r0, r7
 800243e:	f7ff faa7 	bl	8001990 <__aeabi_ui2d>
 8002442:	9002      	str	r0, [sp, #8]
 8002444:	9103      	str	r1, [sp, #12]
 8002446:	0029      	movs	r1, r5
 8002448:	0020      	movs	r0, r4
 800244a:	f7fd fe5d 	bl	8000108 <__udivsi3>
 800244e:	4643      	mov	r3, r8
 8002450:	b280      	uxth	r0, r0
 8002452:	1a18      	subs	r0, r3, r0
 8002454:	f7ff fa6e 	bl	8001934 <__aeabi_i2d>
 8002458:	2393      	movs	r3, #147	@ 0x93
 800245a:	5cf6      	ldrb	r6, [r6, r3]
 800245c:	0004      	movs	r4, r0
 800245e:	000d      	movs	r5, r1
 8002460:	0030      	movs	r0, r6
 8002462:	2164      	movs	r1, #100	@ 0x64
 8002464:	f7fd fe50 	bl	8000108 <__udivsi3>
 8002468:	b2c0      	uxtb	r0, r0
 800246a:	f7ff fa63 	bl	8001934 <__aeabi_i2d>
	double fracPart = x - intPart;	// дробная часть x
 800246e:	0002      	movs	r2, r0
 8002470:	000b      	movs	r3, r1
 8002472:	f7fe fe87 	bl	8001184 <__aeabi_dsub>
 8002476:	9000      	str	r0, [sp, #0]
 8002478:	9101      	str	r1, [sp, #4]
	for (uint16_t i = 0; i < intPart; ++i)
 800247a:	2e63      	cmp	r6, #99	@ 0x63
 800247c:	d95a      	bls.n	8002534 <pwmFP7103+0x184>
 800247e:	2ec7      	cmp	r6, #199	@ 0xc7
 8002480:	d963      	bls.n	800254a <pwmFP7103+0x19a>
		result *= a;
 8002482:	0022      	movs	r2, r4
 8002484:	002b      	movs	r3, r5
 8002486:	0020      	movs	r0, r4
 8002488:	0029      	movs	r1, r5
 800248a:	f7fe fbb3 	bl	8000bf4 <__aeabi_dmul>
 800248e:	0006      	movs	r6, r0
 8002490:	000f      	movs	r7, r1
	if (fracPart > 0.0)
 8002492:	9800      	ldr	r0, [sp, #0]
 8002494:	9901      	ldr	r1, [sp, #4]
 8002496:	2200      	movs	r2, #0
 8002498:	2300      	movs	r3, #0
 800249a:	f7fd feeb 	bl	8000274 <__aeabi_dcmpgt>
 800249e:	2800      	cmp	r0, #0
 80024a0:	d015      	beq.n	80024ce <pwmFP7103+0x11e>
		fractionalMultiplier = 1.0 + fracPart * (a - 1.0); // Пример аппроксимации для дробной части
 80024a2:	2200      	movs	r2, #0
 80024a4:	4b2e      	ldr	r3, [pc, #184]	@ (8002560 <pwmFP7103+0x1b0>)
 80024a6:	0020      	movs	r0, r4
 80024a8:	0029      	movs	r1, r5
 80024aa:	f7fe fe6b 	bl	8001184 <__aeabi_dsub>
 80024ae:	9a00      	ldr	r2, [sp, #0]
 80024b0:	9b01      	ldr	r3, [sp, #4]
 80024b2:	f7fe fb9f 	bl	8000bf4 <__aeabi_dmul>
 80024b6:	2200      	movs	r2, #0
 80024b8:	4b29      	ldr	r3, [pc, #164]	@ (8002560 <pwmFP7103+0x1b0>)
 80024ba:	f7fd ff0d 	bl	80002d8 <__aeabi_dadd>
 80024be:	0002      	movs	r2, r0
 80024c0:	000b      	movs	r3, r1
	return result * fractionalMultiplier;
 80024c2:	0030      	movs	r0, r6
 80024c4:	0039      	movs	r1, r7
 80024c6:	f7fe fb95 	bl	8000bf4 <__aeabi_dmul>
 80024ca:	0006      	movs	r6, r0
 80024cc:	000f      	movs	r7, r1
			TIM21->CCR1 = custom_floor(TIM2->ARR * custom_pow((1 - timeNow / timeWakeUp), menu[14].value / 100));
 80024ce:	9802      	ldr	r0, [sp, #8]
 80024d0:	9903      	ldr	r1, [sp, #12]
 80024d2:	003b      	movs	r3, r7
 80024d4:	0032      	movs	r2, r6
 80024d6:	f7fe fb8d 	bl	8000bf4 <__aeabi_dmul>
 80024da:	0004      	movs	r4, r0
 80024dc:	000d      	movs	r5, r1
	uint32_t result = (uint32_t)x; // Приведення до uint32_t обрізає дробову частину
 80024de:	f7fd fedd 	bl	800029c <__aeabi_d2uiz>
	if (x < 0 && x != result)
 80024e2:	2200      	movs	r2, #0
	uint32_t result = (uint32_t)x; // Приведення до uint32_t обрізає дробову частину
 80024e4:	0007      	movs	r7, r0
	if (x < 0 && x != result)
 80024e6:	2300      	movs	r3, #0
 80024e8:	0020      	movs	r0, r4
 80024ea:	0029      	movs	r1, r5
 80024ec:	f7fd feae 	bl	800024c <__aeabi_dcmplt>
 80024f0:	2800      	cmp	r0, #0
 80024f2:	d110      	bne.n	8002516 <pwmFP7103+0x166>
			TIM21->CCR1 = custom_floor(TIM2->ARR * custom_pow((1 - timeNow / timeWakeUp), menu[14].value / 100));
 80024f4:	4b19      	ldr	r3, [pc, #100]	@ (800255c <pwmFP7103+0x1ac>)
 80024f6:	635f      	str	r7, [r3, #52]	@ 0x34
	{
		pinEN_OFF();
		CLEAR_BIT(TIM21->CR1, TIM_CR1_CEN); // Призупинення таймера
		TIM21->CCR1 = 0;
	}
}
 80024f8:	b004      	add	sp, #16
 80024fa:	bc80      	pop	{r7}
 80024fc:	46b8      	mov	r8, r7
 80024fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
		pinEN_OFF();
 8002500:	2180      	movs	r1, #128	@ 0x80
		CLEAR_BIT(TIM21->CR1, TIM_CR1_CEN); // Призупинення таймера
 8002502:	2001      	movs	r0, #1
		pinEN_OFF();
 8002504:	4a14      	ldr	r2, [pc, #80]	@ (8002558 <pwmFP7103+0x1a8>)
 8002506:	0609      	lsls	r1, r1, #24
 8002508:	6191      	str	r1, [r2, #24]
		CLEAR_BIT(TIM21->CR1, TIM_CR1_CEN); // Призупинення таймера
 800250a:	4a14      	ldr	r2, [pc, #80]	@ (800255c <pwmFP7103+0x1ac>)
 800250c:	6811      	ldr	r1, [r2, #0]
 800250e:	4381      	bics	r1, r0
 8002510:	6011      	str	r1, [r2, #0]
		TIM21->CCR1 = 0;
 8002512:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8002514:	e7f0      	b.n	80024f8 <pwmFP7103+0x148>
	if (x < 0 && x != result)
 8002516:	0038      	movs	r0, r7
 8002518:	f7ff fa3a 	bl	8001990 <__aeabi_ui2d>
 800251c:	000b      	movs	r3, r1
 800251e:	0002      	movs	r2, r0
 8002520:	0029      	movs	r1, r5
 8002522:	0020      	movs	r0, r4
 8002524:	f7fd fe8c 	bl	8000240 <__aeabi_dcmpeq>
		result--; // Якщо x від'ємне і не ціле, округляємо до меншого
 8002528:	4243      	negs	r3, r0
 800252a:	4158      	adcs	r0, r3
			TIM21->CCR1 = custom_floor(TIM2->ARR * custom_pow((1 - timeNow / timeWakeUp), menu[14].value / 100));
 800252c:	4b0b      	ldr	r3, [pc, #44]	@ (800255c <pwmFP7103+0x1ac>)
		result--; // Якщо x від'ємне і не ціле, округляємо до меншого
 800252e:	1a3f      	subs	r7, r7, r0
			TIM21->CCR1 = custom_floor(TIM2->ARR * custom_pow((1 - timeNow / timeWakeUp), menu[14].value / 100));
 8002530:	635f      	str	r7, [r3, #52]	@ 0x34
 8002532:	e7e1      	b.n	80024f8 <pwmFP7103+0x148>
	if (fracPart > 0.0)
 8002534:	2200      	movs	r2, #0
 8002536:	9800      	ldr	r0, [sp, #0]
 8002538:	9901      	ldr	r1, [sp, #4]
 800253a:	2300      	movs	r3, #0
 800253c:	f7fd fe9a 	bl	8000274 <__aeabi_dcmpgt>
 8002540:	2800      	cmp	r0, #0
 8002542:	d0d7      	beq.n	80024f4 <pwmFP7103+0x144>
	double result = 1.0;
 8002544:	2600      	movs	r6, #0
 8002546:	4f06      	ldr	r7, [pc, #24]	@ (8002560 <pwmFP7103+0x1b0>)
 8002548:	e7ab      	b.n	80024a2 <pwmFP7103+0xf2>
		result *= a;
 800254a:	0026      	movs	r6, r4
 800254c:	002f      	movs	r7, r5
 800254e:	e7a0      	b.n	8002492 <pwmFP7103+0xe2>
 8002550:	20000000 	.word	0x20000000
 8002554:	40002800 	.word	0x40002800
 8002558:	50000800 	.word	0x50000800
 800255c:	40010800 	.word	0x40010800
 8002560:	3ff00000 	.word	0x3ff00000

08002564 <Clock>:

uint8_t Clock()
{
 8002564:	b570      	push	{r4, r5, r6, lr}
	char tmpClock[4] = {};
	uint8_t i = 0;
	uint8_t j = 0;
	tmpClock[0] = READ_BIT(RTC->TR, RTC_TR_HT);
 8002566:	4c4d      	ldr	r4, [pc, #308]	@ (800269c <Clock+0x138>)
		j = 1;
	tmpClock[3] = READ_BIT(RTC->TR, RTC_TR_MNU);

	pwmFP7103();
	//	 *23 		P_4.1	Menu_Night_Mode
	if (((READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU) > 5) && (READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU) < 22) && menu[23].value) || flagDecrementButton || flagEnterButton || flagIncrementButton || menu[23].value)
 8002568:	26c0      	movs	r6, #192	@ 0xc0
	tmpClock[0] = READ_BIT(RTC->TR, RTC_TR_HT);
 800256a:	6823      	ldr	r3, [r4, #0]
	tmpClock[1] = READ_BIT(RTC->TR, RTC_TR_HU);
 800256c:	6823      	ldr	r3, [r4, #0]
	tmpClock[2] = READ_BIT(RTC->TR, RTC_TR_MNT);
 800256e:	6823      	ldr	r3, [r4, #0]
	tmpClock[3] = READ_BIT(RTC->TR, RTC_TR_MNU);
 8002570:	6823      	ldr	r3, [r4, #0]
	pwmFP7103();
 8002572:	f7ff ff1d 	bl	80023b0 <pwmFP7103>
	if (((READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU) > 5) && (READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU) < 22) && menu[23].value) || flagDecrementButton || flagEnterButton || flagIncrementButton || menu[23].value)
 8002576:	22ed      	movs	r2, #237	@ 0xed
 8002578:	25f0      	movs	r5, #240	@ 0xf0
 800257a:	6821      	ldr	r1, [r4, #0]
 800257c:	4b48      	ldr	r3, [pc, #288]	@ (80026a0 <Clock+0x13c>)
 800257e:	03b6      	lsls	r6, r6, #14
 8002580:	4031      	ands	r1, r6
 8002582:	6820      	ldr	r0, [r4, #0]
 8002584:	5c9a      	ldrb	r2, [r3, r2]
 8002586:	008b      	lsls	r3, r1, #2
 8002588:	185b      	adds	r3, r3, r1
 800258a:	032d      	lsls	r5, r5, #12
 800258c:	005b      	lsls	r3, r3, #1
 800258e:	4028      	ands	r0, r5
 8002590:	181b      	adds	r3, r3, r0
 8002592:	2b05      	cmp	r3, #5
 8002594:	d923      	bls.n	80025de <Clock+0x7a>
 8002596:	6821      	ldr	r1, [r4, #0]
 8002598:	6820      	ldr	r0, [r4, #0]
 800259a:	4031      	ands	r1, r6
 800259c:	008b      	lsls	r3, r1, #2
 800259e:	185b      	adds	r3, r3, r1
 80025a0:	005b      	lsls	r3, r3, #1
 80025a2:	4028      	ands	r0, r5
 80025a4:	181b      	adds	r3, r3, r0
 80025a6:	2b15      	cmp	r3, #21
 80025a8:	d819      	bhi.n	80025de <Clock+0x7a>
 80025aa:	2a00      	cmp	r2, #0
 80025ac:	d017      	beq.n	80025de <Clock+0x7a>
	{
		if (SysTimer_ms % 4 == 0 && i == 0)
 80025ae:	4b3d      	ldr	r3, [pc, #244]	@ (80026a4 <Clock+0x140>)
 80025b0:	681a      	ldr	r2, [r3, #0]
			writeCHARSEG(tmpClock[0], 0);
		if (SysTimer_ms % 4 == 1)
 80025b2:	2203      	movs	r2, #3
 80025b4:	6819      	ldr	r1, [r3, #0]
 80025b6:	400a      	ands	r2, r1
 80025b8:	2a01      	cmp	r2, #1
 80025ba:	d021      	beq.n	8002600 <Clock+0x9c>
			writeCHARSEG(tmpClock[1], 1);
		if (SysTimer_ms % 4 == 2 && j == 0)
 80025bc:	681a      	ldr	r2, [r3, #0]
			writeCHARSEG(tmpClock[2], 2);
		if (SysTimer_ms % 4 == 3)
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	43db      	mvns	r3, r3
 80025c2:	079b      	lsls	r3, r3, #30
 80025c4:	d045      	beq.n	8002652 <Clock+0xee>
			writeCHARSEG(tmpClock[3], 3);
	}
	return flagDecrementButtonLong || flagEnterButtonLong || flagIncrementButtonLong ? 0 : 1;
 80025c6:	4a38      	ldr	r2, [pc, #224]	@ (80026a8 <Clock+0x144>)
 80025c8:	4b38      	ldr	r3, [pc, #224]	@ (80026ac <Clock+0x148>)
 80025ca:	7810      	ldrb	r0, [r2, #0]
 80025cc:	781b      	ldrb	r3, [r3, #0]
 80025ce:	4318      	orrs	r0, r3
 80025d0:	4b37      	ldr	r3, [pc, #220]	@ (80026b0 <Clock+0x14c>)
 80025d2:	781b      	ldrb	r3, [r3, #0]
 80025d4:	4318      	orrs	r0, r3
 80025d6:	4243      	negs	r3, r0
 80025d8:	4158      	adcs	r0, r3
 80025da:	b2c0      	uxtb	r0, r0
}
 80025dc:	bd70      	pop	{r4, r5, r6, pc}
	if (((READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU) > 5) && (READ_BIT(RTC->TR, RTC_TR_HT) * 10 + READ_BIT(RTC->TR, RTC_TR_HU) < 22) && menu[23].value) || flagDecrementButton || flagEnterButton || flagIncrementButton || menu[23].value)
 80025de:	4b35      	ldr	r3, [pc, #212]	@ (80026b4 <Clock+0x150>)
 80025e0:	781b      	ldrb	r3, [r3, #0]
 80025e2:	431a      	orrs	r2, r3
 80025e4:	4b34      	ldr	r3, [pc, #208]	@ (80026b8 <Clock+0x154>)
 80025e6:	781b      	ldrb	r3, [r3, #0]
 80025e8:	431a      	orrs	r2, r3
 80025ea:	4b34      	ldr	r3, [pc, #208]	@ (80026bc <Clock+0x158>)
 80025ec:	781b      	ldrb	r3, [r3, #0]
 80025ee:	431a      	orrs	r2, r3
 80025f0:	d0e9      	beq.n	80025c6 <Clock+0x62>
		if (SysTimer_ms % 4 == 0 && i == 0)
 80025f2:	4b2c      	ldr	r3, [pc, #176]	@ (80026a4 <Clock+0x140>)
 80025f4:	681a      	ldr	r2, [r3, #0]
		if (SysTimer_ms % 4 == 1)
 80025f6:	2203      	movs	r2, #3
 80025f8:	6819      	ldr	r1, [r3, #0]
 80025fa:	400a      	ands	r2, r1
 80025fc:	2a01      	cmp	r2, #1
 80025fe:	d1dd      	bne.n	80025bc <Clock+0x58>
		LEDD1_OFF();
 8002600:	22a0      	movs	r2, #160	@ 0xa0
 8002602:	2080      	movs	r0, #128	@ 0x80
		LEDD2_ON();
 8002604:	2110      	movs	r1, #16
		LEDD1_OFF();
 8002606:	05d2      	lsls	r2, r2, #23
 8002608:	0300      	lsls	r0, r0, #12
 800260a:	6190      	str	r0, [r2, #24]
		LEDD2_ON();
 800260c:	6191      	str	r1, [r2, #24]
		LEDD3_OFF();
 800260e:	2180      	movs	r1, #128	@ 0x80
		LEDD4_OFF();
 8002610:	2480      	movs	r4, #128	@ 0x80
		LEDD3_OFF();
 8002612:	0549      	lsls	r1, r1, #21
 8002614:	6191      	str	r1, [r2, #24]
		LEDD4_OFF();
 8002616:	492a      	ldr	r1, [pc, #168]	@ (80026c0 <Clock+0x15c>)
 8002618:	0364      	lsls	r4, r4, #13
 800261a:	618c      	str	r4, [r1, #24]
		LEDa_OFF();
 800261c:	2480      	movs	r4, #128	@ 0x80
 800261e:	0424      	lsls	r4, r4, #16
 8002620:	6194      	str	r4, [r2, #24]
		LEDb_OFF();
 8002622:	2480      	movs	r4, #128	@ 0x80
 8002624:	02a4      	lsls	r4, r4, #10
 8002626:	618c      	str	r4, [r1, #24]
		LEDc_OFF();
 8002628:	2480      	movs	r4, #128	@ 0x80
 800262a:	03e4      	lsls	r4, r4, #15
 800262c:	6194      	str	r4, [r2, #24]
		LEDd_OFF();
 800262e:	2480      	movs	r4, #128	@ 0x80
 8002630:	03a4      	lsls	r4, r4, #14
 8002632:	6194      	str	r4, [r2, #24]
		LEDe_OFF();
 8002634:	2480      	movs	r4, #128	@ 0x80
 8002636:	0524      	lsls	r4, r4, #20
 8002638:	6194      	str	r4, [r2, #24]
		LEDf_OFF();
 800263a:	2480      	movs	r4, #128	@ 0x80
 800263c:	04a4      	lsls	r4, r4, #18
 800263e:	6194      	str	r4, [r2, #24]
		LEDg_OFF();
 8002640:	2280      	movs	r2, #128	@ 0x80
 8002642:	0252      	lsls	r2, r2, #9
 8002644:	618a      	str	r2, [r1, #24]
		LEDdp_OFF();
 8002646:	6188      	str	r0, [r1, #24]
		if (SysTimer_ms % 4 == 2 && j == 0)
 8002648:	681a      	ldr	r2, [r3, #0]
		if (SysTimer_ms % 4 == 3)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	43db      	mvns	r3, r3
 800264e:	079b      	lsls	r3, r3, #30
 8002650:	d1b9      	bne.n	80025c6 <Clock+0x62>
		LEDD1_OFF();
 8002652:	23a0      	movs	r3, #160	@ 0xa0
 8002654:	2180      	movs	r1, #128	@ 0x80
		LEDD2_OFF();
 8002656:	2280      	movs	r2, #128	@ 0x80
		LEDD1_OFF();
 8002658:	05db      	lsls	r3, r3, #23
 800265a:	0309      	lsls	r1, r1, #12
		LEDD2_OFF();
 800265c:	0352      	lsls	r2, r2, #13
		LEDD1_OFF();
 800265e:	6199      	str	r1, [r3, #24]
		LEDD2_OFF();
 8002660:	619a      	str	r2, [r3, #24]
		LEDD3_OFF();
 8002662:	2280      	movs	r2, #128	@ 0x80
		LEDD4_ON();
 8002664:	2010      	movs	r0, #16
		LEDD3_OFF();
 8002666:	0552      	lsls	r2, r2, #21
 8002668:	619a      	str	r2, [r3, #24]
		LEDD4_ON();
 800266a:	4a15      	ldr	r2, [pc, #84]	@ (80026c0 <Clock+0x15c>)
 800266c:	6190      	str	r0, [r2, #24]
		LEDa_OFF();
 800266e:	2080      	movs	r0, #128	@ 0x80
 8002670:	0400      	lsls	r0, r0, #16
 8002672:	6198      	str	r0, [r3, #24]
		LEDb_OFF();
 8002674:	2080      	movs	r0, #128	@ 0x80
 8002676:	0280      	lsls	r0, r0, #10
 8002678:	6190      	str	r0, [r2, #24]
		LEDc_OFF();
 800267a:	2080      	movs	r0, #128	@ 0x80
 800267c:	03c0      	lsls	r0, r0, #15
 800267e:	6198      	str	r0, [r3, #24]
		LEDd_OFF();
 8002680:	2080      	movs	r0, #128	@ 0x80
 8002682:	0380      	lsls	r0, r0, #14
 8002684:	6198      	str	r0, [r3, #24]
		LEDe_OFF();
 8002686:	2080      	movs	r0, #128	@ 0x80
 8002688:	0500      	lsls	r0, r0, #20
 800268a:	6198      	str	r0, [r3, #24]
		LEDf_OFF();
 800268c:	2080      	movs	r0, #128	@ 0x80
 800268e:	0480      	lsls	r0, r0, #18
 8002690:	6198      	str	r0, [r3, #24]
		LEDg_OFF();
 8002692:	2380      	movs	r3, #128	@ 0x80
 8002694:	025b      	lsls	r3, r3, #9
 8002696:	6193      	str	r3, [r2, #24]
		LEDdp_OFF();
 8002698:	6191      	str	r1, [r2, #24]
		break;
 800269a:	e794      	b.n	80025c6 <Clock+0x62>
 800269c:	40002800 	.word	0x40002800
 80026a0:	20000000 	.word	0x20000000
 80026a4:	20000154 	.word	0x20000154
 80026a8:	2000015c 	.word	0x2000015c
 80026ac:	2000015b 	.word	0x2000015b
 80026b0:	2000015d 	.word	0x2000015d
 80026b4:	2000015f 	.word	0x2000015f
 80026b8:	2000015e 	.word	0x2000015e
 80026bc:	20000160 	.word	0x20000160
 80026c0:	50000400 	.word	0x50000400

080026c4 <setTimeNow>:

void setTimeNow()
{
 80026c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026c6:	46d6      	mov	lr, sl
 80026c8:	464f      	mov	r7, r9
 80026ca:	4646      	mov	r6, r8
 80026cc:	b5c0      	push	{r6, r7, lr}
	MODIFY_REG(RTC->TR,
 80026ce:	4e3a      	ldr	r6, [pc, #232]	@ (80027b8 <setTimeNow+0xf4>)
 80026d0:	210a      	movs	r1, #10
 80026d2:	7c73      	ldrb	r3, [r6, #17]
 80026d4:	4d39      	ldr	r5, [pc, #228]	@ (80027bc <setTimeNow+0xf8>)
 80026d6:	469a      	mov	sl, r3
 80026d8:	7ef3      	ldrb	r3, [r6, #27]
 80026da:	4650      	mov	r0, sl
 80026dc:	4699      	mov	r9, r3
 80026de:	2325      	movs	r3, #37	@ 0x25
 80026e0:	5cf3      	ldrb	r3, [r6, r3]
 80026e2:	682f      	ldr	r7, [r5, #0]
 80026e4:	4698      	mov	r8, r3
 80026e6:	f7fd fd0f 	bl	8000108 <__udivsi3>
 80026ea:	210a      	movs	r1, #10
 80026ec:	b2c4      	uxtb	r4, r0
 80026ee:	4650      	mov	r0, sl
 80026f0:	f7fd fd90 	bl	8000214 <__aeabi_uidivmod>
 80026f4:	b2c9      	uxtb	r1, r1
 80026f6:	0409      	lsls	r1, r1, #16
 80026f8:	0524      	lsls	r4, r4, #20
 80026fa:	4640      	mov	r0, r8
 80026fc:	430c      	orrs	r4, r1
 80026fe:	210a      	movs	r1, #10
 8002700:	f7fd fd88 	bl	8000214 <__aeabi_uidivmod>
 8002704:	b2c9      	uxtb	r1, r1
 8002706:	4648      	mov	r0, r9
 8002708:	430c      	orrs	r4, r1
 800270a:	210a      	movs	r1, #10
 800270c:	f7fd fcfc 	bl	8000108 <__udivsi3>
 8002710:	b2c0      	uxtb	r0, r0
 8002712:	0300      	lsls	r0, r0, #12
 8002714:	4304      	orrs	r4, r0
 8002716:	210a      	movs	r1, #10
 8002718:	4648      	mov	r0, r9
 800271a:	f7fd fd7b 	bl	8000214 <__aeabi_uidivmod>
 800271e:	b2c9      	uxtb	r1, r1
 8002720:	0209      	lsls	r1, r1, #8
 8002722:	4640      	mov	r0, r8
 8002724:	430c      	orrs	r4, r1
 8002726:	210a      	movs	r1, #10
 8002728:	f7fd fcee 	bl	8000108 <__udivsi3>
 800272c:	4b24      	ldr	r3, [pc, #144]	@ (80027c0 <setTimeNow+0xfc>)
 800272e:	b2c0      	uxtb	r0, r0
 8002730:	401f      	ands	r7, r3
				   (menu[1].value % 10 << RTC_TR_HU_Pos) |	// Hour units (7 -> 17)
				   (menu[2].value / 10 << RTC_TR_MNT_Pos) | // Minute tens (3 -> 36)
				   (menu[2].value % 10 << RTC_TR_MNU_Pos) | // Minute units (6 -> 36)
				   (menu[3].value / 10 << RTC_TR_ST_Pos) |	// Second tens (0 -> 00)
				   (menu[3].value % 10 << RTC_TR_SU_Pos));	// Second units (0 -> 00)
	MODIFY_REG(RTC->DR,
 8002732:	2343      	movs	r3, #67	@ 0x43
	MODIFY_REG(RTC->TR,
 8002734:	0100      	lsls	r0, r0, #4
 8002736:	4304      	orrs	r4, r0
 8002738:	433c      	orrs	r4, r7
 800273a:	602c      	str	r4, [r5, #0]
	MODIFY_REG(RTC->DR,
 800273c:	5cf3      	ldrb	r3, [r6, r3]
 800273e:	210a      	movs	r1, #10
 8002740:	469a      	mov	sl, r3
 8002742:	2339      	movs	r3, #57	@ 0x39
 8002744:	5cf3      	ldrb	r3, [r6, r3]
 8002746:	686f      	ldr	r7, [r5, #4]
 8002748:	4699      	mov	r9, r3
 800274a:	232f      	movs	r3, #47	@ 0x2f
 800274c:	5cf3      	ldrb	r3, [r6, r3]
 800274e:	4698      	mov	r8, r3
 8002750:	234d      	movs	r3, #77	@ 0x4d
 8002752:	4640      	mov	r0, r8
 8002754:	5cf4      	ldrb	r4, [r6, r3]
 8002756:	f7fd fd5d 	bl	8000214 <__aeabi_uidivmod>
 800275a:	0364      	lsls	r4, r4, #13
 800275c:	b2c9      	uxtb	r1, r1
 800275e:	4650      	mov	r0, sl
 8002760:	430c      	orrs	r4, r1
 8002762:	210a      	movs	r1, #10
 8002764:	f7fd fcd0 	bl	8000108 <__udivsi3>
 8002768:	b2c0      	uxtb	r0, r0
 800276a:	0500      	lsls	r0, r0, #20
 800276c:	4304      	orrs	r4, r0
 800276e:	210a      	movs	r1, #10
 8002770:	4650      	mov	r0, sl
 8002772:	f7fd fd4f 	bl	8000214 <__aeabi_uidivmod>
 8002776:	b2c9      	uxtb	r1, r1
 8002778:	0409      	lsls	r1, r1, #16
 800277a:	4648      	mov	r0, r9
 800277c:	430c      	orrs	r4, r1
 800277e:	210a      	movs	r1, #10
 8002780:	f7fd fcc2 	bl	8000108 <__udivsi3>
 8002784:	b2c0      	uxtb	r0, r0
 8002786:	0300      	lsls	r0, r0, #12
 8002788:	4304      	orrs	r4, r0
 800278a:	210a      	movs	r1, #10
 800278c:	4648      	mov	r0, r9
 800278e:	f7fd fd41 	bl	8000214 <__aeabi_uidivmod>
 8002792:	b2c9      	uxtb	r1, r1
 8002794:	0209      	lsls	r1, r1, #8
 8002796:	4640      	mov	r0, r8
 8002798:	430c      	orrs	r4, r1
 800279a:	210a      	movs	r1, #10
 800279c:	f7fd fcb4 	bl	8000108 <__udivsi3>
 80027a0:	4b08      	ldr	r3, [pc, #32]	@ (80027c4 <setTimeNow+0x100>)
 80027a2:	b2c0      	uxtb	r0, r0
 80027a4:	0100      	lsls	r0, r0, #4
 80027a6:	401f      	ands	r7, r3
 80027a8:	4304      	orrs	r4, r0
 80027aa:	433c      	orrs	r4, r7
 80027ac:	606c      	str	r4, [r5, #4]
				   (menu[5].value / 10 << RTC_DR_MT_Pos) | // Month tens (1 -> April)
				   (menu[5].value % 10 << RTC_DR_MU_Pos) | // Month units (0 -> April)
				   (menu[4].value / 10 << RTC_DR_DT_Pos) | // Day tens (0 -> 01)
				   (menu[4].value % 10 << RTC_DR_DU_Pos) | // Day units (1 -> 01)
				   (menu[7].value << RTC_DR_WDU_Pos));	   // Weekday (3 -> Monday)
}
 80027ae:	bce0      	pop	{r5, r6, r7}
 80027b0:	46ba      	mov	sl, r7
 80027b2:	46b1      	mov	r9, r6
 80027b4:	46a8      	mov	r8, r5
 80027b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80027b8:	20000000 	.word	0x20000000
 80027bc:	40002800 	.word	0x40002800
 80027c0:	ffc08080 	.word	0xffc08080
 80027c4:	ff0000c0 	.word	0xff0000c0

080027c8 <getNearMenuIndexByID>:
	}
	return -1;
}

uint8_t getNearMenuIndexByID(int8_t parentid, int8_t id, int8_t side)
{						  // Функція отримання індексу пункту меню наступного або попереднього від актуального
 80027c8:	b5f0      	push	{r4, r5, r6, r7, lr}
	int8_t prevID = -1;	  // Змінна для зберігання індексу попереднього елемента
	int8_t nextID = -1;	  // Змінна для зберігання індексу наступного елемента
	int8_t actualID = -1; // Змінна для зберігання індексу актуального елемента

	int8_t firstID = -1; // Змінна для зберігання індексу першого елемента
	int8_t lastID = -1;	 // Змінна для зберігання індексу останнього елемента
 80027ca:	2601      	movs	r6, #1
{						  // Функція отримання індексу пункту меню наступного або попереднього від актуального
 80027cc:	4647      	mov	r7, r8
 80027ce:	46ce      	mov	lr, r9
	int8_t lastID = -1;	 // Змінна для зберігання індексу останнього елемента
 80027d0:	4276      	negs	r6, r6
{						  // Функція отримання індексу пункту меню наступного або попереднього від актуального
 80027d2:	4690      	mov	r8, r2
 80027d4:	b580      	push	{r7, lr}

	for (uint8_t i = 0; i < menuArraySize; i++)
 80027d6:	2300      	movs	r3, #0
	int8_t firstID = -1; // Змінна для зберігання індексу першого елемента
 80027d8:	0037      	movs	r7, r6
	int8_t actualID = -1; // Змінна для зберігання індексу актуального елемента
 80027da:	0032      	movs	r2, r6
	int8_t nextID = -1;	  // Змінна для зберігання індексу наступного елемента
 80027dc:	46b4      	mov	ip, r6
	int8_t prevID = -1;	  // Змінна для зберігання індексу попереднього елемента
 80027de:	46b1      	mov	r9, r6
 80027e0:	4c1a      	ldr	r4, [pc, #104]	@ (800284c <getNearMenuIndexByID+0x84>)
 80027e2:	e004      	b.n	80027ee <getNearMenuIndexByID+0x26>
	for (uint8_t i = 0; i < menuArraySize; i++)
 80027e4:	3301      	adds	r3, #1
 80027e6:	b2db      	uxtb	r3, r3
 80027e8:	340a      	adds	r4, #10
 80027ea:	2b1d      	cmp	r3, #29
 80027ec:	d016      	beq.n	800281c <getNearMenuIndexByID+0x54>
	{
		if (menu[i].parentid == parentid)
 80027ee:	2501      	movs	r5, #1
 80027f0:	5765      	ldrsb	r5, [r4, r5]
 80027f2:	4285      	cmp	r5, r0
 80027f4:	d1f6      	bne.n	80027e4 <getNearMenuIndexByID+0x1c>
		{ // Перебираємо всі елементи з одним батьківським ID
			if (firstID == -1)
				firstID = i; // Запам'ятовуємо перший елемент списку
 80027f6:	b25e      	sxtb	r6, r3
			if (firstID == -1)
 80027f8:	1c7d      	adds	r5, r7, #1
 80027fa:	d100      	bne.n	80027fe <getNearMenuIndexByID+0x36>
				firstID = i; // Запам'ятовуємо перший елемент списку
 80027fc:	0037      	movs	r7, r6

			if (menu[i].id == id)
 80027fe:	2500      	movs	r5, #0
 8002800:	5765      	ldrsb	r5, [r4, r5]
 8002802:	428d      	cmp	r5, r1
 8002804:	d01b      	beq.n	800283e <getNearMenuIndexByID+0x76>
			{
				actualID = i; // Запам'ятовуємо актуальний елемент списку
			}
			else
			{
				if (actualID == -1)
 8002806:	1c55      	adds	r5, r2, #1
 8002808:	d01b      	beq.n	8002842 <getNearMenuIndexByID+0x7a>
				{ // Якщо зустрівся елемент до актуального, робимо його попереднім
					prevID = i;
				}
				else if (actualID != -1 && nextID == -1)
 800280a:	4665      	mov	r5, ip
 800280c:	3501      	adds	r5, #1
 800280e:	d1e9      	bne.n	80027e4 <getNearMenuIndexByID+0x1c>
	for (uint8_t i = 0; i < menuArraySize; i++)
 8002810:	3301      	adds	r3, #1
 8002812:	b2db      	uxtb	r3, r3
				firstID = i; // Запам'ятовуємо перший елемент списку
 8002814:	46b4      	mov	ip, r6
	for (uint8_t i = 0; i < menuArraySize; i++)
 8002816:	340a      	adds	r4, #10
 8002818:	2b1d      	cmp	r3, #29
 800281a:	d1e8      	bne.n	80027ee <getNearMenuIndexByID+0x26>
			}
			lastID = i; // Кожний наступний елемент - останній
		}
	}

	if (nextID == -1)
 800281c:	4663      	mov	r3, ip
 800281e:	3301      	adds	r3, #1
 8002820:	d100      	bne.n	8002824 <getNearMenuIndexByID+0x5c>
 8002822:	46bc      	mov	ip, r7
		nextID = firstID; // Якщо наступного елемента немає - по колу видаємо перший
	if (prevID == -1)
 8002824:	464b      	mov	r3, r9
 8002826:	3301      	adds	r3, #1
 8002828:	d100      	bne.n	800282c <getNearMenuIndexByID+0x64>
 800282a:	46b1      	mov	r9, r6
		prevID = lastID; // Якщо попереднього елемента немає - по колу видаємо останній
	if (side == -1)
 800282c:	4643      	mov	r3, r8
 800282e:	3301      	adds	r3, #1
 8002830:	d009      	beq.n	8002846 <getNearMenuIndexByID+0x7e>
		return prevID; // В залежності від напрямку обертання, видаємо потрібний індекс
	else
		return nextID;
 8002832:	4663      	mov	r3, ip
 8002834:	b2d8      	uxtb	r0, r3
	return -1;
}
 8002836:	bcc0      	pop	{r6, r7}
 8002838:	46b9      	mov	r9, r7
 800283a:	46b0      	mov	r8, r6
 800283c:	bdf0      	pop	{r4, r5, r6, r7, pc}
				firstID = i; // Запам'ятовуємо перший елемент списку
 800283e:	0032      	movs	r2, r6
 8002840:	e7d0      	b.n	80027e4 <getNearMenuIndexByID+0x1c>
 8002842:	46b1      	mov	r9, r6
			lastID = i; // Кожний наступний елемент - останній
 8002844:	e7ce      	b.n	80027e4 <getNearMenuIndexByID+0x1c>
		return prevID; // В залежності від напрямку обертання, видаємо потрібний індекс
 8002846:	464b      	mov	r3, r9
 8002848:	b2d8      	uxtb	r0, r3
 800284a:	e7f4      	b.n	8002836 <getNearMenuIndexByID+0x6e>
 800284c:	20000000 	.word	0x20000000

08002850 <sound>:
	PlayMusic = 1;
	sound(Music[MusicStep].freq, Music[MusicStep].time);
}

void sound(uint16_t freq, uint16_t time_ms)
{
 8002850:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002852:	46c6      	mov	lr, r8
 8002854:	0004      	movs	r4, r0
 8002856:	000d      	movs	r5, r1
 8002858:	b500      	push	{lr}
	if (freq > 0)
 800285a:	2800      	cmp	r0, #0
 800285c:	d029      	beq.n	80028b2 <sound+0x62>
	{
		TIM2->ARR = SYSCLK / TIM2->PSC / freq;
 800285e:	2680      	movs	r6, #128	@ 0x80
 8002860:	05f6      	lsls	r6, r6, #23
 8002862:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 8002864:	4816      	ldr	r0, [pc, #88]	@ (80028c0 <sound+0x70>)
 8002866:	f7fd fc4f 	bl	8000108 <__udivsi3>
 800286a:	0021      	movs	r1, r4
 800286c:	f7fd fc4c 	bl	8000108 <__udivsi3>
 8002870:	62f0      	str	r0, [r6, #44]	@ 0x2c
		TIM2->CCR1 = TIM2->ARR / 2;
 8002872:	6af3      	ldr	r3, [r6, #44]	@ 0x2c
 8002874:	085b      	lsrs	r3, r3, #1
 8002876:	6373      	str	r3, [r6, #52]	@ 0x34
	else
	{
		TIM2->ARR = 1000;
		TIM2->CCR1 = 0;
	}
	TIM2->CNT = 0;
 8002878:	2480      	movs	r4, #128	@ 0x80
 800287a:	2700      	movs	r7, #0
 800287c:	05e4      	lsls	r4, r4, #23
 800287e:	6267      	str	r7, [r4, #36]	@ 0x24

	sound_time = ((SYSCLK / TIM2->PSC / TIM2->ARR) * time_ms) / 1000;
 8002880:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8002882:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8002884:	480e      	ldr	r0, [pc, #56]	@ (80028c0 <sound+0x70>)
 8002886:	4698      	mov	r8, r3
 8002888:	f7fd fc3e 	bl	8000108 <__udivsi3>
 800288c:	4641      	mov	r1, r8
 800288e:	f7fd fc3b 	bl	8000108 <__udivsi3>
 8002892:	21fa      	movs	r1, #250	@ 0xfa
 8002894:	4368      	muls	r0, r5
 8002896:	0089      	lsls	r1, r1, #2
 8002898:	f7fd fc36 	bl	8000108 <__udivsi3>
	sound_counter = 0;
	SET_BIT(TIM2->CR1, TIM_CR1_CEN); // Запуск таймера;
 800289c:	2201      	movs	r2, #1
	sound_counter = 0;
 800289e:	4b09      	ldr	r3, [pc, #36]	@ (80028c4 <sound+0x74>)
	sound_time = ((SYSCLK / TIM2->PSC / TIM2->ARR) * time_ms) / 1000;
 80028a0:	4e09      	ldr	r6, [pc, #36]	@ (80028c8 <sound+0x78>)
	sound_counter = 0;
 80028a2:	801f      	strh	r7, [r3, #0]
	SET_BIT(TIM2->CR1, TIM_CR1_CEN); // Запуск таймера;
 80028a4:	6823      	ldr	r3, [r4, #0]
	sound_time = ((SYSCLK / TIM2->PSC / TIM2->ARR) * time_ms) / 1000;
 80028a6:	8030      	strh	r0, [r6, #0]
	SET_BIT(TIM2->CR1, TIM_CR1_CEN); // Запуск таймера;
 80028a8:	4313      	orrs	r3, r2
 80028aa:	6023      	str	r3, [r4, #0]
}
 80028ac:	bc80      	pop	{r7}
 80028ae:	46b8      	mov	r8, r7
 80028b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		TIM2->ARR = 1000;
 80028b2:	2380      	movs	r3, #128	@ 0x80
 80028b4:	22fa      	movs	r2, #250	@ 0xfa
 80028b6:	05db      	lsls	r3, r3, #23
 80028b8:	0092      	lsls	r2, r2, #2
 80028ba:	62da      	str	r2, [r3, #44]	@ 0x2c
		TIM2->CCR1 = 0;
 80028bc:	6358      	str	r0, [r3, #52]	@ 0x34
 80028be:	e7db      	b.n	8002878 <sound+0x28>
 80028c0:	01e84800 	.word	0x01e84800
 80028c4:	20000140 	.word	0x20000140
 80028c8:	20000142 	.word	0x20000142

080028cc <setActualMenu>:
{
 80028cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80028ce:	000d      	movs	r5, r1
	if (v != 0)
 80028d0:	2800      	cmp	r0, #0
 80028d2:	d01b      	beq.n	800290c <setActualMenu+0x40>
		if (v == -1)
 80028d4:	3001      	adds	r0, #1
 80028d6:	d03e      	beq.n	8002956 <setActualMenu+0x8a>
			if (menu[actualIndex].isParam && !isParamEditMode)
 80028d8:	4e5a      	ldr	r6, [pc, #360]	@ (8002a44 <setActualMenu+0x178>)
 80028da:	4c5b      	ldr	r4, [pc, #364]	@ (8002a48 <setActualMenu+0x17c>)
 80028dc:	7831      	ldrb	r1, [r6, #0]
 80028de:	008a      	lsls	r2, r1, #2
 80028e0:	1850      	adds	r0, r2, r1
 80028e2:	0040      	lsls	r0, r0, #1
 80028e4:	1823      	adds	r3, r4, r0
 80028e6:	469c      	mov	ip, r3
 80028e8:	789b      	ldrb	r3, [r3, #2]
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d000      	beq.n	80028f0 <setActualMenu+0x24>
 80028ee:	e06e      	b.n	80029ce <setActualMenu+0x102>
					if (menu[i].parentid == menu[actualIndex].id)
 80028f0:	5621      	ldrsb	r1, [r4, r0]
 80028f2:	3401      	adds	r4, #1
 80028f4:	e005      	b.n	8002902 <setActualMenu+0x36>
				for (uint8_t i = 0; i < menuArraySize; i++)
 80028f6:	3301      	adds	r3, #1
 80028f8:	b2db      	uxtb	r3, r3
 80028fa:	340a      	adds	r4, #10
 80028fc:	2b1d      	cmp	r3, #29
 80028fe:	d100      	bne.n	8002902 <setActualMenu+0x36>
 8002900:	e07f      	b.n	8002a02 <setActualMenu+0x136>
					if (menu[i].parentid == menu[actualIndex].id)
 8002902:	2200      	movs	r2, #0
 8002904:	56a2      	ldrsb	r2, [r4, r2]
 8002906:	428a      	cmp	r2, r1
 8002908:	d1f5      	bne.n	80028f6 <setActualMenu+0x2a>
						actualIndex = i; // Якщо є, робимо перший попавшийся актуальним елементом
 800290a:	7033      	strb	r3, [r6, #0]
		if (isParamEditMode)
 800290c:	4b4f      	ldr	r3, [pc, #316]	@ (8002a4c <setActualMenu+0x180>)
 800290e:	781b      	ldrb	r3, [r3, #0]
	if (h != 0)
 8002910:	2d00      	cmp	r5, #0
 8002912:	d10a      	bne.n	800292a <setActualMenu+0x5e>
	if (isParamEditMode)
 8002914:	2b00      	cmp	r3, #0
 8002916:	d149      	bne.n	80029ac <setActualMenu+0xe0>
		return menu[actualIndex]._name;
 8002918:	4b4a      	ldr	r3, [pc, #296]	@ (8002a44 <setActualMenu+0x178>)
 800291a:	4c4b      	ldr	r4, [pc, #300]	@ (8002a48 <setActualMenu+0x17c>)
 800291c:	7818      	ldrb	r0, [r3, #0]
 800291e:	0083      	lsls	r3, r0, #2
 8002920:	181b      	adds	r3, r3, r0
 8002922:	005b      	lsls	r3, r3, #1
 8002924:	3303      	adds	r3, #3
 8002926:	18e0      	adds	r0, r4, r3
}
 8002928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			actualIndex = getNearMenuIndexByID(menu[actualIndex].parentid,
 800292a:	4e46      	ldr	r6, [pc, #280]	@ (8002a44 <setActualMenu+0x178>)
 800292c:	7831      	ldrb	r1, [r6, #0]
		if (isParamEditMode)
 800292e:	2b00      	cmp	r3, #0
 8002930:	d02e      	beq.n	8002990 <setActualMenu+0xc4>
			tmpVal += h; // Змінюємо його значення і ...
 8002932:	4e47      	ldr	r6, [pc, #284]	@ (8002a50 <setActualMenu+0x184>)
 8002934:	4c44      	ldr	r4, [pc, #272]	@ (8002a48 <setActualMenu+0x17c>)
 8002936:	7830      	ldrb	r0, [r6, #0]
 8002938:	008a      	lsls	r2, r1, #2
			if (tmpVal > menu[actualIndex]._max)
 800293a:	1852      	adds	r2, r2, r1
 800293c:	0052      	lsls	r2, r2, #1
 800293e:	18a2      	adds	r2, r4, r2
 8002940:	7a53      	ldrb	r3, [r2, #9]
			tmpVal += h; // Змінюємо його значення і ...
 8002942:	1940      	adds	r0, r0, r5
 8002944:	b2c0      	uxtb	r0, r0
				tmpVal = menu[actualIndex]._min;
 8002946:	7a12      	ldrb	r2, [r2, #8]
			tmpVal += h; // Змінюємо його значення і ...
 8002948:	7030      	strb	r0, [r6, #0]
			if (tmpVal > menu[actualIndex]._max)
 800294a:	4298      	cmp	r0, r3
 800294c:	d84c      	bhi.n	80029e8 <setActualMenu+0x11c>
			if (tmpVal < menu[actualIndex]._min)
 800294e:	4290      	cmp	r0, r2
 8002950:	d276      	bcs.n	8002a40 <setActualMenu+0x174>
				tmpVal = menu[actualIndex]._max;
 8002952:	7033      	strb	r3, [r6, #0]
 8002954:	e02c      	b.n	80029b0 <setActualMenu+0xe4>
			if (isParamEditMode)
 8002956:	4f3d      	ldr	r7, [pc, #244]	@ (8002a4c <setActualMenu+0x180>)
 8002958:	783b      	ldrb	r3, [r7, #0]
 800295a:	2b00      	cmp	r3, #0
 800295c:	d14b      	bne.n	80029f6 <setActualMenu+0x12a>
				if (menu[actualIndex].parentid > 0)
 800295e:	4e39      	ldr	r6, [pc, #228]	@ (8002a44 <setActualMenu+0x178>)
 8002960:	4c39      	ldr	r4, [pc, #228]	@ (8002a48 <setActualMenu+0x17c>)
 8002962:	7831      	ldrb	r1, [r6, #0]
 8002964:	008a      	lsls	r2, r1, #2
 8002966:	1852      	adds	r2, r2, r1
 8002968:	2101      	movs	r1, #1
 800296a:	0052      	lsls	r2, r2, #1
 800296c:	18a2      	adds	r2, r4, r2
 800296e:	5651      	ldrsb	r1, [r2, r1]
 8002970:	2900      	cmp	r1, #0
 8002972:	dc05      	bgt.n	8002980 <setActualMenu+0xb4>
 8002974:	e009      	b.n	800298a <setActualMenu+0xbe>
	for (uint8_t i = 0; i < menuArraySize; i++)
 8002976:	3301      	adds	r3, #1
 8002978:	b2db      	uxtb	r3, r3
 800297a:	340a      	adds	r4, #10
 800297c:	2b1d      	cmp	r3, #29
 800297e:	d05d      	beq.n	8002a3c <setActualMenu+0x170>
		if (menu[i].id == id)
 8002980:	2200      	movs	r2, #0
 8002982:	56a2      	ldrsb	r2, [r4, r2]
 8002984:	428a      	cmp	r2, r1
 8002986:	d1f6      	bne.n	8002976 <setActualMenu+0xaa>
					actualIndex = getMenuIndexByID(menu[actualIndex].parentid);
 8002988:	7033      	strb	r3, [r6, #0]
	if (h != 0)
 800298a:	2d00      	cmp	r5, #0
 800298c:	d037      	beq.n	80029fe <setActualMenu+0x132>
 800298e:	4e2d      	ldr	r6, [pc, #180]	@ (8002a44 <setActualMenu+0x178>)
			actualIndex = getNearMenuIndexByID(menu[actualIndex].parentid,
 8002990:	2001      	movs	r0, #1
 8002992:	7832      	ldrb	r2, [r6, #0]
 8002994:	4c2c      	ldr	r4, [pc, #176]	@ (8002a48 <setActualMenu+0x17c>)
 8002996:	0093      	lsls	r3, r2, #2
 8002998:	189b      	adds	r3, r3, r2
 800299a:	005b      	lsls	r3, r3, #1
 800299c:	56e1      	ldrsb	r1, [r4, r3]
 800299e:	18e3      	adds	r3, r4, r3
 80029a0:	5618      	ldrsb	r0, [r3, r0]
 80029a2:	002a      	movs	r2, r5
 80029a4:	f7ff ff10 	bl	80027c8 <getNearMenuIndexByID>
 80029a8:	7030      	strb	r0, [r6, #0]
	if (isParamEditMode)
 80029aa:	e7b8      	b.n	800291e <setActualMenu+0x52>
 80029ac:	4e28      	ldr	r6, [pc, #160]	@ (8002a50 <setActualMenu+0x184>)
		tmpV[0] = intToChar(tmpVal / 1000);
 80029ae:	7833      	ldrb	r3, [r6, #0]
 80029b0:	4828      	ldr	r0, [pc, #160]	@ (8002a54 <setActualMenu+0x188>)
 80029b2:	4a29      	ldr	r2, [pc, #164]	@ (8002a58 <setActualMenu+0x18c>)
		tmpV[3] = intToChar(tmpVal - tmpV[0] * 1000 - tmpV[1] * 100 - tmpV[2] * 10);
 80029b4:	213f      	movs	r1, #63	@ 0x3f
		tmpV[0] = intToChar(tmpVal / 1000);
 80029b6:	8002      	strh	r2, [r0, #0]
		tmpV[2] = intToChar(tmpVal / 10 - tmpV[0] * 100 - tmpV[1] * 10);
 80029b8:	223f      	movs	r2, #63	@ 0x3f
 80029ba:	7082      	strb	r2, [r0, #2]
		tmpV[3] = intToChar(tmpVal - tmpV[0] * 1000 - tmpV[1] * 100 - tmpV[2] * 10);
 80029bc:	001a      	movs	r2, r3
 80029be:	326e      	adds	r2, #110	@ 0x6e
 80029c0:	b2d2      	uxtb	r2, r2
 80029c2:	2a09      	cmp	r2, #9
 80029c4:	d801      	bhi.n	80029ca <setActualMenu+0xfe>
 80029c6:	3b62      	subs	r3, #98	@ 0x62
 80029c8:	b2d9      	uxtb	r1, r3
 80029ca:	70c1      	strb	r1, [r0, #3]
		return tmpV;
 80029cc:	e7ac      	b.n	8002928 <setActualMenu+0x5c>
			if (menu[actualIndex].isParam && !isParamEditMode)
 80029ce:	4f1f      	ldr	r7, [pc, #124]	@ (8002a4c <setActualMenu+0x180>)
 80029d0:	783b      	ldrb	r3, [r7, #0]
 80029d2:	2b00      	cmp	r3, #0
 80029d4:	d10b      	bne.n	80029ee <setActualMenu+0x122>
				isParamEditMode = true;			  // Переходимо в режим редагування параметра
 80029d6:	3301      	adds	r3, #1
 80029d8:	703b      	strb	r3, [r7, #0]
				tmpVal = menu[actualIndex].value; // Тимчасовій змінній присвоюємо актуальне значення параметра
 80029da:	4663      	mov	r3, ip
 80029dc:	4e1c      	ldr	r6, [pc, #112]	@ (8002a50 <setActualMenu+0x184>)
 80029de:	79d8      	ldrb	r0, [r3, #7]
 80029e0:	7030      	strb	r0, [r6, #0]
	if (h != 0)
 80029e2:	2d00      	cmp	r5, #0
 80029e4:	d1a9      	bne.n	800293a <setActualMenu+0x6e>
 80029e6:	e7e2      	b.n	80029ae <setActualMenu+0xe2>
				tmpVal = menu[actualIndex]._min;
 80029e8:	0013      	movs	r3, r2
 80029ea:	7032      	strb	r2, [r6, #0]
			if (tmpVal < menu[actualIndex]._min)
 80029ec:	e7e0      	b.n	80029b0 <setActualMenu+0xe4>
				menu[actualIndex].value = tmpVal; // Зберігаємо задане значення
 80029ee:	4662      	mov	r2, ip
 80029f0:	4e17      	ldr	r6, [pc, #92]	@ (8002a50 <setActualMenu+0x184>)
 80029f2:	7833      	ldrb	r3, [r6, #0]
 80029f4:	71d3      	strb	r3, [r2, #7]
				isParamEditMode = false;		  // І виходимо з режиму редагування
 80029f6:	2300      	movs	r3, #0
 80029f8:	703b      	strb	r3, [r7, #0]
	if (h != 0)
 80029fa:	2d00      	cmp	r5, #0
 80029fc:	d1c7      	bne.n	800298e <setActualMenu+0xc2>
	if (isParamEditMode)
 80029fe:	783b      	ldrb	r3, [r7, #0]
 8002a00:	e788      	b.n	8002914 <setActualMenu+0x48>
					switch (menu[actualIndex].id)
 8002a02:	290d      	cmp	r1, #13
 8002a04:	d00e      	beq.n	8002a24 <setActualMenu+0x158>
 8002a06:	2911      	cmp	r1, #17
 8002a08:	d007      	beq.n	8002a1a <setActualMenu+0x14e>
 8002a0a:	2904      	cmp	r1, #4
 8002a0c:	d000      	beq.n	8002a10 <setActualMenu+0x144>
 8002a0e:	e77d      	b.n	800290c <setActualMenu+0x40>
						setTimeNow();
 8002a10:	f7ff fe58 	bl	80026c4 <setTimeNow>
						break;
 8002a14:	e77a      	b.n	800290c <setActualMenu+0x40>
							Clock();
 8002a16:	f7ff fda5 	bl	8002564 <Clock>
						while (Clock())
 8002a1a:	f7ff fda3 	bl	8002564 <Clock>
 8002a1e:	2800      	cmp	r0, #0
 8002a20:	d1f9      	bne.n	8002a16 <setActualMenu+0x14a>
 8002a22:	e773      	b.n	800290c <setActualMenu+0x40>
	MusicStep = 0;
 8002a24:	2200      	movs	r2, #0
	sound(Music[MusicStep].freq, Music[MusicStep].time);
 8002a26:	21fa      	movs	r1, #250	@ 0xfa
	MusicStep = 0;
 8002a28:	4b0c      	ldr	r3, [pc, #48]	@ (8002a5c <setActualMenu+0x190>)
	sound(Music[MusicStep].freq, Music[MusicStep].time);
 8002a2a:	480d      	ldr	r0, [pc, #52]	@ (8002a60 <setActualMenu+0x194>)
	MusicStep = 0;
 8002a2c:	801a      	strh	r2, [r3, #0]
	PlayMusic = 1;
 8002a2e:	4b0d      	ldr	r3, [pc, #52]	@ (8002a64 <setActualMenu+0x198>)
 8002a30:	3201      	adds	r2, #1
	sound(Music[MusicStep].freq, Music[MusicStep].time);
 8002a32:	0049      	lsls	r1, r1, #1
	PlayMusic = 1;
 8002a34:	701a      	strb	r2, [r3, #0]
	sound(Music[MusicStep].freq, Music[MusicStep].time);
 8002a36:	f7ff ff0b 	bl	8002850 <sound>
}
 8002a3a:	e767      	b.n	800290c <setActualMenu+0x40>
	return -1;
 8002a3c:	33e2      	adds	r3, #226	@ 0xe2
 8002a3e:	e7a3      	b.n	8002988 <setActualMenu+0xbc>
 8002a40:	0003      	movs	r3, r0
	if (isParamEditMode)
 8002a42:	e7b5      	b.n	80029b0 <setActualMenu+0xe4>
 8002a44:	2000015a 	.word	0x2000015a
 8002a48:	20000000 	.word	0x20000000
 8002a4c:	20000159 	.word	0x20000159
 8002a50:	20000158 	.word	0x20000158
 8002a54:	2000014c 	.word	0x2000014c
 8002a58:	00003f30 	.word	0x00003f30
 8002a5c:	20000146 	.word	0x20000146
 8002a60:	0000020a 	.word	0x0000020a
 8002a64:	20000144 	.word	0x20000144

08002a68 <main>:
{
 8002a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a6a:	46de      	mov	lr, fp
 8002a6c:	4657      	mov	r7, sl
 8002a6e:	464e      	mov	r6, r9
 8002a70:	4645      	mov	r5, r8
 8002a72:	b5e0      	push	{r5, r6, r7, lr}
 8002a74:	b08b      	sub	sp, #44	@ 0x2c
	CMSIS_FullInit(); // 1ms
 8002a76:	f7fe ffcd 	bl	8001a14 <CMSIS_FullInit>
	SystemClock_Config();
 8002a7a:	f7fe fffb 	bl	8001a74 <SystemClock_Config>
	GPIO_Init();
 8002a7e:	f7ff f9cd 	bl	8001e1c <GPIO_Init>
	RTC_Init();
 8002a82:	f7ff f879 	bl	8001b78 <RTC_Init>
	TIM2_Init();
 8002a86:	f7ff f8c9 	bl	8001c1c <TIM2_Init>
	TIM21_Init();
 8002a8a:	f7ff f947 	bl	8001d1c <TIM21_Init>
	writeCHARSEG(' ', ' ');
 8002a8e:	2120      	movs	r1, #32
 8002a90:	2020      	movs	r0, #32
 8002a92:	f7ff fb5d 	bl	8002150 <writeCHARSEG>
	pinEN_OFF();
 8002a96:	2280      	movs	r2, #128	@ 0x80
 8002a98:	4b65      	ldr	r3, [pc, #404]	@ (8002c30 <main+0x1c8>)
 8002a9a:	0612      	lsls	r2, r2, #24
 8002a9c:	619a      	str	r2, [r3, #24]
	tmpValue = setActualMenu(0, 0);
 8002a9e:	2100      	movs	r1, #0
 8002aa0:	2000      	movs	r0, #0
 8002aa2:	f7ff ff13 	bl	80028cc <setActualMenu>
		if (((SysTimer_ms - DecrementButtonDebounce) > menu[26].value) && (READ_BIT(EXTI->IMR, EXTI_IMR_IM0) == 0))
 8002aa6:	4b63      	ldr	r3, [pc, #396]	@ (8002c34 <main+0x1cc>)
		if (SysTimer_ms % 4 == 0)
 8002aa8:	2503      	movs	r5, #3
		if (((SysTimer_ms - DecrementButtonDebounce) > menu[26].value) && (READ_BIT(EXTI->IMR, EXTI_IMR_IM0) == 0))
 8002aaa:	001a      	movs	r2, r3
 8002aac:	9309      	str	r3, [sp, #36]	@ 0x24
 8002aae:	230c      	movs	r3, #12
	tmpValue = setActualMenu(0, 0);
 8002ab0:	9002      	str	r0, [sp, #8]
		if (((SysTimer_ms - DecrementButtonDebounce) > menu[26].value) && (READ_BIT(EXTI->IMR, EXTI_IMR_IM0) == 0))
 8002ab2:	33ff      	adds	r3, #255	@ 0xff
 8002ab4:	5cd6      	ldrb	r6, [r2, r3]
 8002ab6:	4b60      	ldr	r3, [pc, #384]	@ (8002c38 <main+0x1d0>)
 8002ab8:	4c60      	ldr	r4, [pc, #384]	@ (8002c3c <main+0x1d4>)
 8002aba:	469b      	mov	fp, r3
 8002abc:	4b60      	ldr	r3, [pc, #384]	@ (8002c40 <main+0x1d8>)
 8002abe:	4f61      	ldr	r7, [pc, #388]	@ (8002c44 <main+0x1dc>)
 8002ac0:	469a      	mov	sl, r3
 8002ac2:	4b61      	ldr	r3, [pc, #388]	@ (8002c48 <main+0x1e0>)
 8002ac4:	4699      	mov	r9, r3
 8002ac6:	4b61      	ldr	r3, [pc, #388]	@ (8002c4c <main+0x1e4>)
 8002ac8:	9304      	str	r3, [sp, #16]
 8002aca:	4b61      	ldr	r3, [pc, #388]	@ (8002c50 <main+0x1e8>)
 8002acc:	4698      	mov	r8, r3
 8002ace:	4b61      	ldr	r3, [pc, #388]	@ (8002c54 <main+0x1ec>)
 8002ad0:	9305      	str	r3, [sp, #20]
 8002ad2:	4b61      	ldr	r3, [pc, #388]	@ (8002c58 <main+0x1f0>)
 8002ad4:	9306      	str	r3, [sp, #24]
 8002ad6:	4b61      	ldr	r3, [pc, #388]	@ (8002c5c <main+0x1f4>)
 8002ad8:	9307      	str	r3, [sp, #28]
 8002ada:	4b61      	ldr	r3, [pc, #388]	@ (8002c60 <main+0x1f8>)
 8002adc:	9303      	str	r3, [sp, #12]
 8002ade:	4b61      	ldr	r3, [pc, #388]	@ (8002c64 <main+0x1fc>)
 8002ae0:	9308      	str	r3, [sp, #32]
 8002ae2:	4b61      	ldr	r3, [pc, #388]	@ (8002c68 <main+0x200>)
 8002ae4:	9301      	str	r3, [sp, #4]
 8002ae6:	465a      	mov	r2, fp
 8002ae8:	6823      	ldr	r3, [r4, #0]
 8002aea:	6812      	ldr	r2, [r2, #0]
 8002aec:	1a9b      	subs	r3, r3, r2
 8002aee:	42b3      	cmp	r3, r6
 8002af0:	d906      	bls.n	8002b00 <main+0x98>
 8002af2:	2201      	movs	r2, #1
 8002af4:	683b      	ldr	r3, [r7, #0]
 8002af6:	421a      	tst	r2, r3
 8002af8:	d102      	bne.n	8002b00 <main+0x98>
			SET_BIT(EXTI->IMR, EXTI_IMR_IM0);
 8002afa:	683b      	ldr	r3, [r7, #0]
 8002afc:	4313      	orrs	r3, r2
 8002afe:	603b      	str	r3, [r7, #0]
		if (((SysTimer_ms - EnterButtonDebounce) > menu[26].value) && (READ_BIT(EXTI->IMR, EXTI_IMR_IM1) == 0))
 8002b00:	4652      	mov	r2, sl
 8002b02:	6823      	ldr	r3, [r4, #0]
 8002b04:	6812      	ldr	r2, [r2, #0]
 8002b06:	1a9b      	subs	r3, r3, r2
 8002b08:	429e      	cmp	r6, r3
 8002b0a:	d206      	bcs.n	8002b1a <main+0xb2>
 8002b0c:	2302      	movs	r3, #2
 8002b0e:	683a      	ldr	r2, [r7, #0]
 8002b10:	4213      	tst	r3, r2
 8002b12:	d102      	bne.n	8002b1a <main+0xb2>
			SET_BIT(EXTI->IMR, EXTI_IMR_IM1);
 8002b14:	683a      	ldr	r2, [r7, #0]
 8002b16:	4313      	orrs	r3, r2
 8002b18:	603b      	str	r3, [r7, #0]
		if (((SysTimer_ms - IncrementButtonDebounce) > menu[26].value) && (READ_BIT(EXTI->IMR, EXTI_IMR_IM2) == 0))
 8002b1a:	464a      	mov	r2, r9
 8002b1c:	6823      	ldr	r3, [r4, #0]
 8002b1e:	6812      	ldr	r2, [r2, #0]
 8002b20:	1a9b      	subs	r3, r3, r2
 8002b22:	429e      	cmp	r6, r3
 8002b24:	d206      	bcs.n	8002b34 <main+0xcc>
 8002b26:	2304      	movs	r3, #4
 8002b28:	683a      	ldr	r2, [r7, #0]
 8002b2a:	4213      	tst	r3, r2
 8002b2c:	d102      	bne.n	8002b34 <main+0xcc>
			SET_BIT(EXTI->IMR, EXTI_IMR_IM2);
 8002b2e:	683a      	ldr	r2, [r7, #0]
 8002b30:	4313      	orrs	r3, r2
 8002b32:	603b      	str	r3, [r7, #0]
		if (flagDecrementButton)
 8002b34:	9a04      	ldr	r2, [sp, #16]
 8002b36:	7813      	ldrb	r3, [r2, #0]
 8002b38:	2b00      	cmp	r3, #0
 8002b3a:	d004      	beq.n	8002b46 <main+0xde>
			hmenu = 1;
 8002b3c:	4643      	mov	r3, r8
 8002b3e:	2101      	movs	r1, #1
 8002b40:	7019      	strb	r1, [r3, #0]
			flagDecrementButton = false; // Действие обработано - сбрасываем флаг
 8002b42:	2300      	movs	r3, #0
 8002b44:	7013      	strb	r3, [r2, #0]
		if (flagDecrementButtonLong)
 8002b46:	9a05      	ldr	r2, [sp, #20]
 8002b48:	7813      	ldrb	r3, [r2, #0]
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	d001      	beq.n	8002b52 <main+0xea>
			flagDecrementButtonLong = false; // Действие обработано - сбрасываем флаг
 8002b4e:	2300      	movs	r3, #0
 8002b50:	7013      	strb	r3, [r2, #0]
		if (flagIncrementButton)
 8002b52:	9a06      	ldr	r2, [sp, #24]
 8002b54:	7813      	ldrb	r3, [r2, #0]
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d004      	beq.n	8002b64 <main+0xfc>
			hmenu = -1;
 8002b5a:	23ff      	movs	r3, #255	@ 0xff
 8002b5c:	4641      	mov	r1, r8
 8002b5e:	700b      	strb	r3, [r1, #0]
			flagIncrementButton = false; // Действие обработано - сбрасываем флаг
 8002b60:	2300      	movs	r3, #0
 8002b62:	7013      	strb	r3, [r2, #0]
		if (flagIncrementButtonLong)
 8002b64:	9a07      	ldr	r2, [sp, #28]
 8002b66:	7813      	ldrb	r3, [r2, #0]
 8002b68:	2b00      	cmp	r3, #0
 8002b6a:	d001      	beq.n	8002b70 <main+0x108>
			flagIncrementButtonLong = false; // Действие обработано - сбрасываем флаг
 8002b6c:	2300      	movs	r3, #0
 8002b6e:	7013      	strb	r3, [r2, #0]
		if (flagEnterButton)
 8002b70:	9908      	ldr	r1, [sp, #32]
		if (flagEnterButtonLong)
 8002b72:	9b03      	ldr	r3, [sp, #12]
		if (flagEnterButton)
 8002b74:	780a      	ldrb	r2, [r1, #0]
		if (flagEnterButtonLong)
 8002b76:	781b      	ldrb	r3, [r3, #0]
		if (flagEnterButton)
 8002b78:	2a00      	cmp	r2, #0
 8002b7a:	d02d      	beq.n	8002bd8 <main+0x170>
			vmenu = 1;				 // По нажатию кнопки - переходим на уровень вниз
 8002b7c:	2001      	movs	r0, #1
 8002b7e:	9a01      	ldr	r2, [sp, #4]
 8002b80:	7010      	strb	r0, [r2, #0]
			flagEnterButton = false; // Действие обработано - сбрасываем флаг
 8002b82:	2200      	movs	r2, #0
 8002b84:	700a      	strb	r2, [r1, #0]
		if (flagEnterButtonLong)
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d04c      	beq.n	8002c24 <main+0x1bc>
			vmenu = -1;
 8002b8a:	23ff      	movs	r3, #255	@ 0xff
 8002b8c:	9a01      	ldr	r2, [sp, #4]
		if (vmenu != 0 || hmenu != 0)
 8002b8e:	2100      	movs	r1, #0
			vmenu = -1;
 8002b90:	7013      	strb	r3, [r2, #0]
			flagEnterButtonLong = false; // Действие обработано - сбрасываем флаг
 8002b92:	2300      	movs	r3, #0
 8002b94:	9a03      	ldr	r2, [sp, #12]
		if (vmenu != 0 || hmenu != 0)
 8002b96:	2001      	movs	r0, #1
			flagEnterButtonLong = false; // Действие обработано - сбрасываем флаг
 8002b98:	7013      	strb	r3, [r2, #0]
		if (vmenu != 0 || hmenu != 0)
 8002b9a:	4643      	mov	r3, r8
 8002b9c:	5659      	ldrsb	r1, [r3, r1]
 8002b9e:	4240      	negs	r0, r0
			tmpValue = setActualMenu(vmenu, hmenu); // Если было действие - реагируем на него
 8002ba0:	f7ff fe94 	bl	80028cc <setActualMenu>
		if (((SysTimer_ms - DecrementButtonDebounce) > menu[26].value) && (READ_BIT(EXTI->IMR, EXTI_IMR_IM0) == 0))
 8002ba4:	230c      	movs	r3, #12
 8002ba6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002ba8:	33ff      	adds	r3, #255	@ 0xff
			tmpValue = setActualMenu(vmenu, hmenu); // Если было действие - реагируем на него
 8002baa:	9002      	str	r0, [sp, #8]
		if (((SysTimer_ms - DecrementButtonDebounce) > menu[26].value) && (READ_BIT(EXTI->IMR, EXTI_IMR_IM0) == 0))
 8002bac:	5cd6      	ldrb	r6, [r2, r3]
		if (SysTimer_ms % 4 == 0)
 8002bae:	6823      	ldr	r3, [r4, #0]
 8002bb0:	421d      	tst	r5, r3
 8002bb2:	d01f      	beq.n	8002bf4 <main+0x18c>
		if (SysTimer_ms % 4 == 1)
 8002bb4:	6823      	ldr	r3, [r4, #0]
 8002bb6:	402b      	ands	r3, r5
 8002bb8:	2b01      	cmp	r3, #1
 8002bba:	d024      	beq.n	8002c06 <main+0x19e>
		if (SysTimer_ms % 4 == 2)
 8002bbc:	6823      	ldr	r3, [r4, #0]
 8002bbe:	402b      	ands	r3, r5
 8002bc0:	2b02      	cmp	r3, #2
 8002bc2:	d029      	beq.n	8002c18 <main+0x1b0>
		if (SysTimer_ms % 4 == 3)
 8002bc4:	6823      	ldr	r3, [r4, #0]
 8002bc6:	402b      	ands	r3, r5
 8002bc8:	2b03      	cmp	r3, #3
 8002bca:	d18c      	bne.n	8002ae6 <main+0x7e>
			writeCHARSEG(tmpValue[3], 3);
 8002bcc:	9b02      	ldr	r3, [sp, #8]
 8002bce:	2103      	movs	r1, #3
 8002bd0:	78d8      	ldrb	r0, [r3, #3]
 8002bd2:	f7ff fabd 	bl	8002150 <writeCHARSEG>
 8002bd6:	e786      	b.n	8002ae6 <main+0x7e>
		if (flagEnterButtonLong)
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d1d6      	bne.n	8002b8a <main+0x122>
		if (vmenu != 0 || hmenu != 0)
 8002bdc:	2000      	movs	r0, #0
 8002bde:	9b01      	ldr	r3, [sp, #4]
 8002be0:	2100      	movs	r1, #0
 8002be2:	5618      	ldrsb	r0, [r3, r0]
 8002be4:	4643      	mov	r3, r8
 8002be6:	5659      	ldrsb	r1, [r3, r1]
 8002be8:	0003      	movs	r3, r0
 8002bea:	430b      	orrs	r3, r1
 8002bec:	d1d8      	bne.n	8002ba0 <main+0x138>
		if (SysTimer_ms % 4 == 0)
 8002bee:	6823      	ldr	r3, [r4, #0]
 8002bf0:	421d      	tst	r5, r3
 8002bf2:	d1df      	bne.n	8002bb4 <main+0x14c>
			writeCHARSEG(tmpValue[0], 0);
 8002bf4:	9b02      	ldr	r3, [sp, #8]
 8002bf6:	2100      	movs	r1, #0
 8002bf8:	7818      	ldrb	r0, [r3, #0]
 8002bfa:	f7ff faa9 	bl	8002150 <writeCHARSEG>
		if (SysTimer_ms % 4 == 1)
 8002bfe:	6823      	ldr	r3, [r4, #0]
 8002c00:	402b      	ands	r3, r5
 8002c02:	2b01      	cmp	r3, #1
 8002c04:	d1da      	bne.n	8002bbc <main+0x154>
			writeCHARSEG(tmpValue[1], 1);
 8002c06:	9b02      	ldr	r3, [sp, #8]
 8002c08:	2101      	movs	r1, #1
 8002c0a:	7858      	ldrb	r0, [r3, #1]
 8002c0c:	f7ff faa0 	bl	8002150 <writeCHARSEG>
		if (SysTimer_ms % 4 == 2)
 8002c10:	6823      	ldr	r3, [r4, #0]
 8002c12:	402b      	ands	r3, r5
 8002c14:	2b02      	cmp	r3, #2
 8002c16:	d1d5      	bne.n	8002bc4 <main+0x15c>
			writeCHARSEG(tmpValue[2], 2);
 8002c18:	9b02      	ldr	r3, [sp, #8]
 8002c1a:	2102      	movs	r1, #2
 8002c1c:	7898      	ldrb	r0, [r3, #2]
 8002c1e:	f7ff fa97 	bl	8002150 <writeCHARSEG>
 8002c22:	e7cf      	b.n	8002bc4 <main+0x15c>
		if (vmenu != 0 || hmenu != 0)
 8002c24:	4643      	mov	r3, r8
 8002c26:	2100      	movs	r1, #0
 8002c28:	2001      	movs	r0, #1
 8002c2a:	5659      	ldrsb	r1, [r3, r1]
 8002c2c:	e7b8      	b.n	8002ba0 <main+0x138>
 8002c2e:	46c0      	nop			@ (mov r8, r8)
 8002c30:	50000800 	.word	0x50000800
 8002c34:	20000000 	.word	0x20000000
 8002c38:	20000168 	.word	0x20000168
 8002c3c:	20000154 	.word	0x20000154
 8002c40:	20000164 	.word	0x20000164
 8002c44:	40010400 	.word	0x40010400
 8002c48:	2000016c 	.word	0x2000016c
 8002c4c:	2000015f 	.word	0x2000015f
 8002c50:	20000148 	.word	0x20000148
 8002c54:	2000015c 	.word	0x2000015c
 8002c58:	20000160 	.word	0x20000160
 8002c5c:	2000015d 	.word	0x2000015d
 8002c60:	2000015b 	.word	0x2000015b
 8002c64:	2000015e 	.word	0x2000015e
 8002c68:	20000149 	.word	0x20000149

08002c6c <SysTick_Handler>:
/* Handlers--------------------------------------------------------*/
void SysTick_Handler(void)
{
	SysTimer_ms++;
 8002c6c:	4a06      	ldr	r2, [pc, #24]	@ (8002c88 <SysTick_Handler+0x1c>)
 8002c6e:	6813      	ldr	r3, [r2, #0]
 8002c70:	3301      	adds	r3, #1
 8002c72:	6013      	str	r3, [r2, #0]
	if (Delay_counter_ms)
 8002c74:	4b05      	ldr	r3, [pc, #20]	@ (8002c8c <SysTick_Handler+0x20>)
 8002c76:	881a      	ldrh	r2, [r3, #0]
 8002c78:	2a00      	cmp	r2, #0
 8002c7a:	d003      	beq.n	8002c84 <SysTick_Handler+0x18>
	{
		Delay_counter_ms--;
 8002c7c:	881a      	ldrh	r2, [r3, #0]
 8002c7e:	3a01      	subs	r2, #1
 8002c80:	b292      	uxth	r2, r2
 8002c82:	801a      	strh	r2, [r3, #0]
	}
}
 8002c84:	4770      	bx	lr
 8002c86:	46c0      	nop			@ (mov r8, r8)
 8002c88:	20000154 	.word	0x20000154
 8002c8c:	20000150 	.word	0x20000150

08002c90 <EXTI0_1_IRQHandler>:

void EXTI0_1_IRQHandler(void)
{
	// Перевірка для DecrementButton (EXTI3)
	if (EXTI->PR & EXTI_PR_PR0)
 8002c90:	2201      	movs	r2, #1
 8002c92:	4b3c      	ldr	r3, [pc, #240]	@ (8002d84 <EXTI0_1_IRQHandler+0xf4>)
{
 8002c94:	b510      	push	{r4, lr}
	if (EXTI->PR & EXTI_PR_PR0)
 8002c96:	6959      	ldr	r1, [r3, #20]
 8002c98:	420a      	tst	r2, r1
 8002c9a:	d017      	beq.n	8002ccc <EXTI0_1_IRQHandler+0x3c>
	{
		CLEAR_BIT(EXTI->IMR, EXTI_IMR_IM0);
 8002c9c:	6819      	ldr	r1, [r3, #0]
		DecrementButtonDebounce = SysTimer_ms;
 8002c9e:	483a      	ldr	r0, [pc, #232]	@ (8002d88 <EXTI0_1_IRQHandler+0xf8>)
		CLEAR_BIT(EXTI->IMR, EXTI_IMR_IM0);
 8002ca0:	4391      	bics	r1, r2
 8002ca2:	6019      	str	r1, [r3, #0]
		DecrementButtonDebounce = SysTimer_ms;
 8002ca4:	4939      	ldr	r1, [pc, #228]	@ (8002d8c <EXTI0_1_IRQHandler+0xfc>)
 8002ca6:	680c      	ldr	r4, [r1, #0]
 8002ca8:	6004      	str	r4, [r0, #0]

		if (!flagDecrementButtonDown)
 8002caa:	4839      	ldr	r0, [pc, #228]	@ (8002d90 <EXTI0_1_IRQHandler+0x100>)
 8002cac:	7804      	ldrb	r4, [r0, #0]
 8002cae:	2c00      	cmp	r4, #0
 8002cb0:	d144      	bne.n	8002d3c <EXTI0_1_IRQHandler+0xac>
		{
			timeDecrementButtonDown = SysTimer_ms;
 8002cb2:	680c      	ldr	r4, [r1, #0]
 8002cb4:	4937      	ldr	r1, [pc, #220]	@ (8002d94 <EXTI0_1_IRQHandler+0x104>)
			flagDecrementButtonDown = true;
 8002cb6:	7002      	strb	r2, [r0, #0]
			timeDecrementButtonDown = SysTimer_ms;
 8002cb8:	600c      	str	r4, [r1, #0]

			CLEAR_BIT(EXTI->FTSR, EXTI_FTSR_FT0);
 8002cba:	68d9      	ldr	r1, [r3, #12]
 8002cbc:	4391      	bics	r1, r2
 8002cbe:	60d9      	str	r1, [r3, #12]
			SET_BIT(EXTI->RTSR, EXTI_RTSR_RT0);
 8002cc0:	6899      	ldr	r1, [r3, #8]
 8002cc2:	430a      	orrs	r2, r1
 8002cc4:	609a      	str	r2, [r3, #8]
				flagDecrementButtonLong = false;
				flagDecrementButton = true;
			}
		}

		EXTI->PR = EXTI_PR_PR0;
 8002cc6:	2201      	movs	r2, #1
 8002cc8:	4b2e      	ldr	r3, [pc, #184]	@ (8002d84 <EXTI0_1_IRQHandler+0xf4>)
 8002cca:	615a      	str	r2, [r3, #20]
	}

	// Перевірка для EnterButton (EXTI1)
	if (EXTI->PR & EXTI_PR_PR1)
 8002ccc:	2202      	movs	r2, #2
 8002cce:	4b2d      	ldr	r3, [pc, #180]	@ (8002d84 <EXTI0_1_IRQHandler+0xf4>)
 8002cd0:	6959      	ldr	r1, [r3, #20]
 8002cd2:	420a      	tst	r2, r1
 8002cd4:	d018      	beq.n	8002d08 <EXTI0_1_IRQHandler+0x78>
	{
		CLEAR_BIT(EXTI->IMR, EXTI_IMR_IM1);
 8002cd6:	6819      	ldr	r1, [r3, #0]
		EnterButtonDebounce = SysTimer_ms;
 8002cd8:	482f      	ldr	r0, [pc, #188]	@ (8002d98 <EXTI0_1_IRQHandler+0x108>)
		CLEAR_BIT(EXTI->IMR, EXTI_IMR_IM1);
 8002cda:	4391      	bics	r1, r2
 8002cdc:	6019      	str	r1, [r3, #0]
		EnterButtonDebounce = SysTimer_ms;
 8002cde:	492b      	ldr	r1, [pc, #172]	@ (8002d8c <EXTI0_1_IRQHandler+0xfc>)
 8002ce0:	680c      	ldr	r4, [r1, #0]
 8002ce2:	6004      	str	r4, [r0, #0]

		if (!flagEnterButtonDown)
 8002ce4:	482d      	ldr	r0, [pc, #180]	@ (8002d9c <EXTI0_1_IRQHandler+0x10c>)
 8002ce6:	7804      	ldrb	r4, [r0, #0]
 8002ce8:	2c00      	cmp	r4, #0
 8002cea:	d10e      	bne.n	8002d0a <EXTI0_1_IRQHandler+0x7a>
		{
			timeEnterButtonDown = SysTimer_ms;
 8002cec:	680c      	ldr	r4, [r1, #0]
 8002cee:	492c      	ldr	r1, [pc, #176]	@ (8002da0 <EXTI0_1_IRQHandler+0x110>)
 8002cf0:	600c      	str	r4, [r1, #0]
			flagEnterButtonDown = true;
 8002cf2:	2101      	movs	r1, #1
 8002cf4:	7001      	strb	r1, [r0, #0]

			CLEAR_BIT(EXTI->FTSR, EXTI_FTSR_FT1);
 8002cf6:	68d9      	ldr	r1, [r3, #12]
 8002cf8:	4391      	bics	r1, r2
 8002cfa:	60d9      	str	r1, [r3, #12]
			SET_BIT(EXTI->RTSR, EXTI_RTSR_RT1);
 8002cfc:	6899      	ldr	r1, [r3, #8]
 8002cfe:	430a      	orrs	r2, r1
 8002d00:	609a      	str	r2, [r3, #8]
				flagEnterButtonLong = false;
				flagEnterButton = true;
			}
		}

		EXTI->PR = EXTI_PR_PR1;
 8002d02:	2202      	movs	r2, #2
 8002d04:	4b1f      	ldr	r3, [pc, #124]	@ (8002d84 <EXTI0_1_IRQHandler+0xf4>)
 8002d06:	615a      	str	r2, [r3, #20]
	}
}
 8002d08:	bd10      	pop	{r4, pc}
			flagEnterButtonDown = false;
 8002d0a:	2400      	movs	r4, #0
 8002d0c:	7004      	strb	r4, [r0, #0]
			CLEAR_BIT(EXTI->RTSR, EXTI_RTSR_RT1);
 8002d0e:	6898      	ldr	r0, [r3, #8]
 8002d10:	4390      	bics	r0, r2
 8002d12:	6098      	str	r0, [r3, #8]
			SET_BIT(EXTI->FTSR, EXTI_FTSR_FT1);
 8002d14:	68d8      	ldr	r0, [r3, #12]
 8002d16:	4302      	orrs	r2, r0
 8002d18:	60da      	str	r2, [r3, #12]
			if (SysTimer_ms - timeEnterButtonDown > 4 * menu[27].value)
 8002d1a:	680a      	ldr	r2, [r1, #0]
 8002d1c:	2116      	movs	r1, #22
 8002d1e:	4b20      	ldr	r3, [pc, #128]	@ (8002da0 <EXTI0_1_IRQHandler+0x110>)
 8002d20:	31ff      	adds	r1, #255	@ 0xff
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	1ad2      	subs	r2, r2, r3
 8002d26:	4b1f      	ldr	r3, [pc, #124]	@ (8002da4 <EXTI0_1_IRQHandler+0x114>)
 8002d28:	5c5b      	ldrb	r3, [r3, r1]
 8002d2a:	009b      	lsls	r3, r3, #2
 8002d2c:	429a      	cmp	r2, r3
 8002d2e:	d922      	bls.n	8002d76 <EXTI0_1_IRQHandler+0xe6>
				flagEnterButtonLong = true;
 8002d30:	2201      	movs	r2, #1
				flagEnterButton = false;
 8002d32:	4b1d      	ldr	r3, [pc, #116]	@ (8002da8 <EXTI0_1_IRQHandler+0x118>)
 8002d34:	701c      	strb	r4, [r3, #0]
				flagEnterButtonLong = true;
 8002d36:	4b1d      	ldr	r3, [pc, #116]	@ (8002dac <EXTI0_1_IRQHandler+0x11c>)
 8002d38:	701a      	strb	r2, [r3, #0]
 8002d3a:	e7e2      	b.n	8002d02 <EXTI0_1_IRQHandler+0x72>
			flagDecrementButtonDown = false;
 8002d3c:	2400      	movs	r4, #0
 8002d3e:	7004      	strb	r4, [r0, #0]
			CLEAR_BIT(EXTI->RTSR, EXTI_RTSR_RT0);
 8002d40:	6898      	ldr	r0, [r3, #8]
 8002d42:	4390      	bics	r0, r2
 8002d44:	6098      	str	r0, [r3, #8]
			SET_BIT(EXTI->FTSR, EXTI_FTSR_FT0);
 8002d46:	68d8      	ldr	r0, [r3, #12]
 8002d48:	4310      	orrs	r0, r2
 8002d4a:	60d8      	str	r0, [r3, #12]
			if (SysTimer_ms - timeDecrementButtonDown > 4 * menu[27].value)
 8002d4c:	2016      	movs	r0, #22
 8002d4e:	4b11      	ldr	r3, [pc, #68]	@ (8002d94 <EXTI0_1_IRQHandler+0x104>)
 8002d50:	6809      	ldr	r1, [r1, #0]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	30ff      	adds	r0, #255	@ 0xff
 8002d56:	1ac9      	subs	r1, r1, r3
 8002d58:	4b12      	ldr	r3, [pc, #72]	@ (8002da4 <EXTI0_1_IRQHandler+0x114>)
 8002d5a:	5c1b      	ldrb	r3, [r3, r0]
 8002d5c:	009b      	lsls	r3, r3, #2
 8002d5e:	4299      	cmp	r1, r3
 8002d60:	d904      	bls.n	8002d6c <EXTI0_1_IRQHandler+0xdc>
				flagDecrementButton = false;
 8002d62:	4b13      	ldr	r3, [pc, #76]	@ (8002db0 <EXTI0_1_IRQHandler+0x120>)
 8002d64:	701c      	strb	r4, [r3, #0]
				flagDecrementButtonLong = true;
 8002d66:	4b13      	ldr	r3, [pc, #76]	@ (8002db4 <EXTI0_1_IRQHandler+0x124>)
 8002d68:	701a      	strb	r2, [r3, #0]
 8002d6a:	e7ac      	b.n	8002cc6 <EXTI0_1_IRQHandler+0x36>
				flagDecrementButtonLong = false;
 8002d6c:	4b11      	ldr	r3, [pc, #68]	@ (8002db4 <EXTI0_1_IRQHandler+0x124>)
 8002d6e:	701c      	strb	r4, [r3, #0]
				flagDecrementButton = true;
 8002d70:	4b0f      	ldr	r3, [pc, #60]	@ (8002db0 <EXTI0_1_IRQHandler+0x120>)
 8002d72:	701a      	strb	r2, [r3, #0]
 8002d74:	e7a7      	b.n	8002cc6 <EXTI0_1_IRQHandler+0x36>
				flagEnterButton = true;
 8002d76:	2201      	movs	r2, #1
				flagEnterButtonLong = false;
 8002d78:	4b0c      	ldr	r3, [pc, #48]	@ (8002dac <EXTI0_1_IRQHandler+0x11c>)
 8002d7a:	701c      	strb	r4, [r3, #0]
				flagEnterButton = true;
 8002d7c:	4b0a      	ldr	r3, [pc, #40]	@ (8002da8 <EXTI0_1_IRQHandler+0x118>)
 8002d7e:	701a      	strb	r2, [r3, #0]
 8002d80:	e7bf      	b.n	8002d02 <EXTI0_1_IRQHandler+0x72>
 8002d82:	46c0      	nop			@ (mov r8, r8)
 8002d84:	40010400 	.word	0x40010400
 8002d88:	20000168 	.word	0x20000168
 8002d8c:	20000154 	.word	0x20000154
 8002d90:	20000162 	.word	0x20000162
 8002d94:	20000174 	.word	0x20000174
 8002d98:	20000164 	.word	0x20000164
 8002d9c:	20000161 	.word	0x20000161
 8002da0:	20000170 	.word	0x20000170
 8002da4:	20000000 	.word	0x20000000
 8002da8:	2000015e 	.word	0x2000015e
 8002dac:	2000015b 	.word	0x2000015b
 8002db0:	2000015f 	.word	0x2000015f
 8002db4:	2000015c 	.word	0x2000015c

08002db8 <EXTI2_3_IRQHandler>:

void EXTI2_3_IRQHandler(void)
{
	// Перевірка, чи було переривання від лінії EXTI2
	if (EXTI->PR & EXTI_PR_PR2)
 8002db8:	2204      	movs	r2, #4
 8002dba:	4b1f      	ldr	r3, [pc, #124]	@ (8002e38 <EXTI2_3_IRQHandler+0x80>)
{
 8002dbc:	b510      	push	{r4, lr}
	if (EXTI->PR & EXTI_PR_PR2)
 8002dbe:	6959      	ldr	r1, [r3, #20]
 8002dc0:	420a      	tst	r2, r1
 8002dc2:	d018      	beq.n	8002df6 <EXTI2_3_IRQHandler+0x3e>
	{
		// Забороняємо переривання для даної лінії, поки не завершимо обробку
		CLEAR_BIT(EXTI->IMR, EXTI_IMR_IM2);
 8002dc4:	6819      	ldr	r1, [r3, #0]
		IncrementButtonDebounce = SysTimer_ms;
 8002dc6:	481d      	ldr	r0, [pc, #116]	@ (8002e3c <EXTI2_3_IRQHandler+0x84>)
		CLEAR_BIT(EXTI->IMR, EXTI_IMR_IM2);
 8002dc8:	4391      	bics	r1, r2
 8002dca:	6019      	str	r1, [r3, #0]
		IncrementButtonDebounce = SysTimer_ms;
 8002dcc:	491c      	ldr	r1, [pc, #112]	@ (8002e40 <EXTI2_3_IRQHandler+0x88>)
 8002dce:	680c      	ldr	r4, [r1, #0]
 8002dd0:	6004      	str	r4, [r0, #0]

		if (!flagIncrementButtonDown)
 8002dd2:	481c      	ldr	r0, [pc, #112]	@ (8002e44 <EXTI2_3_IRQHandler+0x8c>)
 8002dd4:	7804      	ldrb	r4, [r0, #0]
 8002dd6:	2c00      	cmp	r4, #0
 8002dd8:	d10e      	bne.n	8002df8 <EXTI2_3_IRQHandler+0x40>
		{
			// Початок натискання
			timeIncrementButtonDown = SysTimer_ms;
 8002dda:	680c      	ldr	r4, [r1, #0]
 8002ddc:	491a      	ldr	r1, [pc, #104]	@ (8002e48 <EXTI2_3_IRQHandler+0x90>)
 8002dde:	600c      	str	r4, [r1, #0]
			flagIncrementButtonDown = true;
 8002de0:	2101      	movs	r1, #1
 8002de2:	7001      	strb	r1, [r0, #0]

			// Переводимо переривання на спадаючий фронт для відстеження відпускання
			CLEAR_BIT(EXTI->FTSR, EXTI_FTSR_FT2); // Включаємо переривання по спадаючому фронту
 8002de4:	68d9      	ldr	r1, [r3, #12]
 8002de6:	4391      	bics	r1, r2
 8002de8:	60d9      	str	r1, [r3, #12]
			SET_BIT(EXTI->RTSR, EXTI_RTSR_RT2);	  // Вимикаємо переривання по зростаючому фронту
 8002dea:	6899      	ldr	r1, [r3, #8]
 8002dec:	430a      	orrs	r2, r1
 8002dee:	609a      	str	r2, [r3, #8]
				flagIncrementButton = true;
				flagIncrementButtonLong = false;
			}
		}
		// Скидаємо прапорець EXTI2
		EXTI->PR = EXTI_PR_PR2;
 8002df0:	2204      	movs	r2, #4
 8002df2:	4b11      	ldr	r3, [pc, #68]	@ (8002e38 <EXTI2_3_IRQHandler+0x80>)
 8002df4:	615a      	str	r2, [r3, #20]
	}
}
 8002df6:	bd10      	pop	{r4, pc}
			flagIncrementButtonDown = false;
 8002df8:	2400      	movs	r4, #0
 8002dfa:	7004      	strb	r4, [r0, #0]
			CLEAR_BIT(EXTI->RTSR, EXTI_RTSR_RT2); // Включаємо переривання по зростаючому фронту
 8002dfc:	6898      	ldr	r0, [r3, #8]
 8002dfe:	4390      	bics	r0, r2
 8002e00:	6098      	str	r0, [r3, #8]
			SET_BIT(EXTI->FTSR, EXTI_FTSR_FT2);	  // Вимикаємо переривання по спадаючому фронту
 8002e02:	68d8      	ldr	r0, [r3, #12]
 8002e04:	4302      	orrs	r2, r0
 8002e06:	60da      	str	r2, [r3, #12]
			if (SysTimer_ms - timeIncrementButtonDown > 4 * menu[27].value) // *27 		P_5.2	timeButtonLongPressed
 8002e08:	680a      	ldr	r2, [r1, #0]
 8002e0a:	2116      	movs	r1, #22
 8002e0c:	4b0e      	ldr	r3, [pc, #56]	@ (8002e48 <EXTI2_3_IRQHandler+0x90>)
 8002e0e:	31ff      	adds	r1, #255	@ 0xff
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	1ad2      	subs	r2, r2, r3
 8002e14:	4b0d      	ldr	r3, [pc, #52]	@ (8002e4c <EXTI2_3_IRQHandler+0x94>)
 8002e16:	5c5b      	ldrb	r3, [r3, r1]
 8002e18:	009b      	lsls	r3, r3, #2
 8002e1a:	429a      	cmp	r2, r3
 8002e1c:	d905      	bls.n	8002e2a <EXTI2_3_IRQHandler+0x72>
				flagIncrementButtonLong = true;
 8002e1e:	2201      	movs	r2, #1
 8002e20:	4b0b      	ldr	r3, [pc, #44]	@ (8002e50 <EXTI2_3_IRQHandler+0x98>)
 8002e22:	701a      	strb	r2, [r3, #0]
				flagIncrementButton = false;
 8002e24:	4b0b      	ldr	r3, [pc, #44]	@ (8002e54 <EXTI2_3_IRQHandler+0x9c>)
 8002e26:	701c      	strb	r4, [r3, #0]
 8002e28:	e7e2      	b.n	8002df0 <EXTI2_3_IRQHandler+0x38>
				flagIncrementButton = true;
 8002e2a:	2201      	movs	r2, #1
 8002e2c:	4b09      	ldr	r3, [pc, #36]	@ (8002e54 <EXTI2_3_IRQHandler+0x9c>)
 8002e2e:	701a      	strb	r2, [r3, #0]
				flagIncrementButtonLong = false;
 8002e30:	4b07      	ldr	r3, [pc, #28]	@ (8002e50 <EXTI2_3_IRQHandler+0x98>)
 8002e32:	701c      	strb	r4, [r3, #0]
 8002e34:	e7dc      	b.n	8002df0 <EXTI2_3_IRQHandler+0x38>
 8002e36:	46c0      	nop			@ (mov r8, r8)
 8002e38:	40010400 	.word	0x40010400
 8002e3c:	2000016c 	.word	0x2000016c
 8002e40:	20000154 	.word	0x20000154
 8002e44:	20000163 	.word	0x20000163
 8002e48:	20000178 	.word	0x20000178
 8002e4c:	20000000 	.word	0x20000000
 8002e50:	2000015d 	.word	0x2000015d
 8002e54:	20000160 	.word	0x20000160

08002e58 <EXTI4_15_IRQHandler>:

void EXTI4_15_IRQHandler(void)
{
	// Перевіряємо, чи було переривання від лінії EXTI9
	if (EXTI->PR & EXTI_PR_PR9)
 8002e58:	2280      	movs	r2, #128	@ 0x80
 8002e5a:	4b11      	ldr	r3, [pc, #68]	@ (8002ea0 <EXTI4_15_IRQHandler+0x48>)
 8002e5c:	0092      	lsls	r2, r2, #2
 8002e5e:	6959      	ldr	r1, [r3, #20]
 8002e60:	4211      	tst	r1, r2
 8002e62:	d014      	beq.n	8002e8e <EXTI4_15_IRQHandler+0x36>
	{
		// Забороняємо переривання для лінії EXTI9
		EXTI->IMR &= ~EXTI_IMR_IM9;
 8002e64:	6819      	ldr	r1, [r3, #0]
 8002e66:	480f      	ldr	r0, [pc, #60]	@ (8002ea4 <EXTI4_15_IRQHandler+0x4c>)
 8002e68:	4001      	ands	r1, r0
 8002e6a:	6019      	str	r1, [r3, #0]

		// Перевірка стану піну 9 (припускаємо, що сигнал 0 – активний)
		if (BUTTON_PRESSED(9, GPIOB) == 0) // Якщо сигнал 0
 8002e6c:	490e      	ldr	r1, [pc, #56]	@ (8002ea8 <EXTI4_15_IRQHandler+0x50>)
 8002e6e:	6909      	ldr	r1, [r1, #16]
 8002e70:	4211      	tst	r1, r2
 8002e72:	d00d      	beq.n	8002e90 <EXTI4_15_IRQHandler+0x38>
		{
			// Повертаємо контролер у нормальний режим роботи
			LowPowerMode(EXIT);

			// Переводимо переривання на спадний фронт (чекаємо на сигнал 0)
			EXTI->FTSR |= EXTI_FTSR_FT9;  // Увімкнення переривання на спадний фронт
 8002e74:	68d9      	ldr	r1, [r3, #12]
 8002e76:	430a      	orrs	r2, r1
 8002e78:	60da      	str	r2, [r3, #12]
			EXTI->RTSR &= ~EXTI_RTSR_RT9; // Вимкнення переривання на зростаючий фронт
 8002e7a:	689a      	ldr	r2, [r3, #8]
 8002e7c:	4002      	ands	r2, r0
 8002e7e:	609a      	str	r2, [r3, #8]
		}

		// Скидаємо прапорець переривання на лінії EXTI9
		EXTI->PR = EXTI_PR_PR9;
 8002e80:	2380      	movs	r3, #128	@ 0x80
 8002e82:	4a07      	ldr	r2, [pc, #28]	@ (8002ea0 <EXTI4_15_IRQHandler+0x48>)
 8002e84:	009b      	lsls	r3, r3, #2
 8002e86:	6153      	str	r3, [r2, #20]

		// Увімкнення переривань після обробки
		EXTI->IMR |= EXTI_IMR_IM9;
 8002e88:	6811      	ldr	r1, [r2, #0]
 8002e8a:	430b      	orrs	r3, r1
 8002e8c:	6013      	str	r3, [r2, #0]
	}
}
 8002e8e:	4770      	bx	lr
			EXTI->RTSR |= EXTI_RTSR_RT9;  // Увімкнення переривання на зростаючий фронт
 8002e90:	6899      	ldr	r1, [r3, #8]
 8002e92:	430a      	orrs	r2, r1
 8002e94:	609a      	str	r2, [r3, #8]
			EXTI->FTSR &= ~EXTI_FTSR_FT9; // Вимкнення переривання на спадний фронт
 8002e96:	68da      	ldr	r2, [r3, #12]
 8002e98:	4002      	ands	r2, r0
 8002e9a:	60da      	str	r2, [r3, #12]
}
 8002e9c:	e7f0      	b.n	8002e80 <EXTI4_15_IRQHandler+0x28>
 8002e9e:	46c0      	nop			@ (mov r8, r8)
 8002ea0:	40010400 	.word	0x40010400
 8002ea4:	fffffdff 	.word	0xfffffdff
 8002ea8:	50000400 	.word	0x50000400

08002eac <TIM2_IRQHandler>:

void TIM2_IRQHandler(void)
{
	if (READ_BIT(TIM2->SR, TIM_SR_UIF))
 8002eac:	2380      	movs	r3, #128	@ 0x80
 8002eae:	2201      	movs	r2, #1
 8002eb0:	05db      	lsls	r3, r3, #23
 8002eb2:	6919      	ldr	r1, [r3, #16]
 8002eb4:	420a      	tst	r2, r1
 8002eb6:	d002      	beq.n	8002ebe <TIM2_IRQHandler+0x12>
	{
		//		CounterTIM2++;
		CLEAR_BIT(TIM2->SR, TIM_SR_UIF); // Сбросим флаг прерывания
 8002eb8:	6919      	ldr	r1, [r3, #16]
 8002eba:	4391      	bics	r1, r2
 8002ebc:	6119      	str	r1, [r3, #16]
	}
}
 8002ebe:	4770      	bx	lr

08002ec0 <TIM21_IRQHandler>:

void TIM21_IRQHandler(void)
{
	if (READ_BIT(TIM21->SR, TIM_SR_UIF))
 8002ec0:	2201      	movs	r2, #1
 8002ec2:	4b04      	ldr	r3, [pc, #16]	@ (8002ed4 <TIM21_IRQHandler+0x14>)
 8002ec4:	6919      	ldr	r1, [r3, #16]
 8002ec6:	420a      	tst	r2, r1
 8002ec8:	d002      	beq.n	8002ed0 <TIM21_IRQHandler+0x10>
	{
		//		CounterTIM2++;
		CLEAR_BIT(TIM21->SR, TIM_SR_UIF); // Сбросим флаг прерывания
 8002eca:	6919      	ldr	r1, [r3, #16]
 8002ecc:	4391      	bics	r1, r2
 8002ece:	6119      	str	r1, [r3, #16]
	}
}
 8002ed0:	4770      	bx	lr
 8002ed2:	46c0      	nop			@ (mov r8, r8)
 8002ed4:	40010800 	.word	0x40010800

08002ed8 <SystemInit>:
{
  /* Configure the Vector Table location add offset address ------------------*/
#if defined (USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002ed8:	4770      	bx	lr
 8002eda:	46c0      	nop			@ (mov r8, r8)

08002edc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 8002edc:	4813      	ldr	r0, [pc, #76]	@ (8002f2c <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 8002ede:	4685      	mov	sp, r0
   
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002ee0:	f7ff fffa 	bl	8002ed8 <SystemInit>

/*Check if boot space corresponds to system memory*/

    LDR R0,=0x00000004
 8002ee4:	4812      	ldr	r0, [pc, #72]	@ (8002f30 <LoopForever+0x6>)
    LDR R1, [R0]
 8002ee6:	6801      	ldr	r1, [r0, #0]
    LSRS R1, R1, #24
 8002ee8:	0e09      	lsrs	r1, r1, #24
    LDR R2,=0x1F
 8002eea:	4a12      	ldr	r2, [pc, #72]	@ (8002f34 <LoopForever+0xa>)
    CMP R1, R2
 8002eec:	4291      	cmp	r1, r2
    BNE ApplicationStart
 8002eee:	d105      	bne.n	8002efc <ApplicationStart>

 /*SYSCFG clock enable*/
    LDR R0,=0x40021034
 8002ef0:	4811      	ldr	r0, [pc, #68]	@ (8002f38 <LoopForever+0xe>)
    LDR R1,=0x00000001
 8002ef2:	4912      	ldr	r1, [pc, #72]	@ (8002f3c <LoopForever+0x12>)
    STR R1, [R0]
 8002ef4:	6001      	str	r1, [r0, #0]

/*Set CFGR1 register with flash memory remap at address 0*/
    LDR R0,=0x40010000
 8002ef6:	4812      	ldr	r0, [pc, #72]	@ (8002f40 <LoopForever+0x16>)
    LDR R1,=0x00000000
 8002ef8:	4912      	ldr	r1, [pc, #72]	@ (8002f44 <LoopForever+0x1a>)
    STR R1, [R0]
 8002efa:	6001      	str	r1, [r0, #0]

08002efc <ApplicationStart>:

ApplicationStart:
/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002efc:	4812      	ldr	r0, [pc, #72]	@ (8002f48 <LoopForever+0x1e>)
  ldr r1, =_edata
 8002efe:	4913      	ldr	r1, [pc, #76]	@ (8002f4c <LoopForever+0x22>)
  ldr r2, =_sidata
 8002f00:	4a13      	ldr	r2, [pc, #76]	@ (8002f50 <LoopForever+0x26>)
  movs r3, #0
 8002f02:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002f04:	e002      	b.n	8002f0c <LoopCopyDataInit>

08002f06 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002f06:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002f08:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002f0a:	3304      	adds	r3, #4

08002f0c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002f0c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002f0e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002f10:	d3f9      	bcc.n	8002f06 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002f12:	4a10      	ldr	r2, [pc, #64]	@ (8002f54 <LoopForever+0x2a>)
  ldr r4, =_ebss
 8002f14:	4c10      	ldr	r4, [pc, #64]	@ (8002f58 <LoopForever+0x2e>)
  movs r3, #0
 8002f16:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002f18:	e001      	b.n	8002f1e <LoopFillZerobss>

08002f1a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002f1a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002f1c:	3204      	adds	r2, #4

08002f1e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002f1e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002f20:	d3fb      	bcc.n	8002f1a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8002f22:	f000 f81d 	bl	8002f60 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002f26:	f7ff fd9f 	bl	8002a68 <main>

08002f2a <LoopForever>:

LoopForever:
    b LoopForever
 8002f2a:	e7fe      	b.n	8002f2a <LoopForever>
   ldr   r0, =_estack
 8002f2c:	20000800 	.word	0x20000800
    LDR R0,=0x00000004
 8002f30:	00000004 	.word	0x00000004
    LDR R2,=0x1F
 8002f34:	0000001f 	.word	0x0000001f
    LDR R0,=0x40021034
 8002f38:	40021034 	.word	0x40021034
    LDR R1,=0x00000001
 8002f3c:	00000001 	.word	0x00000001
    LDR R0,=0x40010000
 8002f40:	40010000 	.word	0x40010000
    LDR R1,=0x00000000
 8002f44:	00000000 	.word	0x00000000
  ldr r0, =_sdata
 8002f48:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002f4c:	20000124 	.word	0x20000124
  ldr r2, =_sidata
 8002f50:	08003090 	.word	0x08003090
  ldr r2, =_sbss
 8002f54:	20000124 	.word	0x20000124
  ldr r4, =_ebss
 8002f58:	2000017c 	.word	0x2000017c

08002f5c <ADC1_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002f5c:	e7fe      	b.n	8002f5c <ADC1_IRQHandler>
	...

08002f60 <__libc_init_array>:
 8002f60:	b570      	push	{r4, r5, r6, lr}
 8002f62:	2600      	movs	r6, #0
 8002f64:	4c0c      	ldr	r4, [pc, #48]	@ (8002f98 <__libc_init_array+0x38>)
 8002f66:	4d0d      	ldr	r5, [pc, #52]	@ (8002f9c <__libc_init_array+0x3c>)
 8002f68:	1b64      	subs	r4, r4, r5
 8002f6a:	10a4      	asrs	r4, r4, #2
 8002f6c:	42a6      	cmp	r6, r4
 8002f6e:	d109      	bne.n	8002f84 <__libc_init_array+0x24>
 8002f70:	2600      	movs	r6, #0
 8002f72:	f000 f819 	bl	8002fa8 <_init>
 8002f76:	4c0a      	ldr	r4, [pc, #40]	@ (8002fa0 <__libc_init_array+0x40>)
 8002f78:	4d0a      	ldr	r5, [pc, #40]	@ (8002fa4 <__libc_init_array+0x44>)
 8002f7a:	1b64      	subs	r4, r4, r5
 8002f7c:	10a4      	asrs	r4, r4, #2
 8002f7e:	42a6      	cmp	r6, r4
 8002f80:	d105      	bne.n	8002f8e <__libc_init_array+0x2e>
 8002f82:	bd70      	pop	{r4, r5, r6, pc}
 8002f84:	00b3      	lsls	r3, r6, #2
 8002f86:	58eb      	ldr	r3, [r5, r3]
 8002f88:	4798      	blx	r3
 8002f8a:	3601      	adds	r6, #1
 8002f8c:	e7ee      	b.n	8002f6c <__libc_init_array+0xc>
 8002f8e:	00b3      	lsls	r3, r6, #2
 8002f90:	58eb      	ldr	r3, [r5, r3]
 8002f92:	4798      	blx	r3
 8002f94:	3601      	adds	r6, #1
 8002f96:	e7f2      	b.n	8002f7e <__libc_init_array+0x1e>
 8002f98:	08003088 	.word	0x08003088
 8002f9c:	08003088 	.word	0x08003088
 8002fa0:	0800308c 	.word	0x0800308c
 8002fa4:	08003088 	.word	0x08003088

08002fa8 <_init>:
 8002fa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002faa:	46c0      	nop			@ (mov r8, r8)
 8002fac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002fae:	bc08      	pop	{r3}
 8002fb0:	469e      	mov	lr, r3
 8002fb2:	4770      	bx	lr

08002fb4 <_fini>:
 8002fb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002fb6:	46c0      	nop			@ (mov r8, r8)
 8002fb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002fba:	bc08      	pop	{r3}
 8002fbc:	469e      	mov	lr, r3
 8002fbe:	4770      	bx	lr
