<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="Andrey Koryagin">

    <title>12. STM32. Програмування STM32F103. TIMER. PWM - Avislab - сайт для палких паяльників</title>
    <link rel="shortcut icon" href="/css/favicon.png" />

    <link rel="canonical" href="https://blog.avislab.com/stm32-timer-pwm/">

    

    <link rel="dns-prefetch" href="https://fonts.gstatic.com">

    <link href="/fonts/fontawesome/css/fontawesome-all.min.css" rel="stylesheet">
    
    <link href="/css/bootstrap.min.css" rel="stylesheet">

    
    <link href="/css/blog.css" rel="stylesheet">

    
	  <script type="text/javascript" src="/js/jquery-3.6.0.slim.min.js"></script>

    
    <link rel="stylesheet" href="/js/fancybox/jquery.fancybox.min.css" />
    <script src="/js/fancybox/jquery.fancybox.min.js"></script>

    
    <link rel="stylesheet" href="/js/highlight/styles/default.css">
    <script src="/js/highlight/highlight.pack.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
  </head>
  <body style="background-image: url(/css/nav.png);">
      <div class="row">
	<div class="col-auto">
		<span class="head-brand float-left">Avislab</span><span class="logo d-inline-block d-sm-none"></span>
		<span class="subhead-brand float-left">сайт для палких паяльників<span class="logo d-none d-sm-inline-block"></span>
	</div>
	<div class="col text-right">
    
	</div>
     </div>

<nav class="navbar navbar-expand-sm navbar-light bg-light border">
  <a class="navbar-brand" href="/"><i class="fas fa-home mr-1"></i>Home</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExample03" aria-controls="navbarsExample03" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarsExample03">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item">
        <a class="nav-link text-dark" href="/about/"><i class="fas fa-info-circle mr-1"></i>About</a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-dark" href="https://www.youtube.com/channel/UCRu6XayQfW-augguSYhStyg" target="_blank"><i class="fas fa-video mr-1"></i>YouTube</a>
      </li>

    </ul>
<form class="form-inline my-2 my-md-0" onsubmit="window.location.href = '/search/'+document.getElementById('search_text').value; return false">
	<div class="input-group">

		<input type="text" id="search_text" class="form-control border-secondary" placeholder="Search" aria-label="Search" aria-describedby="button-addon2" value="">

		<div class="input-group-append">
			<button class="btn btn-outline-secondary border-secondary" type="button" aria-label="Пошук" id="button-addon2" onclick="window.location.href = '/search/'+document.getElementById('search_text').value"><i class="fas fa-search"></i></button>
		</div>
	</div>
</form>

  </div>
</nav>

  <main role="main">
    <div class="jumbotron p-3 border">

      <div class="row">
        <div class="col-md-8">
          <div class="card border border-secondary rounded bg-light mb-2">
            <div class="card-body">
              <h1>12. STM32. Програмування STM32F103. TIMER. PWM</h1>
<hr>

<div><i class="fas fa-calendar-alt mr-1"></i>09.09.2016</div>

<div>
    <p><a href="/stm32-tim-capture/">У попередніх статтях</a> ми познайомились з тим, як таймери можуть захоплювати вхідний сигнал. Таймери мікроконтролера <strong>STM32</strong> також можуть формувати вихідні сигнали. Сьогодні ми познайомимося з <a href="https://uk.wikipedia.org/wiki/%D0%A8%D0%B8%D1%80%D0%BE%D1%82%D0%BD%D0%BE-%D1%96%D0%BC%D0%BF%D1%83%D0%BB%D1%8C%D1%81%D0%BD%D0%B0_%D0%BC%D0%BE%D0%B4%D1%83%D0%BB%D1%8F%D1%86%D1%96%D1%8F"><strong>PWM</strong></a> або <a href="https://uk.wikipedia.org/wiki/%D0%A8%D0%B8%D1%80%D0%BE%D1%82%D0%BD%D0%BE-%D1%96%D0%BC%D0%BF%D1%83%D0%BB%D1%8C%D1%81%D0%BD%D0%B0_%D0%BC%D0%BE%D0%B4%D1%83%D0%BB%D1%8F%D1%86%D1%96%D1%8F"><strong>ШІМ </strong></a>сигналом на прикладах.</p>

<p><strong>Ініціалізація PWM</strong> виконується наступним чином:
<ul>
 	<li>налаштовується вихід порту відповідного каналу таймера, який буде задіяний для формування PWM сигналу</li>
 	<li>виконуються базові налаштування таймера</li>
 	<li>виконується налаштування OC каналу таймера (налаштування параметрів PWM)</li>
 	<li>вмикається таймер</li>
</ul></p>

<p>
Налаштування параметрів <strong>PWM</strong> виконується через структуру <strong>TIM_OCInitTypeDef</strong>:</p>

<pre><code class="cpp">
typedef struct
{
  uint16_t TIM_OCMode;        /*!&lt; Specifies the TIM mode.
                                   This parameter can be a value of @ref TIM_Output_Compare_and_PWM_modes */

  uint16_t TIM_OutputState;   /*!&lt; Specifies the TIM Output Compare state.
                                   This parameter can be a value of @ref TIM_Output_Compare_state */

  uint16_t TIM_OutputNState;  /*!&lt; Specifies the TIM complementary Output Compare state.
                                   This parameter can be a value of @ref TIM_Output_Compare_N_state
                                   @note This parameter is valid only for TIM1 and TIM8. */

  uint16_t TIM_Pulse;         /*!&lt; Specifies the pulse value to be loaded into the Capture Compare Register. 
                                   This parameter can be a number between 0x0000 and 0xFFFF */

  uint16_t TIM_OCPolarity;    /*!&lt; Specifies the output polarity.
                                   This parameter can be a value of @ref TIM_Output_Compare_Polarity */

  uint16_t TIM_OCNPolarity;   /*!&lt; Specifies the complementary output polarity.
                                   This parameter can be a value of @ref TIM_Output_Compare_N_Polarity
                                   @note This parameter is valid only for TIM1 and TIM8. */

  uint16_t TIM_OCIdleState;   /*!&lt; Specifies the TIM Output Compare pin state during Idle state.
                                   This parameter can be a value of @ref TIM_Output_Compare_Idle_State
                                   @note This parameter is valid only for TIM1 and TIM8. */

  uint16_t TIM_OCNIdleState;  /*!&lt; Specifies the TIM Output Compare pin state during Idle state.
                                   This parameter can be a value of @ref TIM_Output_Compare_N_Idle_State
                                   @note This parameter is valid only for TIM1 and TIM8. */
} TIM_OCInitTypeDef;
</code></pre>

<p>Нас цікавлять наступні параметри:
<ul>
 	<li><strong>TIM_OCMode</strong> - режим виходу (TIM_OCMode_Timing | TIM_OCMode_Active | TIM_OCMode_Inactive | TIM_OCMode_Toggle | TIM_OCMode_PWM1 | TIM_OCMode_PWM2). Нас цікавить <strong>TIM_OCMode_PWM1 або TIM_OCMode_PWM2</strong>.</li>
 	<li><strong>TIM_OutputState</strong> - стан виходу (TIM_OutputState_Disable | TIM_OutputState_Enable)</li>
 	<li><strong>TIM_Pulse</strong> - шпаруватість ШІМ (від 0x0000 до 0xFFFF)</li>
 	<li><strong>TIM_OCPolarity</strong> - (TIM_OCPolarity_High | TIM_OCPolarity_Low) TIM_OCPolarity_High - прямий ШІМ, TIM_OCPolarity_Low - інвертований.</li>
</ul>
Решта параметрів для <strong>advanced</strong> таймерів. Їх будемо розглядати пізніше.
<h2>PWM. Яскравість світлодіода</h2>
Перший приклад: ми будемо змінювати яскравість світлодіода. Схема підключення:</p>

<p><a href="/uploads/2016/09/STM32F103C8_LED.png" data-fancybox="gallery"><img src="/uploads/2016/09/STM32F103C8_LED-276x300.png" alt="STM32F103C8_LED" width="276" height="300" /></a></p>

<pre><code class="cpp">
#include "stm32f10x.h"
#include "stm32f10x_rcc.h"
#include "stm32f10x_gpio.h"
#include "stm32f10x_tim.h"

#define PERIOD 1000
int main(void)
{
	int TIM_Pulse = 0;
	int i;

	GPIO_InitTypeDef port;
	TIM_TimeBaseInitTypeDef timer;
	TIM_OCInitTypeDef timerPWM;

	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);

	GPIO_StructInit(&port);
	port.GPIO_Mode = GPIO_Mode_IPU;
	port.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
	port.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOA, &port);

	GPIO_StructInit(&port);
	port.GPIO_Mode = GPIO_Mode_AF_PP;
	port.GPIO_Pin = GPIO_Pin_6;
	port.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOB, &port);

	TIM_TimeBaseStructInit(&timer);
	timer.TIM_Prescaler = 720;
	timer.TIM_Period = PERIOD;
	timer.TIM_ClockDivision = 0;
	timer.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_TimeBaseInit(TIM4, &timer);

	TIM_OCStructInit(&timerPWM);
	timerPWM.TIM_OCMode = TIM_OCMode_PWM1;
	timerPWM.TIM_OutputState = TIM_OutputState_Enable;
	timerPWM.TIM_Pulse = 10;
	timerPWM.TIM_OCPolarity = TIM_OCPolarity_High;
	TIM_OC1Init(TIM4, &timerPWM);

    TIM_Cmd(TIM4, ENABLE);

    while(1)
    {
    	if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0) == 0) {
    		if (TIM_Pulse &lt; PERIOD)
    			TIM_Pulse++;
    		TIM4-&gt;CCR1 = TIM_Pulse;

    	}
    	if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_1) == 0) {
    		if (TIM_Pulse &gt; 0)
    			TIM_Pulse--;
    		TIM4-&gt;CCR1 = TIM_Pulse;
    	}

    	/* delay */
    	for(i=0;i&lt;0x10000;i++);
    }
}
</code></pre>

<p>Яскравість змінюється кнопками. Частота ШІМ вираховується, як частота тактування таймера, поділена на дільник таймера. Наприклад, якщо таймер тактується частотою 8МГц, а поділювач TIM_Prescaler = 800, частота ШІМ буде 8000000/800 = 10КГц. Доречі, якщо частоту ШІМ знизити до 1 герца, а шрабуватість встановити 50%, світлодіод буде просто блимати один раз на секунду.
<h2>PWM. RGB-LED</h2>
Один таймер може генерувати окремі ШІМ сигнали на кожному зі своїх каналів. У наступному прикладі використовується три канали (з чотирьох доступних) одного таймера для формування трьох PWM сигналів для керування кольором RGB світлодіода. Схема:</p>

<p><a href="/uploads/2016/09/STM32F103C8_RGB_LED.png" data-fancybox="gallery"><img src="/uploads/2016/09/STM32F103C8_RGB_LED-262x300.png" alt="STM32F103C8_RGB_LED" width="262" height="300" /></a></p>

<pre><code class="cpp">
#include "stm32f10x.h"
#include "stm32f10x_rcc.h"
#include "stm32f10x_gpio.h"
#include "stm32f10x_tim.h"

#define PERIOD 1000
int main(void)
{
	int TIM_Pulse_R = 0;
	int TIM_Pulse_G = 0;
	int TIM_Pulse_B = 0;
	int i;

	GPIO_InitTypeDef port;
	TIM_TimeBaseInitTypeDef timer;
	TIM_OCInitTypeDef timerPWM;

	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);

	GPIO_StructInit(&port);
	port.GPIO_Mode = GPIO_Mode_AF_PP;
	port.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8;
	port.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOB, &port);

	TIM_TimeBaseStructInit(&timer);
	timer.TIM_Prescaler = 720;
	timer.TIM_Period = PERIOD;
	timer.TIM_ClockDivision = 0;
	timer.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_TimeBaseInit(TIM4, &timer);

	TIM_OCStructInit(&timerPWM);
	timerPWM.TIM_Pulse = 0;
	timerPWM.TIM_OCMode = TIM_OCMode_PWM1;
	timerPWM.TIM_OutputState = TIM_OutputState_Enable;
	timerPWM.TIM_OCPolarity = TIM_OCPolarity_High;
	TIM_OC1Init(TIM4, &timerPWM);
	TIM_OC2Init(TIM4, &timerPWM);
	TIM_OC3Init(TIM4, &timerPWM);

    TIM_Cmd(TIM4, ENABLE);

    while(1)
    {
    	TIM_Pulse_R++;
    	if (TIM_Pulse_R &gt; PERIOD)
    		TIM_Pulse_R = 0;

    	TIM_Pulse_G +=2;
    	if (TIM_Pulse_G &gt; PERIOD)
    		TIM_Pulse_G = 0;

    	TIM_Pulse_B +=4;
    	if (TIM_Pulse_B &gt; PERIOD)
    		TIM_Pulse_B = 0;

    	TIM4-&gt;CCR1 = TIM_Pulse_R;
    	TIM4-&gt;CCR2 = TIM_Pulse_G;
    	TIM4-&gt;CCR3 = TIM_Pulse_B;

    	/* delay */
   	    for(i=0;i&lt;0x1000;i++);
    }
}
</code></pre>

<p><h2>PWM. Servo</h2>
Деякі пристрої керуються PWM сигналом специфічної форми. Одним з таких пристроїв є сервоприводи або сервомашинки, які досить часто використовують у роботах та радіокерованих моделях. Про сервоприводи я писав у статті "<a href="/serva/">Управление сервоприводом (сервомашинкой) с помощью микроконтроллера ATMega</a>". У цій статті також наведено параметри сигналу для керування сервою. Тому ми не будемо заглиблюватися у деталі керування сервою. Ціль цієї статті: продемонструвати різноманіття пристроїв, якими можна керувати, використовуючи можливості таймерів мікроконтролера. Тому я просто наведу приклад керування сервою. Схема підключення:</p>

<p><a href="/uploads/2016/09/STM32F103C8_SERVO.png" data-fancybox="gallery"><img src="/uploads/2016/09/STM32F103C8_SERVO-300x229.png" alt="STM32F103C8_SERVO" width="300" height="229" /></a></p>

<pre><code class="cpp">
#include "stm32f10x.h"
#include "stm32f10x_rcc.h"
#include "stm32f10x_gpio.h"
#include "stm32f10x_tim.h"

#define SYSCLK 72000000
#define PRESCALER 72

GPIO_InitTypeDef port;
TIM_TimeBaseInitTypeDef timer;
TIM_OCInitTypeDef timerPWM;

void servo_init(void) {

	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);

	GPIO_StructInit(&port);
	port.GPIO_Mode = GPIO_Mode_AF_PP;
	port.GPIO_Pin = GPIO_Pin_6;
	port.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOB, &port);

	TIM_TimeBaseStructInit(&timer);
	timer.TIM_Prescaler = PRESCALER;
	timer.TIM_Period = SYSCLK / PRESCALER / 50;
	timer.TIM_ClockDivision = 0;
	timer.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_TimeBaseInit(TIM4, &timer);

	TIM_OCStructInit(&timerPWM);
	timerPWM.TIM_Pulse = 1000;
	timerPWM.TIM_OCMode = TIM_OCMode_PWM1;
	timerPWM.TIM_OutputState = TIM_OutputState_Enable;
	timerPWM.TIM_OCPolarity = TIM_OCPolarity_High;
	TIM_OC1Init(TIM4, &timerPWM);

    TIM_Cmd(TIM4, ENABLE);
}

int main(void)
{
	int TIM_Pulse;
	int i;

	//Init buttons
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
	GPIO_StructInit(&port);
	port.GPIO_Mode = GPIO_Mode_IPU;
	port.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
	port.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOA, &port);

	servo_init();
	TIM_Pulse = timerPWM.TIM_Pulse;

    while(1)
    {
    	if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0) == 0) {
    		if (TIM_Pulse &lt; 2000)
    			TIM_Pulse++;
    		TIM4-&gt;CCR1 = TIM_Pulse;

    	}
    	if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_1) == 0) {
    		if (TIM_Pulse &gt; 1000)
    			TIM_Pulse--;
    		TIM4-&gt;CCR1 = TIM_Pulse;
    	}
   	    // delay
   	    for(i=0;i&lt;0x1000;i++);
    }
}
</code></pre>

<p><h2>PWM. Звук</h2>
Крім того, використовуючи ШІМ, можна генерувати звук. Для цього частота ШІМ має бути у межах звукового діапазону, який може сприймати людина. При цьому шпаруватість ШІМ має бути 50%. У даному прикладі до тестової плати підключений <a href="/piezo-buzzer/">п`єзо-електричний бузер (без внутрішнього генератора!)</a>. Це звичайна пищавка на кшталт таких, тільки в корпусі:</p>

<p><a href="/uploads/2014/10/piezo-buzzer.jpg" data-fancybox="gallery"><img src="/uploads/2014/10/piezo-buzzer-300x200.jpg" alt="piezo buzzer" width="300" height="200" /></a></p>

<p>Будь-ласка, не плутайте п`єзо-електричний бузер з магніто-динамічним. Звичайні динаміки не можна напряму підключати до мікроконтролера.</p>

<p>Схема підключення п`єзо-електричного бузера:</p>

<p><a href="/uploads/2016/09/STM32F103C8_SOUND.png" data-fancybox="gallery"><img src="/uploads/2016/09/STM32F103C8_SOUND-298x300.png" alt="STM32F103C8_SOUND" width="298" height="300" /></a></p>

<pre><code class="cpp">
#include "stm32f10x.h"
#include "stm32f10x_rcc.h"
#include "stm32f10x_gpio.h"
#include "stm32f10x_tim.h"

#define SYSCLK 72000000
#define PRESCALER 72

#define C	261	//Do
#define C_	277 //Do#
#define D	293 //Re
#define D_	311 //Re#
#define E	239 //Mi
#define F	349 //Fa
#define F_	370 //Fa#
#define G 	392 //Sol
#define G_	415 //Sol#
#define A	440 //La
#define A_	466 //La#
#define H	494 //Si

#define t1		2000
#define t2		1000
#define t4		500
#define t8		250
#define t16		125

typedef struct
{
	uint16_t freq;
	uint16_t time;
}SoundTypeDef;

#define MUSICSIZE 48

const SoundTypeDef Music[MUSICSIZE] ={
	{C*2, t4},
	{G, t4},
	{A_, t8},
	{F, t8},
	{D_, t8},
	{F, t8},
	{G, t4},
	{C, t2},
	{C*2, t4},
	{G, t4},
	{A_, t8},
	{F, t8},
	{D_, t8},
	{F, t8},
	{G, t4},
	{C*2, t4},
	{0, t8},
	{D_, t8},
	{D_, t8},
	{D_, t8},
	{G, t8},
	{A_, t4},
	{D_*2, t8},
	{C_*2, t8},
	{C*2, t8},
	{C*2, t8},
	{C*2, t8},
	{C*2, t8},
	{A_, t8},
	{F, t8},
	{D_, t8},
	{F, t8},
	{G, t4},
	{C*2, t2},
	{C*2, t2},
	{A_, t8},
	{G_, t8},
	{G, t8},
	{G_, t8},
	{A_, t2},
	{A_, t4},
	{C*2, t4},
	{A_, t8},
	{F, t8},
	{D_, t8},
	{F, t8},
	{G, t4},
	{C*2, t2}
};

int MusicStep = 0;
char PlayMusic = 0;

void StartMusic(void) {
	MusicStep = 0;
	PlayMusic = 1;
	sound(Music[MusicStep].freq, Music[MusicStep].time);
}

void SetSysClockTo72(void)
{
	ErrorStatus HSEStartUpStatus;
    /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration -----------------------------*/
    /* RCC system reset(for debug purpose) */
    RCC_DeInit();

    /* Enable HSE */
    RCC_HSEConfig( RCC_HSE_ON);

    /* Wait till HSE is ready */
    HSEStartUpStatus = RCC_WaitForHSEStartUp();

    if (HSEStartUpStatus == SUCCESS)
    {
        /* Enable Prefetch Buffer */
    	//FLASH_PrefetchBufferCmd( FLASH_PrefetchBuffer_Enable);

        /* Flash 2 wait state */
        //FLASH_SetLatency( FLASH_Latency_2);

        /* HCLK = SYSCLK */
        RCC_HCLKConfig( RCC_SYSCLK_Div1);

        /* PCLK2 = HCLK */
        RCC_PCLK2Config( RCC_HCLK_Div1);

        /* PCLK1 = HCLK/2 */
        RCC_PCLK1Config( RCC_HCLK_Div2);

        /* PLLCLK = 8MHz * 9 = 72 MHz */
        RCC_PLLConfig(0x00010000, RCC_PLLMul_9);

        /* Enable PLL */
        RCC_PLLCmd( ENABLE);

        /* Wait till PLL is ready */
        while (RCC_GetFlagStatus(RCC_FLAG_PLLRDY) == RESET)
        {
        }

        /* Select PLL as system clock source */
        RCC_SYSCLKConfig( RCC_SYSCLKSource_PLLCLK);

        /* Wait till PLL is used as system clock source */
        while (RCC_GetSYSCLKSource() != 0x08)
        {
        }
    }
    else
    { /* If HSE fails to start-up, the application will have wrong clock configuration.
     User can add here some code to deal with this error */

        /* Go to infinite loop */
        while (1)
        {
        }
    }
}

GPIO_InitTypeDef port;
TIM_TimeBaseInitTypeDef timer;
TIM_OCInitTypeDef timerPWM;

int sound_time;
int sound_counter;

void sound_init(void) {
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);

	GPIO_StructInit(&port);
	port.GPIO_Mode = GPIO_Mode_AF_PP;
	port.GPIO_Pin = GPIO_Pin_6;
	port.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOB, &port);

	TIM_TimeBaseStructInit(&timer);
	timer.TIM_Prescaler = PRESCALER;
	timer.TIM_Period = 0xFFFF;
	timer.TIM_ClockDivision = 0;
	timer.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_TimeBaseInit(TIM4, &timer);

	TIM_OCStructInit(&timerPWM);
	timerPWM.TIM_Pulse = 0;
	timerPWM.TIM_OCMode = TIM_OCMode_PWM1;
	timerPWM.TIM_OutputState = TIM_OutputState_Enable;
	timerPWM.TIM_OCPolarity = TIM_OCPolarity_High;
	TIM_OC1Init(TIM4, &timerPWM);

    /* Enable Interrupt by overflow */
    TIM_ITConfig(TIM4, TIM_IT_CC4, ENABLE);

	//TIM_Cmd(TIM4, ENABLE);

    /* Enable Interrupt of Timer TIM2 */
    NVIC_EnableIRQ(TIM4_IRQn);
}

void TIM4_IRQHandler(void){

	if (TIM_GetITStatus(TIM4, TIM_IT_CC4) != RESET)
	  {
	    /* Reset flag */
	    TIM_ClearITPendingBit(TIM4, TIM_IT_CC4);

	    sound_counter++;
	    if (sound_counter &gt; sound_time) {
	    	if (PlayMusic == 0) {
	    		TIM_Cmd(TIM4, DISABLE);
	    	}
	    	else {
	    		if (MusicStep &lt; MUSICSIZE-1) {
	    			if (TIM4-&gt;CCR1 == 0){
	    				MusicStep++;
	    				sound(Music[MusicStep].freq, Music[MusicStep].time);
	    			}
	    			else{
	    				sound(0, 30);
	    			}
	    		}
	    		else {
		    		PlayMusic = 0;
		    		TIM_Cmd(TIM4, DISABLE);
	    		}
	    	}
	    }

	    /* over-capture */
	    if (TIM_GetFlagStatus(TIM4, TIM_FLAG_CC4OF) != RESET)
	    {
	      TIM_ClearFlag(TIM4, TIM_FLAG_CC4OF);
	      // ...
	    }
	  }
}

void sound (int freq, int time_ms) {
	if (freq &gt; 0) {
		TIM4-&gt;ARR = SYSCLK / timer.TIM_Prescaler / freq;
		TIM4-&gt;CCR1 = TIM4-&gt;ARR / 2;
	}
	else {
		TIM4-&gt;ARR = 1000;
		TIM4-&gt;CCR1 = 0;
	}
	TIM_SetCounter(TIM4, 0);

	sound_time = ((SYSCLK / timer.TIM_Prescaler / TIM4-&gt;ARR) * time_ms ) / 1000;
	sound_counter = 0;
	TIM_Cmd(TIM4, ENABLE);
}

int main(void)
{
	SetSysClockTo72();
	sound_init();

	//sound (440, 1000);
	StartMusic();

	while(1)
    {

    }

}
</code></pre>

<p>Я не зупинився на генеруванні простого монотонного звука, і написав функцію <strong>sound()</strong>, якій можна задати частоту і тривалість звучання. Але і це ще не все. Я написав ще одну функцію <strong>StartMusic()</strong>, яка запускає програвання мелодії. І все це вимагає ресурсів лише одного таймера. При цьому основний цикл програми залишається вільний. Тобто, музика грає у фоні і не заважає роботі.</p>

<p><iframe title="12. STM32. Програмування STM32F103. TIMER. PWM" width="500" height="281" src="https://www.youtube.com/embed/IHpZC-CSxUM?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p>

<p>У цій та попередніх статтях ми розглянули основні можливості таймерів, але це далеко не все, на що вони здатні.</p>

<p>Бажаю успіхів!</p>

<p>Дивись також:</p>
<ul>
  <li><a href="/stm32_st_link/" target="_blank">1. STM32. Програмування STM32F103. Тестова плата. Прошивка через UART та через ST-Link</a></li>
  <li><a href="/stm32-ide" target="_blank">2. STM32. Програмування. IDE для STM32</a></li>
  <li><a href="/stm32-gpio" target="_blank">3. STM32. Програмування STM32F103. GPIO</a></li>
  <li><a href="/stm32-clock" target="_blank">4. STM32. Програмування STM32F103. Тактування</a></li>
  <li><a href="/stm32-usart/" target="_blank">5. STM32. Програмування STM32F103. USART</a></li>
  <li><a href="/stm32-nvic/" target="_blank">6. STM32. Програмування STM32F103. NVIC</a></li>
  <li><a href="/stm32-adc/" target="_blank">7. STM32. Програмування STM32F103. ADC</a></li>
  <li><a href="/stm32-dma/" target="_blank">8. STM32. Програмування STM32F103. DMA</a></li>
  <li><a href="/stm32-tim_basic/" target="_blank">9. STM32. Програмування STM32F103. TIMER</a></li>
  <li><a href="/stm32-tim-capture/" target="_blank">10. STM32. Програмування STM32F103. TIMER. Захоплення сигналу</a></li>
  <li><a href="/stm32-timer-encoder/" target="_blank">11. STM32. Програмування STM32F103. TIMER. Encoder</a></li>
  <li><a href="/stm32-timer-pwm/" target="_blank">12. STM32. Програмування STM32F103. TIMER. PWM</a></li>
  <li><a href="/stm32-exti/" target="_blank">13. STM32. Програмування STM32F103. EXTI</a></li>
  <li><a href="/stm32-rtc/" target="_blank">14. STM32. Програмування STM32F103. RTC</a></li>
  <li><a href="/stm32-bkp" target="_blank">15. STM32. Програмування STM32F103. BKP</a></li>
  <li><a href="/stm32-flash" target="_blank">16. STM32. Програмування STM32F103. Flash</a></li>
  <li><a href="/stm32-watchdog/" target="_blank">17. STM32. Програмування STM32F103. Watchdog</a></li>
  <li><a href="/stm32-remap/" target="_blank">18. STM32. Програмування STM32F103. Remap</a></li>
  <li><a href="/stm32-i2c-master/" target="_blank">19. STM32. Програмування STM32F103. I2C Master</a></li>
  <li><a href="/stm32-i2c-slave/" target="_blank">20. STM32. Програмування STM32F103. I2C Slave</a></li>
  <li><a href="/stm32-usb/" target="_blank">21. STM32. Програмування STM32F103. USB</a></li>
  <li><a href="/stm32-pwr/" target="_blank">22. STM32. Програмування STM32F103. PWR</a></li>
  <li><a href="/stm32-ob/" target="_blank">23. STM32. Програмування STM32F103. Option bytes</a></li>
  <li><a href="/stm32-bootloader/" target="_blank">24. STM32. Програмування STM32F103. Bootloader</a></li>
  <li><a href="/stm32-examples/" target="_blank"><strong>STM32. Скачати приклади</strong></a></li>
  <li><a href="/system-workbench-for-stm32-ubuntu/" target="_blank"><strong>System Workbench for STM32 Інсталяція на Ubuntu</strong></a></li>
  <li><a href="/keil/" target="_blank"><strong>Keil uVision5 – IDE для STM32</strong></a></li>
  <li><a href="/iar-workbench/" target="_blank"><strong>IAR Workbench – IDE для STM32</strong></a></li>
  <li><a href="/stm32-bldc/" target="_blank">Керування безколекторним двигуном постійного струму (BLDC) за допомогою STM32</a></li>
  <li><a href="/stm32-pmsm/" target="_blank">Керування PMSM за допомогою STM32</a></li>
</ul></p>


</div>


    <span><i class="fas fa-folder-open"></i></span>
    
        <span class="mr-2"><a href="/category/stm32/">STM32</a></span>
    




<div class="mt-3"><span><strong>Коментарі:</strong></span>
  <hr />

</div>

<a name="#respond"></a>
<div class="h4">Додати коментар</div>
<form class="mb-3" id="frm">
<input type="hidden" name="postid" value="4142">
<input type="hidden" name="path" value="stm32-timer-pwm">
  <div class="form-group">
    <label for="InputName">* Ваше ім'я:</label>
    <input type="text" id="InputName" name="author" class="form-control border-secondary" placeholder="Name" aria-label="Name" aria-describedby="Name" maxlength="64" value="">
  </div>
  <div class="form-group">
    <label for="InputEmail">e-mail:</label>
    <input type="email" id="InputEmail" name="email" class="form-control" placeholder="E-mail" aria-label="E-mail" aria-describedby="E-mail" maxlength="64" value="">
  </div>
  <div class="form-group">
    <label for="InputComment">* Коментар:</label>
    <textarea id="InputComment" name="comment" class="form-control" maxlength="1024"></textarea>
  </div>
  <div class="form-group row">
    <div class="col-md-auto">
      <label for="InputVerify">Введіть код з картинки:</label>
    </div>
    <div class="col-md">
      <input type="text" id="InputVerify" name="code" class="form-control border-secondary" placeholder="Введіть код" aria-label="Code" aria-describedby="Введіть код" maxlength="6" value="">
      <img src="/verify-image/" class="mt-1" alt="Code" title="Code" width="100" height="30" />
    </div>
  </div>
  <div class="m-3">* - обов'язкові поля</div>
  <button type="submit" class="btn btn-dark" aria-label="Додати коментар" id="button-submit">Додати коментар</button>
</form>
<script>
  let el = document.getElementById('frm')
  el.setAttribute('action', '/comment/')
  el.setAttribute('method', 'POST')
</script>

            </div>
          </div>
        </div>
        <div class="col-md-4">

<div class="card border border-secondary rounded bg-light mb-2">
  <div class="card-body">
    <h3 class="card-title">Категорії</h3>
    <p class="card-text">
<ul class="list-unstyled">

  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/news/">Новини</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/brushlessmotors/">Brushless Motors</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/stm32/">STM32</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/esp8266/">ESP8266</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/raspberry-pi/">Raspberry Pi</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/web-dev/">Web-dev склерозник</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/guides/">Довідники</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/books/">Книги про електроніку</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/info/">Корисно знати</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/beginners/">Початківцям</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/circuit_diagrams/">Схеми і прошивки</a></li>
      
    
  

  
    
      
        <li><i class="fas fa-folder mr-2"></i><a href="/category/video/">Video</a></li>
      
    
  

</ul>
    </p>
  </div>
</div>








<div class="card border border-secondary rounded bg-light mb-2">
  <div class="card-body">
    <h3 class="card-title">Недавні записи</h3>
    <p class="card-text">
<ul class="list-unstyled">


  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/cv/">Комп'ютерний зір (Машинний зір)</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/foc-precision/">Деякі думки про точність вимірювань в електроприводі</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/bldc-sensors-120-60/">Датчики Холла 120/60 градусів</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/half-bridge-igbt-driver/">Модуль драйверів напівмосту IGBT транзисторів</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/igbt-driver-a316j/">Драйвер IGBT транзисторів на A316J</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/as5600-bldc-motor/">AS5600. Варіант встановлення на BLDC мотор</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/dc-dc-2w-15-8/">DC-DC для IGBT драйверів ізольований 2 W +15 -8 вольт</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/u-foc/about/">U-FOC - Векторне керування безколекторними моторами</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/video-u-foc-2022/">FOC - своя реалізація векторного керування. Підбиваю підсумки 2022 року</a>
    
  </li>

  <li>
    
		  <i class="fas fa-file pr-2"></i><a href="/video-mc-prototyper-2022/">Конструктор регуляторів моторів. Підбиваю підсумки 2022 року.</a>
    
  </li>

</ul>
    </p>
  </div>
</div>


<div class="card border border-secondary rounded bg-light mb-2">
  <div class="card-body">
    <h3 class="card-title">Tags</h3>
    <p class="card-text">

	
		<a href="/tag/ngnix/" style="font-size: 15pt;">ngnix</a>
	

	
		<a href="/tag/flash/" style="font-size: 21pt;">flash</a>
	

	
		<a href="/tag/flask/" style="font-size: 21pt;">flask</a>
	

	
		<a href="/tag/i2c/" style="font-size: 23pt;">i2c</a>
	

	
		<a href="/tag/servo/" style="font-size: 14pt;">servo</a>
	

	
		<a href="/tag/dma/" style="font-size: 12pt;">dma</a>
	

	
		<a href="/tag/gpio/" style="font-size: 11pt;">gpio</a>
	

	
		<a href="/tag/avr/" style="font-size: 15pt;">avr</a>
	

	
		<a href="/tag/solar/" style="font-size: 18pt;">solar</a>
	

	
		<a href="/tag/bme280/" style="font-size: 16pt;">bme280</a>
	

	
		<a href="/tag/docker/" style="font-size: 23pt;">docker</a>
	

	
		<a href="/tag/eeprom/" style="font-size: 23pt;">eeprom</a>
	

	
		<a href="/tag/sms/" style="font-size: 22pt;">sms</a>
	

	
		<a href="/tag/java-script/" style="font-size: 21pt;">java-script</a>
	

	
		<a href="/tag/barometer/" style="font-size: 16pt;">barometer</a>
	

	
		<a href="/tag/rtc/" style="font-size: 16pt;">rtc</a>
	

	
		<a href="/tag/dht11/" style="font-size: 13pt;">dht11</a>
	

	
		<a href="/tag/ssd1306/" style="font-size: 16pt;">ssd1306</a>
	

	
		<a href="/tag/bldc/" style="font-size: 21pt;">bldc</a>
	

	
		<a href="/tag/motor/" style="font-size: 15pt;">motor</a>
	

	
		<a href="/tag/raspberry-pi/" style="font-size: 22pt;">raspberry-pi</a>
	

	
		<a href="/tag/ssd1331/" style="font-size: 20pt;">ssd1331</a>
	

	
		<a href="/tag/mpu-9250/" style="font-size: 13pt;">mpu-9250</a>
	

	
		<a href="/tag/dc-dc/" style="font-size: 21pt;">dc-dc</a>
	

	
		<a href="/tag/rfid/" style="font-size: 24pt;">rfid</a>
	

	
		<a href="/tag/foc/" style="font-size: 10pt;">foc</a>
	

	
		<a href="/tag/st-link/" style="font-size: 12pt;">st-link</a>
	

	
		<a href="/tag/usb/" style="font-size: 19pt;">usb</a>
	

	
		<a href="/tag/remap/" style="font-size: 19pt;">remap</a>
	

	
		<a href="/tag/pwm/" style="font-size: 20pt;">pwm</a>
	

	
		<a href="/tag/capture/" style="font-size: 17pt;">capture</a>
	

	
		<a href="/tag/soldering/" style="font-size: 12pt;">soldering</a>
	

	
		<a href="/tag/nodemcu/" style="font-size: 17pt;">nodemcu</a>
	

	
		<a href="/tag/lcd/" style="font-size: 23pt;">lcd</a>
	

	
		<a href="/tag/eb-500/" style="font-size: 13pt;">eb-500</a>
	

	
		<a href="/tag/esp8266/" style="font-size: 21pt;">esp8266</a>
	

	
		<a href="/tag/mpu-6050/" style="font-size: 16pt;">mpu-6050</a>
	

	
		<a href="/tag/nvic/" style="font-size: 22pt;">nvic</a>
	

	
		<a href="/tag/usart/" style="font-size: 11pt;">usart</a>
	

	
		<a href="/tag/books/" style="font-size: 10pt;">books</a>
	

	
		<a href="/tag/mpx4115a/" style="font-size: 23pt;">mpx4115a</a>
	

	
		<a href="/tag/timer/" style="font-size: 14pt;">timer</a>
	

	
		<a href="/tag/adc/" style="font-size: 11pt;">adc</a>
	

	
		<a href="/tag/bluetooth/" style="font-size: 14pt;">bluetooth</a>
	

	
		<a href="/tag/tim/" style="font-size: 23pt;">tim</a>
	

	
		<a href="/tag/programmator/" style="font-size: 12pt;">programmator</a>
	

	
		<a href="/tag/meteo/" style="font-size: 13pt;">meteo</a>
	

	
		<a href="/tag/sensors/" style="font-size: 16pt;">sensors</a>
	

	
		<a href="/tag/led/" style="font-size: 10pt;">led</a>
	

	
		<a href="/tag/python/" style="font-size: 19pt;">python</a>
	

	
		<a href="/tag/websocket/" style="font-size: 20pt;">websocket</a>
	

	
		<a href="/tag/hih-4000/" style="font-size: 15pt;">hih-4000</a>
	

	
		<a href="/tag/html/" style="font-size: 10pt;">html</a>
	

	
		<a href="/tag/pmsm/" style="font-size: 19pt;">pmsm</a>
	

	
		<a href="/tag/mongodb/" style="font-size: 12pt;">mongodb</a>
	

	
		<a href="/tag/bmp280/" style="font-size: 11pt;">bmp280</a>
	

	
		<a href="/tag/gps/" style="font-size: 22pt;">gps</a>
	

	
		<a href="/tag/encoder/" style="font-size: 18pt;">encoder</a>
	

	
		<a href="/tag/displays/" style="font-size: 17pt;">displays</a>
	

	
		<a href="/tag/smd/" style="font-size: 12pt;">smd</a>
	

	
		<a href="/tag/stm32/" style="font-size: 23pt;">stm32</a>
	

	
		<a href="/tag/css/" style="font-size: 16pt;">css</a>
	

	
		<a href="/tag/git/" style="font-size: 16pt;">git</a>
	

	
		<a href="/tag/examples/" style="font-size: 10pt;">examples</a>
	

	
		<a href="/tag/rs-232/" style="font-size: 14pt;">rs-232</a>
	

	
		<a href="/tag/ethernet/" style="font-size: 16pt;">ethernet</a>
	

	
		<a href="/tag/brushless/" style="font-size: 13pt;">brushless</a>
	

	
		<a href="/tag/3d-printer/" style="font-size: 21pt;">3d-printer</a>
	

	
		<a href="/tag/watchdog/" style="font-size: 20pt;">watchdog</a>
	

	
		<a href="/tag/max1674/" style="font-size: 14pt;">max1674</a>
	

	
		<a href="/tag/exti/" style="font-size: 22pt;">exti</a>
	

	
		<a href="/tag/atmega/" style="font-size: 22pt;">atmega</a>
	

	
		<a href="/tag/options/" style="font-size: 19pt;">options</a>
	

	
		<a href="/tag/battery/" style="font-size: 20pt;">battery</a>
	

	
		<a href="/tag/uart/" style="font-size: 16pt;">uart</a>
	

	
		<a href="/tag/wifi/" style="font-size: 19pt;">wifi</a>
	

	
		<a href="/tag/bkp/" style="font-size: 19pt;">bkp</a>
	

	
		<a href="/tag/piezo/" style="font-size: 12pt;">piezo</a>
	

	
		<a href="/tag/web/" style="font-size: 20pt;">web</a>
	

    </p>
  </div>
</div>


<div class="card border border-secondary rounded bg-light mb-2">
  <div class="card-body">
    <h3 class="card-title">Архіви</h3>
    <p class="card-text">
<script>
function goto_archive() {
	let archive_value = document.getElementById('archive_value').value
	if (archive_value != '') {
		window.location.href = '/archive/' + archive_value + '/';
	}
	return false
}
</script>
<label for="archive_value">оберіть місяць:&nbsp;
<select id="archive_value" class="form-control form-control-sm border-secondary auto-width" onchange="goto_archive()">
	<option value="">оберіть місяць</option>

	<option value="05-2024" >Травень 2024</option>

	<option value="04-2024" >Квітень 2024</option>

	<option value="03-2024" >Березень 2024</option>

	<option value="12-2023" >Грудень 2023</option>

	<option value="11-2023" >Листопад 2023</option>

	<option value="10-2023" >Жовтень 2023</option>

	<option value="03-2023" >Березень 2023</option>

	<option value="12-2022" >Грудень 2022</option>

	<option value="09-2022" >Вересень 2022</option>

	<option value="07-2022" >Липень 2022</option>

	<option value="06-2022" >Червень 2022</option>

	<option value="05-2022" >Травень 2022</option>

	<option value="04-2022" >Квітень 2022</option>

	<option value="02-2022" >Лютий 2022</option>

	<option value="01-2022" >Січень 2022</option>

	<option value="11-2021" >Листопад 2021</option>

	<option value="10-2011" >Жовтень 2011</option>

	<option value="08-2021" >Серпень 2021</option>

	<option value="06-2021" >Червень 2021</option>

	<option value="05-2021" >Травень 2021</option>

	<option value="01-2021" >Січень 2021</option>

	<option value="09-2020" >Вересень 2020</option>

	<option value="08-2020" >Серпень 2020</option>

	<option value="06-2020" >Червень 2020</option>

	<option value="05-2020" >Травень 2020</option>

	<option value="04-2020" >Квітень 2020</option>

	<option value="03-2020" >Березень 2020</option>

	<option value="02-2020" >Лютий 2020</option>

	<option value="01-2020" >Січень 2020</option>

	<option value="12-2019" >Грудень 2019</option>

	<option value="09-2019" >Вересень 2019</option>

	<option value="08-2019" >Серпень 2019</option>

	<option value="06-2019" >Червень 2019</option>

	<option value="07-2019" >Липень 2019</option>

	<option value="03-2019" >Березень 2019</option>

	<option value="01-2019" >Січень 2019</option>

	<option value="02-2019" >Лютий 2019</option>

	<option value="05-2019" >Травень 2019</option>

	<option value="12-2018" >Грудень 2018</option>

	<option value="06-2018" >Червень 2018</option>

	<option value="09-2018" >Вересень 2018</option>

	<option value="11-2018" >Листопад 2018</option>

	<option value="10-2018" >Жовтень 2018</option>

	<option value="08-2018" >Серпень 2018</option>

	<option value="07-2018" >Липень 2018</option>

	<option value="04-2018" >Квітень 2018</option>

	<option value="03-2018" >Березень 2018</option>

	<option value="02-2018" >Лютий 2018</option>

	<option value="01-2018" >Січень 2018</option>

	<option value="11-2017" >Листопад 2017</option>

	<option value="09-2017" >Вересень 2017</option>

	<option value="08-2017" >Серпень 2017</option>

	<option value="12-2016" >Грудень 2016</option>

	<option value="02-2016" >Лютий 2016</option>

	<option value="07-2015" >Липень 2015</option>

	<option value="04-2015" >Квітень 2015</option>

	<option value="11-2014" >Листопад 2014</option>

	<option value="07-2017" >Липень 2017</option>

	<option value="06-2017" >Червень 2017</option>

	<option value="05-2017" >Травень 2017</option>

	<option value="04-2017" >Квітень 2017</option>

	<option value="03-2017" >Березень 2017</option>

	<option value="02-2017" >Лютий 2017</option>

	<option value="01-2017" >Січень 2017</option>

	<option value="11-2016" >Листопад 2016</option>

	<option value="10-2016" >Жовтень 2016</option>

	<option value="09-2016" >Вересень 2016</option>

	<option value="08-2016" >Серпень 2016</option>

	<option value="06-2016" >Червень 2016</option>

	<option value="04-2016" >Квітень 2016</option>

	<option value="03-2016" >Березень 2016</option>

	<option value="01-2016" >Січень 2016</option>

	<option value="12-2015" >Грудень 2015</option>

	<option value="11-2015" >Листопад 2015</option>

	<option value="09-2015" >Вересень 2015</option>

	<option value="08-2015" >Серпень 2015</option>

	<option value="06-2015" >Червень 2015</option>

	<option value="05-2015" >Травень 2015</option>

	<option value="03-2015" >Березень 2015</option>

	<option value="01-2015" >Січень 2015</option>

	<option value="12-2014" >Грудень 2014</option>

	<option value="10-2015" >Жовтень 2015</option>

	<option value="10-2014" >Жовтень 2014</option>

	<option value="09-2014" >Вересень 2014</option>

	<option value="08-2014" >Серпень 2014</option>

	<option value="06-2014" >Червень 2014</option>

	<option value="05-2014" >Травень 2014</option>

	<option value="04-2014" >Квітень 2014</option>

	<option value="03-2014" >Березень 2014</option>

	<option value="02-2014" >Лютий 2014</option>

	<option value="12-2013" >Грудень 2013</option>

	<option value="11-2013" >Листопад 2013</option>

	<option value="10-2013" >Жовтень 2013</option>

	<option value="09-2013" >Вересень 2013</option>

	<option value="08-2013" >Серпень 2013</option>

	<option value="07-2013" >Липень 2013</option>

	<option value="04-2013" >Квітень 2013</option>

	<option value="05-2013" >Травень 2013</option>

	<option value="03-2013" >Березень 2013</option>

	<option value="02-2013" >Лютий 2013</option>

	<option value="01-2013" >Січень 2013</option>

	<option value="12-2012" >Грудень 2012</option>

	<option value="11-2012" >Листопад 2012</option>

	<option value="10-2012" >Жовтень 2012</option>

	<option value="09-2012" >Вересень 2012</option>

	<option value="08-2012" >Серпень 2012</option>

	<option value="07-2012" >Липень 2012</option>

	<option value="06-2012" >Червень 2012</option>

	<option value="03-2012" >Березень 2012</option>

	<option value="04-2012" >Квітень 2012</option>

	<option value="01-2012" >Січень 2012</option>

	<option value="11-2011" >Листопад 2011</option>

	<option value="08-2011" >Серпень 2011</option>

	<option value="09-2011" >Вересень 2011</option>

	<option value="06-2011" >Червень 2011</option>

	<option value="07-2011" >Липень 2011</option>

	<option value="05-2011" >Травень 2011</option>

	<option value="04-2011" >Квітень 2011</option>

	<option value="03-2011" >Березень 2011</option>

	<option value="02-2011" >Лютий 2011</option>

	<option value="05-2023" >Травень 2023</option>

	<option value="06-2023" >Червень 2023</option>

</select>
</label>
    </p>
  </div>
</div>








        </div>
      </div>

<div class="row">
<div class="col-12">
  
</div>
</div>

    </div>
  </main>

  <footer class="mastfoot mt-auto">
    <div class="inner row">
      <div class="col-md-auto">
        © 2011-2024 Андрій Корягін, Україна.<br />
        Created by Golang
        <span class="ml-2">Hosting: <a href="https://deltahost.ua" target="_block">Deltahost</a></span>
      </div>
      <div class="col-md-2 text-right">
        <a href="/feed/"><img width="32" height="32" title="RSS" alt="RSS" src="/css/rss.svg"></a>
      </div>
    </div>
  </footer>

<script type="text/javascript" src="/js/popper.min.js"></script>
<script type="text/javascript" src="/js/bootstrap.min.js"></script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-42248643-1', 'avislab.com');
  ga('send', 'pageview');

</script>


<script src="https://fuga.avislab.com/js/fuga.min.js" id="fuga" data-id="1" async></script>


</body>
</html>
